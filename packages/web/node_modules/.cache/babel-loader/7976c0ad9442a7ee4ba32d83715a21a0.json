{"ast":null,"code":"import _classCallCheck from \"/Users/decrytal-ade/project/work/shlab/labelU-Kit/packages/web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/decrytal-ade/project/work/shlab/labelU-Kit/packages/web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { CHANGE_COLOR as o, DEFAULT_COLOR as p, COLORS_ARRAY as u, NULL_COLOR as C, BORDER_OPACITY_LEVEL as k, FILL_OPACITY_LEVEL as O } from \"../data/Style.js\";\nimport f from \"lodash\";\nvar v = .8,\n  c = /*#__PURE__*/function () {\n    function c() {\n      _classCallCheck(this, c);\n    }\n    _createClass(c, null, [{\n      key: \"colorSplit\",\n      value: function colorSplit(a, s) {\n        return a.split(\" \").join(\"\").replace(/,[0-9]+([.]{1}[0-9]+){0,1}\\)/, \",\".concat(s.toFixed(2), \")\"));\n      }\n    }, {\n      key: \"computeOpacity\",\n      value: function computeOpacity(a, s) {\n        var e, t;\n        var r = (t = (((e = s.split(\" \").join(\"\").match(/,[0-9]+([.]{1}[0-9]+){0,1}\\)/)) == null ? void 0 : e[0]) || \"\").match(/[0-9]+([.]{1}[0-9]+){0,1}/)) == null ? void 0 : t[0];\n        return a * Number(r);\n      }\n    }, {\n      key: \"getToolColors\",\n      value: function getToolColors() {\n        var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 9;\n        var s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 9;\n        var e = c.colorSplit,\n          t = c.computeOpacity,\n          n = f.cloneDeep(o),\n          r = k[a],\n          d = O[s];\n        return Object.keys(o).forEach(function (i) {\n          var l = f.cloneDeep(p);\n          l.valid.stroke = e(o[i].valid, t(r, o[i].valid)), l.valid.fill = e(o[i].valid, t(d, o[i].valid) * v), l.validSelected.stroke = e(o[i].select.stroke, t(r, o[i].select.stroke)), l.validSelected.fill = e(o[i].select.fill, t(d, o[i].select.fill) * v), l.validHover.stroke = e(o[i].hover, t(r, o[i].hover)), l.validHover.fill = e(o[i].hover, t(d, o[i].hover) * v), l.invalid.stroke = e(l.invalid.stroke, t(r, l.invalid.stroke)), l.invalid.fill = e(l.invalid.stroke, t(d, l.invalid.stroke) * v), l.invalidSelected.stroke = e(l.invalidSelected.stroke, t(r, l.invalidSelected.stroke)), l.invalidSelected.fill = e(l.invalidSelected.fill, t(d, l.invalidSelected.fill) * v), l.invalidHover.stroke = e(l.invalidHover.stroke, t(r, l.invalidHover.fill)), l.invalidHover.fill = e(l.invalidHover.fill, t(d, l.invalidHover.fill) * v), n[i] = l;\n        }), n;\n      }\n    }, {\n      key: \"getAttributeColors\",\n      value: function getAttributeColors() {\n        var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 9;\n        var s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 9;\n        var e = c.colorSplit,\n          t = c.computeOpacity,\n          n = k[a],\n          r = O[s];\n        var d = f.cloneDeep(u);\n        return d.unshift(C), d = d.map(function (i) {\n          var l = JSON.parse(JSON.stringify(p));\n          return l.valid.stroke = e(i, t(n, i)), l.valid.fill = e(i, t(r, i) * v * .5), l.validSelected.stroke = e(i, t(n, i)), l.validSelected.fill = e(i, t(r, i) * v), l.validHover.stroke = e(i, t(n, i)), l.validHover.fill = e(i, t(r, i) * v), l.invalid.stroke = e(l.invalid.stroke, t(n, i)), l.invalid.fill = e(l.invalid.fill, t(r, i) * v * .5), l.invalidSelected.stroke = e(l.invalidSelected.stroke, t(n, i)), l.invalidSelected.fill = e(l.invalidSelected.fill, t(r, i) * v), l.invalidHover.stroke = e(l.invalidHover.stroke, t(n, i)), l.invalidHover.fill = e(l.invalidHover.fill, t(r, i) * v), l;\n        }), d;\n      }\n    }, {\n      key: \"getDefaultToolLineColors\",\n      value: function getDefaultToolLineColors() {\n        var a = {};\n        return Object.keys(o).forEach(function (s) {\n          a[s] = o[s].line;\n        }), a;\n      }\n    }, {\n      key: \"initByOpacity\",\n      value: function initByOpacity(a, s) {\n        return {\n          toolColor: this.getToolColors(a, s),\n          attributeColor: this.getAttributeColors(a, s)\n        };\n      }\n    }]);\n    return c;\n  }();\nvar S = c;\nS.changeOpacity = {\n  1: .2,\n  3: .4,\n  5: .6,\n  7: .8,\n  9: 1\n};\nexport { S as ToolStyleUtils };","map":null,"metadata":{},"sourceType":"module"}