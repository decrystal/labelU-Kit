{"ast":null,"code":"ace.define(\"ace/keyboard/sublime\", [\"require\", \"exports\", \"module\", \"ace/keyboard/hash_handler\"], function (require, exports, module) {\n  \"use strict\";\n\n  var HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\n  function moveBySubWords(editor, direction, extend) {\n    var selection = editor.selection;\n    var row = selection.lead.row;\n    var column = selection.lead.column;\n    var line = editor.session.getLine(row);\n    if (!line[column + direction]) {\n      var method = (extend ? \"selectWord\" : \"moveCursorShortWord\") + (direction == 1 ? \"Right\" : \"Left\");\n      return editor.selection[method]();\n    }\n    if (direction == -1) column--;\n    while (line[column]) {\n      var type = getType(line[column]) + getType(line[column + direction]);\n      column += direction;\n      if (direction == 1) {\n        if (type == \"WW\" && getType(line[column + 1]) == \"w\") break;\n      } else {\n        if (type == \"wW\") {\n          if (getType(line[column - 1]) == \"W\") {\n            column -= 1;\n            break;\n          } else {\n            continue;\n          }\n        }\n        if (type == \"Ww\") break;\n      }\n      if (/w[s_oW]|_[sWo]|o[s_wW]|s[W]|W[so]/.test(type)) break;\n    }\n    if (direction == -1) column++;\n    if (extend) editor.selection.moveCursorTo(row, column);else editor.selection.moveTo(row, column);\n    function getType(x) {\n      if (!x) return \"-\";\n      if (/\\s/.test(x)) return \"s\";\n      if (x == \"_\") return \"_\";\n      if (x.toUpperCase() == x && x.toLowerCase() != x) return \"W\";\n      if (x.toUpperCase() != x && x.toLowerCase() == x) return \"w\";\n      return \"o\";\n    }\n  }\n  exports.handler = new HashHandler();\n  exports.handler.addCommands([{\n    name: \"find_all_under\",\n    exec: function exec(editor) {\n      if (editor.selection.isEmpty()) editor.selection.selectWord();\n      editor.findAll();\n    },\n    readOnly: true\n  }, {\n    name: \"find_under\",\n    exec: function exec(editor) {\n      if (editor.selection.isEmpty()) editor.selection.selectWord();\n      editor.findNext();\n    },\n    readOnly: true\n  }, {\n    name: \"find_under_prev\",\n    exec: function exec(editor) {\n      if (editor.selection.isEmpty()) editor.selection.selectWord();\n      editor.findPrevious();\n    },\n    readOnly: true\n  }, {\n    name: \"find_under_expand\",\n    exec: function exec(editor) {\n      editor.selectMore(1, false, true);\n    },\n    scrollIntoView: \"animate\",\n    readOnly: true\n  }, {\n    name: \"find_under_expand_skip\",\n    exec: function exec(editor) {\n      editor.selectMore(1, true, true);\n    },\n    scrollIntoView: \"animate\",\n    readOnly: true\n  }, {\n    name: \"delete_to_hard_bol\",\n    exec: function exec(editor) {\n      var pos = editor.selection.getCursor();\n      editor.session.remove({\n        start: {\n          row: pos.row,\n          column: 0\n        },\n        end: pos\n      });\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\"\n  }, {\n    name: \"delete_to_hard_eol\",\n    exec: function exec(editor) {\n      var pos = editor.selection.getCursor();\n      editor.session.remove({\n        start: pos,\n        end: {\n          row: pos.row,\n          column: Infinity\n        }\n      });\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\"\n  }, {\n    name: \"moveToWordStartLeft\",\n    exec: function exec(editor) {\n      editor.selection.moveCursorLongWordLeft();\n      editor.clearSelection();\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\"\n  }, {\n    name: \"moveToWordEndRight\",\n    exec: function exec(editor) {\n      editor.selection.moveCursorLongWordRight();\n      editor.clearSelection();\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\"\n  }, {\n    name: \"selectToWordStartLeft\",\n    exec: function exec(editor) {\n      var sel = editor.selection;\n      sel.$moveSelection(sel.moveCursorLongWordLeft);\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\"\n  }, {\n    name: \"selectToWordEndRight\",\n    exec: function exec(editor) {\n      var sel = editor.selection;\n      sel.$moveSelection(sel.moveCursorLongWordRight);\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\"\n  }, {\n    name: \"selectSubWordRight\",\n    exec: function exec(editor) {\n      moveBySubWords(editor, 1, true);\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\",\n    readOnly: true\n  }, {\n    name: \"selectSubWordLeft\",\n    exec: function exec(editor) {\n      moveBySubWords(editor, -1, true);\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\",\n    readOnly: true\n  }, {\n    name: \"moveSubWordRight\",\n    exec: function exec(editor) {\n      moveBySubWords(editor, 1);\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\",\n    readOnly: true\n  }, {\n    name: \"moveSubWordLeft\",\n    exec: function exec(editor) {\n      moveBySubWords(editor, -1);\n    },\n    multiSelectAction: \"forEach\",\n    scrollIntoView: \"cursor\",\n    readOnly: true\n  }]);\n  [{\n    bindKey: {\n      mac: \"cmd-k cmd-backspace|cmd-backspace\",\n      win: \"ctrl-shift-backspace|ctrl-k ctrl-backspace\"\n    },\n    name: \"removetolinestarthard\"\n  }, {\n    bindKey: {\n      mac: \"cmd-k cmd-k|cmd-delete|ctrl-k\",\n      win: \"ctrl-shift-delete|ctrl-k ctrl-k\"\n    },\n    name: \"removetolineendhard\"\n  }, {\n    bindKey: {\n      mac: \"cmd-shift-d\",\n      win: \"ctrl-shift-d\"\n    },\n    name: \"duplicateSelection\"\n  }, {\n    bindKey: {\n      mac: \"cmd-l\",\n      win: \"ctrl-l\"\n    },\n    name: \"expandtoline\"\n  }, {\n    bindKey: {\n      mac: \"cmd-shift-a\",\n      win: \"ctrl-shift-a\"\n    },\n    name: \"expandSelection\",\n    args: {\n      to: \"tag\"\n    }\n  }, {\n    bindKey: {\n      mac: \"cmd-shift-j\",\n      win: \"ctrl-shift-j\"\n    },\n    name: \"expandSelection\",\n    args: {\n      to: \"indentation\"\n    }\n  }, {\n    bindKey: {\n      mac: \"ctrl-shift-m\",\n      win: \"ctrl-shift-m\"\n    },\n    name: \"expandSelection\",\n    args: {\n      to: \"brackets\"\n    }\n  }, {\n    bindKey: {\n      mac: \"cmd-shift-space\",\n      win: \"ctrl-shift-space\"\n    },\n    name: \"expandSelection\",\n    args: {\n      to: \"scope\"\n    }\n  }, {\n    bindKey: {\n      mac: \"ctrl-cmd-g\",\n      win: \"alt-f3\"\n    },\n    name: \"find_all_under\"\n  }, {\n    bindKey: {\n      mac: \"alt-cmd-g\",\n      win: \"ctrl-f3\"\n    },\n    name: \"find_under\"\n  }, {\n    bindKey: {\n      mac: \"shift-alt-cmd-g\",\n      win: \"ctrl-shift-f3\"\n    },\n    name: \"find_under_prev\"\n  }, {\n    bindKey: {\n      mac: \"cmd-g\",\n      win: \"f3\"\n    },\n    name: \"findnext\"\n  }, {\n    bindKey: {\n      mac: \"shift-cmd-g\",\n      win: \"shift-f3\"\n    },\n    name: \"findprevious\"\n  }, {\n    bindKey: {\n      mac: \"cmd-d\",\n      win: \"ctrl-d\"\n    },\n    name: \"find_under_expand\"\n  }, {\n    bindKey: {\n      mac: \"cmd-k cmd-d\",\n      win: \"ctrl-k ctrl-d\"\n    },\n    name: \"find_under_expand_skip\"\n  }, {\n    bindKey: {\n      mac: \"cmd-alt-[\",\n      win: \"ctrl-shift-[\"\n    },\n    name: \"toggleFoldWidget\"\n  }, {\n    bindKey: {\n      mac: \"cmd-alt-]\",\n      win: \"ctrl-shift-]\"\n    },\n    name: \"unfold\"\n  }, {\n    bindKey: {\n      mac: \"cmd-k cmd-0|cmd-k cmd-j\",\n      win: \"ctrl-k ctrl-0|ctrl-k ctrl-j\"\n    },\n    name: \"unfoldall\"\n  }, {\n    bindKey: {\n      mac: \"cmd-k cmd-1\",\n      win: \"ctrl-k ctrl-1\"\n    },\n    name: \"foldOther\",\n    args: {\n      level: 1\n    }\n  }, {\n    bindKey: {\n      win: \"ctrl-left\",\n      mac: \"alt-left\"\n    },\n    name: \"moveToWordStartLeft\"\n  }, {\n    bindKey: {\n      win: \"ctrl-right\",\n      mac: \"alt-right\"\n    },\n    name: \"moveToWordEndRight\"\n  }, {\n    bindKey: {\n      win: \"ctrl-shift-left\",\n      mac: \"alt-shift-left\"\n    },\n    name: \"selectToWordStartLeft\"\n  }, {\n    bindKey: {\n      win: \"ctrl-shift-right\",\n      mac: \"alt-shift-right\"\n    },\n    name: \"selectToWordEndRight\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-alt-shift-right|ctrl-shift-right\",\n      win: \"alt-shift-right\"\n    },\n    name: \"selectSubWordRight\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-alt-shift-left|ctrl-shift-left\",\n      win: \"alt-shift-left\"\n    },\n    name: \"selectSubWordLeft\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-alt-right|ctrl-right\",\n      win: \"alt-right\"\n    },\n    name: \"moveSubWordRight\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-alt-left|ctrl-left\",\n      win: \"alt-left\"\n    },\n    name: \"moveSubWordLeft\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-m\",\n      win: \"ctrl-m\"\n    },\n    name: \"jumptomatching\",\n    args: {\n      to: \"brackets\"\n    }\n  }, {\n    bindKey: {\n      mac: \"ctrl-f6\",\n      win: \"ctrl-f6\"\n    },\n    name: \"goToNextError\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-shift-f6\",\n      win: \"ctrl-shift-f6\"\n    },\n    name: \"goToPreviousError\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-o\"\n    },\n    name: \"splitline\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-shift-w\",\n      win: \"alt-shift-w\"\n    },\n    name: \"surrowndWithTag\"\n  }, {\n    bindKey: {\n      mac: \"cmd-alt-.\",\n      win: \"alt-.\"\n    },\n    name: \"close_tag\"\n  }, {\n    bindKey: {\n      mac: \"cmd-j\",\n      win: \"ctrl-j\"\n    },\n    name: \"joinlines\"\n  }, {\n    bindKey: {\n      mac: \"ctrl--\",\n      win: \"alt--\"\n    },\n    name: \"jumpBack\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-shift--\",\n      win: \"alt-shift--\"\n    },\n    name: \"jumpForward\"\n  }, {\n    bindKey: {\n      mac: \"cmd-k cmd-l\",\n      win: \"ctrl-k ctrl-l\"\n    },\n    name: \"tolowercase\"\n  }, {\n    bindKey: {\n      mac: \"cmd-k cmd-u\",\n      win: \"ctrl-k ctrl-u\"\n    },\n    name: \"touppercase\"\n  }, {\n    bindKey: {\n      mac: \"cmd-shift-v\",\n      win: \"ctrl-shift-v\"\n    },\n    name: \"paste_and_indent\"\n  }, {\n    bindKey: {\n      mac: \"cmd-k cmd-v|cmd-alt-v\",\n      win: \"ctrl-k ctrl-v\"\n    },\n    name: \"paste_from_history\"\n  }, {\n    bindKey: {\n      mac: \"cmd-shift-enter\",\n      win: \"ctrl-shift-enter\"\n    },\n    name: \"addLineBefore\"\n  }, {\n    bindKey: {\n      mac: \"cmd-enter\",\n      win: \"ctrl-enter\"\n    },\n    name: \"addLineAfter\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-shift-k\",\n      win: \"ctrl-shift-k\"\n    },\n    name: \"removeline\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-alt-up\",\n      win: \"ctrl-up\"\n    },\n    name: \"scrollup\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-alt-down\",\n      win: \"ctrl-down\"\n    },\n    name: \"scrolldown\"\n  }, {\n    bindKey: {\n      mac: \"cmd-a\",\n      win: \"ctrl-a\"\n    },\n    name: \"selectall\"\n  }, {\n    bindKey: {\n      linux: \"alt-shift-down\",\n      mac: \"ctrl-shift-down\",\n      win: \"ctrl-alt-down\"\n    },\n    name: \"addCursorBelow\"\n  }, {\n    bindKey: {\n      linux: \"alt-shift-up\",\n      mac: \"ctrl-shift-up\",\n      win: \"ctrl-alt-up\"\n    },\n    name: \"addCursorAbove\"\n  }, {\n    bindKey: {\n      mac: \"cmd-k cmd-c|ctrl-l\",\n      win: \"ctrl-k ctrl-c\"\n    },\n    name: \"centerselection\"\n  }, {\n    bindKey: {\n      mac: \"f5\",\n      win: \"f9\"\n    },\n    name: \"sortlines\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-f5\",\n      win: \"ctrl-f9\"\n    },\n    name: \"sortlines\",\n    args: {\n      caseSensitive: true\n    }\n  }, {\n    bindKey: {\n      mac: \"cmd-shift-l\",\n      win: \"ctrl-shift-l\"\n    },\n    name: \"splitSelectionIntoLines\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-cmd-down\",\n      win: \"ctrl-shift-down\"\n    },\n    name: \"movelinesdown\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-cmd-up\",\n      win: \"ctrl-shift-up\"\n    },\n    name: \"movelinesup\"\n  }, {\n    bindKey: {\n      mac: \"alt-down\",\n      win: \"alt-down\"\n    },\n    name: \"modifyNumberDown\"\n  }, {\n    bindKey: {\n      mac: \"alt-up\",\n      win: \"alt-up\"\n    },\n    name: \"modifyNumberUp\"\n  }, {\n    bindKey: {\n      mac: \"cmd-/\",\n      win: \"ctrl-/\"\n    },\n    name: \"togglecomment\"\n  }, {\n    bindKey: {\n      mac: \"cmd-alt-/\",\n      win: \"ctrl-shift-/\"\n    },\n    name: \"toggleBlockComment\"\n  }, {\n    bindKey: {\n      linux: \"ctrl-alt-q\",\n      mac: \"ctrl-q\",\n      win: \"ctrl-q\"\n    },\n    name: \"togglerecording\"\n  }, {\n    bindKey: {\n      linux: \"ctrl-alt-shift-q\",\n      mac: \"ctrl-shift-q\",\n      win: \"ctrl-shift-q\"\n    },\n    name: \"replaymacro\"\n  }, {\n    bindKey: {\n      mac: \"ctrl-t\",\n      win: \"ctrl-t\"\n    },\n    name: \"transpose\"\n  }].forEach(function (binding) {\n    var command = exports.handler.commands[binding.name];\n    if (command) command.bindKey = binding.bindKey;\n    exports.handler.bindKey(binding.bindKey, command || binding.name);\n  });\n});\n(function () {\n  ace.require([\"ace/keyboard/sublime\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}