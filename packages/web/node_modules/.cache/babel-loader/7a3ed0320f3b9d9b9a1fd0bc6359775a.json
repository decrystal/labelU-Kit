{"ast":null,"code":"ace.define(\"ace/ext/linking\", [\"require\", \"exports\", \"module\", \"ace/editor\", \"ace/config\"], function (require, exports, module) {\n  var Editor = require(\"../editor\").Editor;\n  require(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    enableLinking: {\n      set: function set(val) {\n        if (val) {\n          this.on(\"click\", onClick);\n          this.on(\"mousemove\", onMouseMove);\n        } else {\n          this.off(\"click\", onClick);\n          this.off(\"mousemove\", onMouseMove);\n        }\n      },\n      value: false\n    }\n  });\n  exports.previousLinkingHover = false;\n  function onMouseMove(e) {\n    var editor = e.editor;\n    var ctrl = e.getAccelKey();\n    if (ctrl) {\n      var editor = e.editor;\n      var docPos = e.getDocumentPosition();\n      var session = editor.session;\n      var token = session.getTokenAt(docPos.row, docPos.column);\n      if (exports.previousLinkingHover && exports.previousLinkingHover != token) {\n        editor._emit(\"linkHoverOut\");\n      }\n      editor._emit(\"linkHover\", {\n        position: docPos,\n        token: token\n      });\n      exports.previousLinkingHover = token;\n    } else if (exports.previousLinkingHover) {\n      editor._emit(\"linkHoverOut\");\n      exports.previousLinkingHover = false;\n    }\n  }\n  function onClick(e) {\n    var ctrl = e.getAccelKey();\n    var button = e.getButton();\n    if (button == 0 && ctrl) {\n      var editor = e.editor;\n      var docPos = e.getDocumentPosition();\n      var session = editor.session;\n      var token = session.getTokenAt(docPos.row, docPos.column);\n      editor._emit(\"linkClick\", {\n        position: docPos,\n        token: token\n      });\n    }\n  }\n});\n(function () {\n  ace.require([\"ace/ext/linking\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}