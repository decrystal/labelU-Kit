{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAceInstance = exports.debounce = exports.editorEvents = exports.editorOptions = void 0;\nvar editorOptions = [\"minLines\", \"maxLines\", \"readOnly\", \"highlightActiveLine\", \"tabSize\", \"enableBasicAutocompletion\", \"enableLiveAutocompletion\", \"enableSnippets\"];\nexports.editorOptions = editorOptions;\nvar editorEvents = [\"onChange\", \"onFocus\", \"onInput\", \"onBlur\", \"onCopy\", \"onPaste\", \"onSelectionChange\", \"onCursorChange\", \"onScroll\", \"handleOptions\", \"updateRef\"];\nexports.editorEvents = editorEvents;\nvar getAceInstance = function getAceInstance() {\n  var ace;\n  if (typeof window === \"undefined\") {\n    // ace-builds just needs some window object to attach ace to.\n    // During SSR even just an empty object will work.\n    global.window = {};\n    ace = require(\"ace-builds\");\n    // And it can be discarded immediately afterward to avoid confusing\n    // other libraries that might detect SSR the same way we did.\n    delete global.window;\n  } else if (window.ace) {\n    // Fallback for ace.require when vanilla ACE is hosted over a CDN\n    ace = window.ace;\n    ace.acequire = window.ace.require || window.ace.acequire;\n  } else {\n    ace = require(\"ace-builds\");\n  }\n  return ace;\n};\nexports.getAceInstance = getAceInstance;\nvar debounce = function debounce(fn, delay) {\n  var timer = null;\n  // tslint:disable-next-line\n  return function () {\n    var context = this;\n    var args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  };\n};\nexports.debounce = debounce;","map":null,"metadata":{},"sourceType":"script"}