{"ast":null,"code":"\"no use strict\";\n\n!function (window) {\n  if (typeof window.window != \"undefined\" && window.document) return;\n  if (window.require && window.define) return;\n  if (!window.console) {\n    window.console = function () {\n      var msgs = Array.prototype.slice.call(arguments, 0);\n      postMessage({\n        type: \"log\",\n        data: msgs\n      });\n    };\n    window.console.error = window.console.warn = window.console.log = window.console.trace = window.console;\n  }\n  window.window = window;\n  window.ace = window;\n  window.onerror = function (message, file, line, col, err) {\n    postMessage({\n      type: \"error\",\n      data: {\n        message: message,\n        data: err && err.data,\n        file: file,\n        line: line,\n        col: col,\n        stack: err && err.stack\n      }\n    });\n  };\n  window.normalizeModule = function (parentId, moduleName) {\n    // normalize plugin requires\n    if (moduleName.indexOf(\"!\") !== -1) {\n      var chunks = moduleName.split(\"!\");\n      return window.normalizeModule(parentId, chunks[0]) + \"!\" + window.normalizeModule(parentId, chunks[1]);\n    }\n    // normalize relative requires\n    if (moduleName.charAt(0) == \".\") {\n      var base = parentId.split(\"/\").slice(0, -1).join(\"/\");\n      moduleName = (base ? base + \"/\" : \"\") + moduleName;\n      while (moduleName.indexOf(\".\") !== -1 && previous != moduleName) {\n        var previous = moduleName;\n        moduleName = moduleName.replace(/^\\.\\//, \"\").replace(/\\/\\.\\//, \"/\").replace(/[^\\/]+\\/\\.\\.\\//, \"\");\n      }\n    }\n    return moduleName;\n  };\n  window.require = function require(parentId, id) {\n    if (!id) {\n      id = parentId;\n      parentId = null;\n    }\n    if (!id.charAt) throw new Error(\"worker.js require() accepts only (parentId, id) as arguments\");\n    id = window.normalizeModule(parentId, id);\n    var module = window.require.modules[id];\n    if (module) {\n      if (!module.initialized) {\n        module.initialized = true;\n        module.exports = module.factory().exports;\n      }\n      return module.exports;\n    }\n    if (!window.require.tlns) return console.log(\"unable to load \" + id);\n    var path = resolveModuleId(id, window.require.tlns);\n    if (path.slice(-3) != \".js\") path += \".js\";\n    window.require.id = id;\n    window.require.modules[id] = {}; // prevent infinite loop on broken modules\n    importScripts(path);\n    return window.require(parentId, id);\n  };\n  function resolveModuleId(id, paths) {\n    var testPath = id,\n      tail = \"\";\n    while (testPath) {\n      var alias = paths[testPath];\n      if (typeof alias == \"string\") {\n        return alias + tail;\n      } else if (alias) {\n        return alias.location.replace(/\\/*$/, \"/\") + (tail || alias.main || alias.name);\n      } else if (alias === false) {\n        return \"\";\n      }\n      var i = testPath.lastIndexOf(\"/\");\n      if (i === -1) break;\n      tail = testPath.substr(i) + tail;\n      testPath = testPath.slice(0, i);\n    }\n    return id;\n  }\n  window.require.modules = {};\n  window.require.tlns = {};\n  window.define = function (id, deps, _factory) {\n    if (arguments.length == 2) {\n      _factory = deps;\n      if (typeof id != \"string\") {\n        deps = id;\n        id = window.require.id;\n      }\n    } else if (arguments.length == 1) {\n      _factory = id;\n      deps = [];\n      id = window.require.id;\n    }\n    if (typeof _factory != \"function\") {\n      window.require.modules[id] = {\n        exports: _factory,\n        initialized: true\n      };\n      return;\n    }\n    if (!deps.length)\n      // If there is no dependencies, we inject \"require\", \"exports\" and\n      // \"module\" as dependencies, to provide CommonJS compatibility.\n      deps = [\"require\", \"exports\", \"module\"];\n    var req = function req(childId) {\n      return window.require(id, childId);\n    };\n    window.require.modules[id] = {\n      exports: {},\n      factory: function factory() {\n        var module = this;\n        var returnExports = _factory.apply(this, deps.slice(0, _factory.length).map(function (dep) {\n          switch (dep) {\n            // Because \"require\", \"exports\" and \"module\" aren't actual\n            // dependencies, we must handle them seperately.\n            case \"require\":\n              return req;\n            case \"exports\":\n              return module.exports;\n            case \"module\":\n              return module;\n            // But for all other dependencies, we can just go ahead and\n            // require them.\n            default:\n              return req(dep);\n          }\n        }));\n        if (returnExports) module.exports = returnExports;\n        return module;\n      }\n    };\n  };\n  window.define.amd = {};\n  window.require.tlns = {};\n  window.initBaseUrls = function initBaseUrls(topLevelNamespaces) {\n    for (var i in topLevelNamespaces) this.require.tlns[i] = topLevelNamespaces[i];\n  };\n  window.initSender = function initSender() {\n    var EventEmitter = window.require(\"ace/lib/event_emitter\").EventEmitter;\n    var oop = window.require(\"ace/lib/oop\");\n    var Sender = function Sender() {};\n    (function () {\n      oop.implement(this, EventEmitter);\n      this.callback = function (data, callbackId) {\n        postMessage({\n          type: \"call\",\n          id: callbackId,\n          data: data\n        });\n      };\n      this.emit = function (name, data) {\n        postMessage({\n          type: \"event\",\n          name: name,\n          data: data\n        });\n      };\n    }).call(Sender.prototype);\n    return new Sender();\n  };\n  var main = window.main = null;\n  var sender = window.sender = null;\n  window.onmessage = function (e) {\n    var msg = e.data;\n    if (msg.event && sender) {\n      sender._signal(msg.event, msg.data);\n    } else if (msg.command) {\n      if (main[msg.command]) main[msg.command].apply(main, msg.args);else if (window[msg.command]) window[msg.command].apply(window, msg.args);else throw new Error(\"Unknown command:\" + msg.command);\n    } else if (msg.init) {\n      window.initBaseUrls(msg.tlns);\n      sender = window.sender = window.initSender();\n      var clazz = this.require(msg.module)[msg.classname];\n      main = window.main = new clazz(sender);\n    }\n  };\n}(this);\nace.define(\"ace/lib/oop\", [], function (require, exports, module) {\n  \"use strict\";\n\n  exports.inherits = function (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n  exports.mixin = function (obj, mixin) {\n    for (var key in mixin) {\n      obj[key] = mixin[key];\n    }\n    return obj;\n  };\n  exports.implement = function (proto, mixin) {\n    exports.mixin(proto, mixin);\n  };\n});\nace.define(\"ace/lib/lang\", [], function (require, exports, module) {\n  \"use strict\";\n\n  exports.last = function (a) {\n    return a[a.length - 1];\n  };\n  exports.stringReverse = function (string) {\n    return string.split(\"\").reverse().join(\"\");\n  };\n  exports.stringRepeat = function (string, count) {\n    var result = '';\n    while (count > 0) {\n      if (count & 1) result += string;\n      if (count >>= 1) string += string;\n    }\n    return result;\n  };\n  var trimBeginRegexp = /^\\s\\s*/;\n  var trimEndRegexp = /\\s\\s*$/;\n  exports.stringTrimLeft = function (string) {\n    return string.replace(trimBeginRegexp, '');\n  };\n  exports.stringTrimRight = function (string) {\n    return string.replace(trimEndRegexp, '');\n  };\n  exports.copyObject = function (obj) {\n    var copy = {};\n    for (var key in obj) {\n      copy[key] = obj[key];\n    }\n    return copy;\n  };\n  exports.copyArray = function (array) {\n    var copy = [];\n    for (var i = 0, l = array.length; i < l; i++) {\n      if (array[i] && typeof array[i] == \"object\") copy[i] = this.copyObject(array[i]);else copy[i] = array[i];\n    }\n    return copy;\n  };\n  exports.deepCopy = function deepCopy(obj) {\n    if (typeof obj !== \"object\" || !obj) return obj;\n    var copy;\n    if (Array.isArray(obj)) {\n      copy = [];\n      for (var key = 0; key < obj.length; key++) {\n        copy[key] = deepCopy(obj[key]);\n      }\n      return copy;\n    }\n    if (Object.prototype.toString.call(obj) !== \"[object Object]\") return obj;\n    copy = {};\n    for (var key in obj) copy[key] = deepCopy(obj[key]);\n    return copy;\n  };\n  exports.arrayToMap = function (arr) {\n    var map = {};\n    for (var i = 0; i < arr.length; i++) {\n      map[arr[i]] = 1;\n    }\n    return map;\n  };\n  exports.createMap = function (props) {\n    var map = Object.create(null);\n    for (var i in props) {\n      map[i] = props[i];\n    }\n    return map;\n  };\n  exports.arrayRemove = function (array, value) {\n    for (var i = 0; i <= array.length; i++) {\n      if (value === array[i]) {\n        array.splice(i, 1);\n      }\n    }\n  };\n  exports.escapeRegExp = function (str) {\n    return str.replace(/([.*+?^${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  };\n  exports.escapeHTML = function (str) {\n    return (\"\" + str).replace(/&/g, \"&#38;\").replace(/\"/g, \"&#34;\").replace(/'/g, \"&#39;\").replace(/</g, \"&#60;\");\n  };\n  exports.getMatchOffsets = function (string, regExp) {\n    var matches = [];\n    string.replace(regExp, function (str) {\n      matches.push({\n        offset: arguments[arguments.length - 2],\n        length: str.length\n      });\n    });\n    return matches;\n  };\n  exports.deferredCall = function (fcn) {\n    var timer = null;\n    var callback = function callback() {\n      timer = null;\n      fcn();\n    };\n    var deferred = function deferred(timeout) {\n      deferred.cancel();\n      timer = setTimeout(callback, timeout || 0);\n      return deferred;\n    };\n    deferred.schedule = deferred;\n    deferred.call = function () {\n      this.cancel();\n      fcn();\n      return deferred;\n    };\n    deferred.cancel = function () {\n      clearTimeout(timer);\n      timer = null;\n      return deferred;\n    };\n    deferred.isPending = function () {\n      return timer;\n    };\n    return deferred;\n  };\n  exports.delayedCall = function (fcn, defaultTimeout) {\n    var timer = null;\n    var callback = function callback() {\n      timer = null;\n      fcn();\n    };\n    var _self = function _self(timeout) {\n      if (timer == null) timer = setTimeout(callback, timeout || defaultTimeout);\n    };\n    _self.delay = function (timeout) {\n      timer && clearTimeout(timer);\n      timer = setTimeout(callback, timeout || defaultTimeout);\n    };\n    _self.schedule = _self;\n    _self.call = function () {\n      this.cancel();\n      fcn();\n    };\n    _self.cancel = function () {\n      timer && clearTimeout(timer);\n      timer = null;\n    };\n    _self.isPending = function () {\n      return timer;\n    };\n    return _self;\n  };\n});\nace.define(\"ace/apply_delta\", [], function (require, exports, module) {\n  \"use strict\";\n\n  function throwDeltaError(delta, errorText) {\n    console.log(\"Invalid Delta:\", delta);\n    throw \"Invalid Delta: \" + errorText;\n  }\n  function positionInDocument(docLines, position) {\n    return position.row >= 0 && position.row < docLines.length && position.column >= 0 && position.column <= docLines[position.row].length;\n  }\n  function validateDelta(docLines, delta) {\n    if (delta.action != \"insert\" && delta.action != \"remove\") throwDeltaError(delta, \"delta.action must be 'insert' or 'remove'\");\n    if (!(delta.lines instanceof Array)) throwDeltaError(delta, \"delta.lines must be an Array\");\n    if (!delta.start || !delta.end) throwDeltaError(delta, \"delta.start/end must be an present\");\n    var start = delta.start;\n    if (!positionInDocument(docLines, delta.start)) throwDeltaError(delta, \"delta.start must be contained in document\");\n    var end = delta.end;\n    if (delta.action == \"remove\" && !positionInDocument(docLines, end)) throwDeltaError(delta, \"delta.end must contained in document for 'remove' actions\");\n    var numRangeRows = end.row - start.row;\n    var numRangeLastLineChars = end.column - (numRangeRows == 0 ? start.column : 0);\n    if (numRangeRows != delta.lines.length - 1 || delta.lines[numRangeRows].length != numRangeLastLineChars) throwDeltaError(delta, \"delta.range must match delta lines\");\n  }\n  exports.applyDelta = function (docLines, delta, doNotValidate) {\n    var row = delta.start.row;\n    var startColumn = delta.start.column;\n    var line = docLines[row] || \"\";\n    switch (delta.action) {\n      case \"insert\":\n        var lines = delta.lines;\n        if (lines.length === 1) {\n          docLines[row] = line.substring(0, startColumn) + delta.lines[0] + line.substring(startColumn);\n        } else {\n          var args = [row, 1].concat(delta.lines);\n          docLines.splice.apply(docLines, args);\n          docLines[row] = line.substring(0, startColumn) + docLines[row];\n          docLines[row + delta.lines.length - 1] += line.substring(startColumn);\n        }\n        break;\n      case \"remove\":\n        var endColumn = delta.end.column;\n        var endRow = delta.end.row;\n        if (row === endRow) {\n          docLines[row] = line.substring(0, startColumn) + line.substring(endColumn);\n        } else {\n          docLines.splice(row, endRow - row + 1, line.substring(0, startColumn) + docLines[endRow].substring(endColumn));\n        }\n        break;\n    }\n  };\n});\nace.define(\"ace/lib/event_emitter\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var EventEmitter = {};\n  var stopPropagation = function stopPropagation() {\n    this.propagationStopped = true;\n  };\n  var preventDefault = function preventDefault() {\n    this.defaultPrevented = true;\n  };\n  EventEmitter._emit = EventEmitter._dispatchEvent = function (eventName, e) {\n    this._eventRegistry || (this._eventRegistry = {});\n    this._defaultHandlers || (this._defaultHandlers = {});\n    var listeners = this._eventRegistry[eventName] || [];\n    var defaultHandler = this._defaultHandlers[eventName];\n    if (!listeners.length && !defaultHandler) return;\n    if (typeof e != \"object\" || !e) e = {};\n    if (!e.type) e.type = eventName;\n    if (!e.stopPropagation) e.stopPropagation = stopPropagation;\n    if (!e.preventDefault) e.preventDefault = preventDefault;\n    listeners = listeners.slice();\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i](e, this);\n      if (e.propagationStopped) break;\n    }\n    if (defaultHandler && !e.defaultPrevented) return defaultHandler(e, this);\n  };\n  EventEmitter._signal = function (eventName, e) {\n    var listeners = (this._eventRegistry || {})[eventName];\n    if (!listeners) return;\n    listeners = listeners.slice();\n    for (var i = 0; i < listeners.length; i++) listeners[i](e, this);\n  };\n  EventEmitter.once = function (eventName, callback) {\n    var _self = this;\n    this.on(eventName, function newCallback() {\n      _self.off(eventName, newCallback);\n      callback.apply(null, arguments);\n    });\n    if (!callback) {\n      return new Promise(function (resolve) {\n        callback = resolve;\n      });\n    }\n  };\n  EventEmitter.setDefaultHandler = function (eventName, callback) {\n    var handlers = this._defaultHandlers;\n    if (!handlers) handlers = this._defaultHandlers = {\n      _disabled_: {}\n    };\n    if (handlers[eventName]) {\n      var old = handlers[eventName];\n      var disabled = handlers._disabled_[eventName];\n      if (!disabled) handlers._disabled_[eventName] = disabled = [];\n      disabled.push(old);\n      var i = disabled.indexOf(callback);\n      if (i != -1) disabled.splice(i, 1);\n    }\n    handlers[eventName] = callback;\n  };\n  EventEmitter.removeDefaultHandler = function (eventName, callback) {\n    var handlers = this._defaultHandlers;\n    if (!handlers) return;\n    var disabled = handlers._disabled_[eventName];\n    if (handlers[eventName] == callback) {\n      if (disabled) this.setDefaultHandler(eventName, disabled.pop());\n    } else if (disabled) {\n      var i = disabled.indexOf(callback);\n      if (i != -1) disabled.splice(i, 1);\n    }\n  };\n  EventEmitter.on = EventEmitter.addEventListener = function (eventName, callback, capturing) {\n    this._eventRegistry = this._eventRegistry || {};\n    var listeners = this._eventRegistry[eventName];\n    if (!listeners) listeners = this._eventRegistry[eventName] = [];\n    if (listeners.indexOf(callback) == -1) listeners[capturing ? \"unshift\" : \"push\"](callback);\n    return callback;\n  };\n  EventEmitter.off = EventEmitter.removeListener = EventEmitter.removeEventListener = function (eventName, callback) {\n    this._eventRegistry = this._eventRegistry || {};\n    var listeners = this._eventRegistry[eventName];\n    if (!listeners) return;\n    var index = listeners.indexOf(callback);\n    if (index !== -1) listeners.splice(index, 1);\n  };\n  EventEmitter.removeAllListeners = function (eventName) {\n    if (!eventName) this._eventRegistry = this._defaultHandlers = undefined;\n    if (this._eventRegistry) this._eventRegistry[eventName] = undefined;\n    if (this._defaultHandlers) this._defaultHandlers[eventName] = undefined;\n  };\n  exports.EventEmitter = EventEmitter;\n});\nace.define(\"ace/range\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var comparePoints = function comparePoints(p1, p2) {\n    return p1.row - p2.row || p1.column - p2.column;\n  };\n  var Range = function Range(startRow, startColumn, endRow, endColumn) {\n    this.start = {\n      row: startRow,\n      column: startColumn\n    };\n    this.end = {\n      row: endRow,\n      column: endColumn\n    };\n  };\n  (function () {\n    this.isEqual = function (range) {\n      return this.start.row === range.start.row && this.end.row === range.end.row && this.start.column === range.start.column && this.end.column === range.end.column;\n    };\n    this.toString = function () {\n      return \"Range: [\" + this.start.row + \"/\" + this.start.column + \"] -> [\" + this.end.row + \"/\" + this.end.column + \"]\";\n    };\n    this.contains = function (row, column) {\n      return this.compare(row, column) == 0;\n    };\n    this.compareRange = function (range) {\n      var cmp,\n        end = range.end,\n        start = range.start;\n      cmp = this.compare(end.row, end.column);\n      if (cmp == 1) {\n        cmp = this.compare(start.row, start.column);\n        if (cmp == 1) {\n          return 2;\n        } else if (cmp == 0) {\n          return 1;\n        } else {\n          return 0;\n        }\n      } else if (cmp == -1) {\n        return -2;\n      } else {\n        cmp = this.compare(start.row, start.column);\n        if (cmp == -1) {\n          return -1;\n        } else if (cmp == 1) {\n          return 42;\n        } else {\n          return 0;\n        }\n      }\n    };\n    this.comparePoint = function (p) {\n      return this.compare(p.row, p.column);\n    };\n    this.containsRange = function (range) {\n      return this.comparePoint(range.start) == 0 && this.comparePoint(range.end) == 0;\n    };\n    this.intersects = function (range) {\n      var cmp = this.compareRange(range);\n      return cmp == -1 || cmp == 0 || cmp == 1;\n    };\n    this.isEnd = function (row, column) {\n      return this.end.row == row && this.end.column == column;\n    };\n    this.isStart = function (row, column) {\n      return this.start.row == row && this.start.column == column;\n    };\n    this.setStart = function (row, column) {\n      if (typeof row == \"object\") {\n        this.start.column = row.column;\n        this.start.row = row.row;\n      } else {\n        this.start.row = row;\n        this.start.column = column;\n      }\n    };\n    this.setEnd = function (row, column) {\n      if (typeof row == \"object\") {\n        this.end.column = row.column;\n        this.end.row = row.row;\n      } else {\n        this.end.row = row;\n        this.end.column = column;\n      }\n    };\n    this.inside = function (row, column) {\n      if (this.compare(row, column) == 0) {\n        if (this.isEnd(row, column) || this.isStart(row, column)) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    };\n    this.insideStart = function (row, column) {\n      if (this.compare(row, column) == 0) {\n        if (this.isEnd(row, column)) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    };\n    this.insideEnd = function (row, column) {\n      if (this.compare(row, column) == 0) {\n        if (this.isStart(row, column)) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    };\n    this.compare = function (row, column) {\n      if (!this.isMultiLine()) {\n        if (row === this.start.row) {\n          return column < this.start.column ? -1 : column > this.end.column ? 1 : 0;\n        }\n      }\n      if (row < this.start.row) return -1;\n      if (row > this.end.row) return 1;\n      if (this.start.row === row) return column >= this.start.column ? 0 : -1;\n      if (this.end.row === row) return column <= this.end.column ? 0 : 1;\n      return 0;\n    };\n    this.compareStart = function (row, column) {\n      if (this.start.row == row && this.start.column == column) {\n        return -1;\n      } else {\n        return this.compare(row, column);\n      }\n    };\n    this.compareEnd = function (row, column) {\n      if (this.end.row == row && this.end.column == column) {\n        return 1;\n      } else {\n        return this.compare(row, column);\n      }\n    };\n    this.compareInside = function (row, column) {\n      if (this.end.row == row && this.end.column == column) {\n        return 1;\n      } else if (this.start.row == row && this.start.column == column) {\n        return -1;\n      } else {\n        return this.compare(row, column);\n      }\n    };\n    this.clipRows = function (firstRow, lastRow) {\n      if (this.end.row > lastRow) var end = {\n        row: lastRow + 1,\n        column: 0\n      };else if (this.end.row < firstRow) var end = {\n        row: firstRow,\n        column: 0\n      };\n      if (this.start.row > lastRow) var start = {\n        row: lastRow + 1,\n        column: 0\n      };else if (this.start.row < firstRow) var start = {\n        row: firstRow,\n        column: 0\n      };\n      return Range.fromPoints(start || this.start, end || this.end);\n    };\n    this.extend = function (row, column) {\n      var cmp = this.compare(row, column);\n      if (cmp == 0) return this;else if (cmp == -1) var start = {\n        row: row,\n        column: column\n      };else var end = {\n        row: row,\n        column: column\n      };\n      return Range.fromPoints(start || this.start, end || this.end);\n    };\n    this.isEmpty = function () {\n      return this.start.row === this.end.row && this.start.column === this.end.column;\n    };\n    this.isMultiLine = function () {\n      return this.start.row !== this.end.row;\n    };\n    this.clone = function () {\n      return Range.fromPoints(this.start, this.end);\n    };\n    this.collapseRows = function () {\n      if (this.end.column == 0) return new Range(this.start.row, 0, Math.max(this.start.row, this.end.row - 1), 0);else return new Range(this.start.row, 0, this.end.row, 0);\n    };\n    this.toScreenRange = function (session) {\n      var screenPosStart = session.documentToScreenPosition(this.start);\n      var screenPosEnd = session.documentToScreenPosition(this.end);\n      return new Range(screenPosStart.row, screenPosStart.column, screenPosEnd.row, screenPosEnd.column);\n    };\n    this.moveBy = function (row, column) {\n      this.start.row += row;\n      this.start.column += column;\n      this.end.row += row;\n      this.end.column += column;\n    };\n  }).call(Range.prototype);\n  Range.fromPoints = function (start, end) {\n    return new Range(start.row, start.column, end.row, end.column);\n  };\n  Range.comparePoints = comparePoints;\n  Range.comparePoints = function (p1, p2) {\n    return p1.row - p2.row || p1.column - p2.column;\n  };\n  exports.Range = Range;\n});\nace.define(\"ace/anchor\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"./lib/oop\");\n  var EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\n  var Anchor = exports.Anchor = function (doc, row, column) {\n    this.$onChange = this.onChange.bind(this);\n    this.attach(doc);\n    if (typeof column == \"undefined\") this.setPosition(row.row, row.column);else this.setPosition(row, column);\n  };\n  (function () {\n    oop.implement(this, EventEmitter);\n    this.getPosition = function () {\n      return this.$clipPositionToDocument(this.row, this.column);\n    };\n    this.getDocument = function () {\n      return this.document;\n    };\n    this.$insertRight = false;\n    this.onChange = function (delta) {\n      if (delta.start.row == delta.end.row && delta.start.row != this.row) return;\n      if (delta.start.row > this.row) return;\n      var point = $getTransformedPoint(delta, {\n        row: this.row,\n        column: this.column\n      }, this.$insertRight);\n      this.setPosition(point.row, point.column, true);\n    };\n    function $pointsInOrder(point1, point2, equalPointsInOrder) {\n      var bColIsAfter = equalPointsInOrder ? point1.column <= point2.column : point1.column < point2.column;\n      return point1.row < point2.row || point1.row == point2.row && bColIsAfter;\n    }\n    function $getTransformedPoint(delta, point, moveIfEqual) {\n      var deltaIsInsert = delta.action == \"insert\";\n      var deltaRowShift = (deltaIsInsert ? 1 : -1) * (delta.end.row - delta.start.row);\n      var deltaColShift = (deltaIsInsert ? 1 : -1) * (delta.end.column - delta.start.column);\n      var deltaStart = delta.start;\n      var deltaEnd = deltaIsInsert ? deltaStart : delta.end; // Collapse insert range.\n      if ($pointsInOrder(point, deltaStart, moveIfEqual)) {\n        return {\n          row: point.row,\n          column: point.column\n        };\n      }\n      if ($pointsInOrder(deltaEnd, point, !moveIfEqual)) {\n        return {\n          row: point.row + deltaRowShift,\n          column: point.column + (point.row == deltaEnd.row ? deltaColShift : 0)\n        };\n      }\n      return {\n        row: deltaStart.row,\n        column: deltaStart.column\n      };\n    }\n    this.setPosition = function (row, column, noClip) {\n      var pos;\n      if (noClip) {\n        pos = {\n          row: row,\n          column: column\n        };\n      } else {\n        pos = this.$clipPositionToDocument(row, column);\n      }\n      if (this.row == pos.row && this.column == pos.column) return;\n      var old = {\n        row: this.row,\n        column: this.column\n      };\n      this.row = pos.row;\n      this.column = pos.column;\n      this._signal(\"change\", {\n        old: old,\n        value: pos\n      });\n    };\n    this.detach = function () {\n      this.document.off(\"change\", this.$onChange);\n    };\n    this.attach = function (doc) {\n      this.document = doc || this.document;\n      this.document.on(\"change\", this.$onChange);\n    };\n    this.$clipPositionToDocument = function (row, column) {\n      var pos = {};\n      if (row >= this.document.getLength()) {\n        pos.row = Math.max(0, this.document.getLength() - 1);\n        pos.column = this.document.getLine(pos.row).length;\n      } else if (row < 0) {\n        pos.row = 0;\n        pos.column = 0;\n      } else {\n        pos.row = row;\n        pos.column = Math.min(this.document.getLine(pos.row).length, Math.max(0, column));\n      }\n      if (column < 0) pos.column = 0;\n      return pos;\n    };\n  }).call(Anchor.prototype);\n});\nace.define(\"ace/document\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"./lib/oop\");\n  var applyDelta = require(\"./apply_delta\").applyDelta;\n  var EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\n  var Range = require(\"./range\").Range;\n  var Anchor = require(\"./anchor\").Anchor;\n  var Document = function Document(textOrLines) {\n    this.$lines = [\"\"];\n    if (textOrLines.length === 0) {\n      this.$lines = [\"\"];\n    } else if (Array.isArray(textOrLines)) {\n      this.insertMergedLines({\n        row: 0,\n        column: 0\n      }, textOrLines);\n    } else {\n      this.insert({\n        row: 0,\n        column: 0\n      }, textOrLines);\n    }\n  };\n  (function () {\n    oop.implement(this, EventEmitter);\n    this.setValue = function (text) {\n      var len = this.getLength() - 1;\n      this.remove(new Range(0, 0, len, this.getLine(len).length));\n      this.insert({\n        row: 0,\n        column: 0\n      }, text || \"\");\n    };\n    this.getValue = function () {\n      return this.getAllLines().join(this.getNewLineCharacter());\n    };\n    this.createAnchor = function (row, column) {\n      return new Anchor(this, row, column);\n    };\n    if (\"aaa\".split(/a/).length === 0) {\n      this.$split = function (text) {\n        return text.replace(/\\r\\n|\\r/g, \"\\n\").split(\"\\n\");\n      };\n    } else {\n      this.$split = function (text) {\n        return text.split(/\\r\\n|\\r|\\n/);\n      };\n    }\n    this.$detectNewLine = function (text) {\n      var match = text.match(/^.*?(\\r\\n|\\r|\\n)/m);\n      this.$autoNewLine = match ? match[1] : \"\\n\";\n      this._signal(\"changeNewLineMode\");\n    };\n    this.getNewLineCharacter = function () {\n      switch (this.$newLineMode) {\n        case \"windows\":\n          return \"\\r\\n\";\n        case \"unix\":\n          return \"\\n\";\n        default:\n          return this.$autoNewLine || \"\\n\";\n      }\n    };\n    this.$autoNewLine = \"\";\n    this.$newLineMode = \"auto\";\n    this.setNewLineMode = function (newLineMode) {\n      if (this.$newLineMode === newLineMode) return;\n      this.$newLineMode = newLineMode;\n      this._signal(\"changeNewLineMode\");\n    };\n    this.getNewLineMode = function () {\n      return this.$newLineMode;\n    };\n    this.isNewLine = function (text) {\n      return text == \"\\r\\n\" || text == \"\\r\" || text == \"\\n\";\n    };\n    this.getLine = function (row) {\n      return this.$lines[row] || \"\";\n    };\n    this.getLines = function (firstRow, lastRow) {\n      return this.$lines.slice(firstRow, lastRow + 1);\n    };\n    this.getAllLines = function () {\n      return this.getLines(0, this.getLength());\n    };\n    this.getLength = function () {\n      return this.$lines.length;\n    };\n    this.getTextRange = function (range) {\n      return this.getLinesForRange(range).join(this.getNewLineCharacter());\n    };\n    this.getLinesForRange = function (range) {\n      var lines;\n      if (range.start.row === range.end.row) {\n        lines = [this.getLine(range.start.row).substring(range.start.column, range.end.column)];\n      } else {\n        lines = this.getLines(range.start.row, range.end.row);\n        lines[0] = (lines[0] || \"\").substring(range.start.column);\n        var l = lines.length - 1;\n        if (range.end.row - range.start.row == l) lines[l] = lines[l].substring(0, range.end.column);\n      }\n      return lines;\n    };\n    this.insertLines = function (row, lines) {\n      console.warn(\"Use of document.insertLines is deprecated. Use the insertFullLines method instead.\");\n      return this.insertFullLines(row, lines);\n    };\n    this.removeLines = function (firstRow, lastRow) {\n      console.warn(\"Use of document.removeLines is deprecated. Use the removeFullLines method instead.\");\n      return this.removeFullLines(firstRow, lastRow);\n    };\n    this.insertNewLine = function (position) {\n      console.warn(\"Use of document.insertNewLine is deprecated. Use insertMergedLines(position, ['', '']) instead.\");\n      return this.insertMergedLines(position, [\"\", \"\"]);\n    };\n    this.insert = function (position, text) {\n      if (this.getLength() <= 1) this.$detectNewLine(text);\n      return this.insertMergedLines(position, this.$split(text));\n    };\n    this.insertInLine = function (position, text) {\n      var start = this.clippedPos(position.row, position.column);\n      var end = this.pos(position.row, position.column + text.length);\n      this.applyDelta({\n        start: start,\n        end: end,\n        action: \"insert\",\n        lines: [text]\n      }, true);\n      return this.clonePos(end);\n    };\n    this.clippedPos = function (row, column) {\n      var length = this.getLength();\n      if (row === undefined) {\n        row = length;\n      } else if (row < 0) {\n        row = 0;\n      } else if (row >= length) {\n        row = length - 1;\n        column = undefined;\n      }\n      var line = this.getLine(row);\n      if (column == undefined) column = line.length;\n      column = Math.min(Math.max(column, 0), line.length);\n      return {\n        row: row,\n        column: column\n      };\n    };\n    this.clonePos = function (pos) {\n      return {\n        row: pos.row,\n        column: pos.column\n      };\n    };\n    this.pos = function (row, column) {\n      return {\n        row: row,\n        column: column\n      };\n    };\n    this.$clipPosition = function (position) {\n      var length = this.getLength();\n      if (position.row >= length) {\n        position.row = Math.max(0, length - 1);\n        position.column = this.getLine(length - 1).length;\n      } else {\n        position.row = Math.max(0, position.row);\n        position.column = Math.min(Math.max(position.column, 0), this.getLine(position.row).length);\n      }\n      return position;\n    };\n    this.insertFullLines = function (row, lines) {\n      row = Math.min(Math.max(row, 0), this.getLength());\n      var column = 0;\n      if (row < this.getLength()) {\n        lines = lines.concat([\"\"]);\n        column = 0;\n      } else {\n        lines = [\"\"].concat(lines);\n        row--;\n        column = this.$lines[row].length;\n      }\n      this.insertMergedLines({\n        row: row,\n        column: column\n      }, lines);\n    };\n    this.insertMergedLines = function (position, lines) {\n      var start = this.clippedPos(position.row, position.column);\n      var end = {\n        row: start.row + lines.length - 1,\n        column: (lines.length == 1 ? start.column : 0) + lines[lines.length - 1].length\n      };\n      this.applyDelta({\n        start: start,\n        end: end,\n        action: \"insert\",\n        lines: lines\n      });\n      return this.clonePos(end);\n    };\n    this.remove = function (range) {\n      var start = this.clippedPos(range.start.row, range.start.column);\n      var end = this.clippedPos(range.end.row, range.end.column);\n      this.applyDelta({\n        start: start,\n        end: end,\n        action: \"remove\",\n        lines: this.getLinesForRange({\n          start: start,\n          end: end\n        })\n      });\n      return this.clonePos(start);\n    };\n    this.removeInLine = function (row, startColumn, endColumn) {\n      var start = this.clippedPos(row, startColumn);\n      var end = this.clippedPos(row, endColumn);\n      this.applyDelta({\n        start: start,\n        end: end,\n        action: \"remove\",\n        lines: this.getLinesForRange({\n          start: start,\n          end: end\n        })\n      }, true);\n      return this.clonePos(start);\n    };\n    this.removeFullLines = function (firstRow, lastRow) {\n      firstRow = Math.min(Math.max(0, firstRow), this.getLength() - 1);\n      lastRow = Math.min(Math.max(0, lastRow), this.getLength() - 1);\n      var deleteFirstNewLine = lastRow == this.getLength() - 1 && firstRow > 0;\n      var deleteLastNewLine = lastRow < this.getLength() - 1;\n      var startRow = deleteFirstNewLine ? firstRow - 1 : firstRow;\n      var startCol = deleteFirstNewLine ? this.getLine(startRow).length : 0;\n      var endRow = deleteLastNewLine ? lastRow + 1 : lastRow;\n      var endCol = deleteLastNewLine ? 0 : this.getLine(endRow).length;\n      var range = new Range(startRow, startCol, endRow, endCol);\n      var deletedLines = this.$lines.slice(firstRow, lastRow + 1);\n      this.applyDelta({\n        start: range.start,\n        end: range.end,\n        action: \"remove\",\n        lines: this.getLinesForRange(range)\n      });\n      return deletedLines;\n    };\n    this.removeNewLine = function (row) {\n      if (row < this.getLength() - 1 && row >= 0) {\n        this.applyDelta({\n          start: this.pos(row, this.getLine(row).length),\n          end: this.pos(row + 1, 0),\n          action: \"remove\",\n          lines: [\"\", \"\"]\n        });\n      }\n    };\n    this.replace = function (range, text) {\n      if (!(range instanceof Range)) range = Range.fromPoints(range.start, range.end);\n      if (text.length === 0 && range.isEmpty()) return range.start;\n      if (text == this.getTextRange(range)) return range.end;\n      this.remove(range);\n      var end;\n      if (text) {\n        end = this.insert(range.start, text);\n      } else {\n        end = range.start;\n      }\n      return end;\n    };\n    this.applyDeltas = function (deltas) {\n      for (var i = 0; i < deltas.length; i++) {\n        this.applyDelta(deltas[i]);\n      }\n    };\n    this.revertDeltas = function (deltas) {\n      for (var i = deltas.length - 1; i >= 0; i--) {\n        this.revertDelta(deltas[i]);\n      }\n    };\n    this.applyDelta = function (delta, doNotValidate) {\n      var isInsert = delta.action == \"insert\";\n      if (isInsert ? delta.lines.length <= 1 && !delta.lines[0] : !Range.comparePoints(delta.start, delta.end)) {\n        return;\n      }\n      if (isInsert && delta.lines.length > 20000) {\n        this.$splitAndapplyLargeDelta(delta, 20000);\n      } else {\n        applyDelta(this.$lines, delta, doNotValidate);\n        this._signal(\"change\", delta);\n      }\n    };\n    this.$safeApplyDelta = function (delta) {\n      var docLength = this.$lines.length;\n      if (delta.action == \"remove\" && delta.start.row < docLength && delta.end.row < docLength || delta.action == \"insert\" && delta.start.row <= docLength) {\n        this.applyDelta(delta);\n      }\n    };\n    this.$splitAndapplyLargeDelta = function (delta, MAX) {\n      var lines = delta.lines;\n      var l = lines.length - MAX + 1;\n      var row = delta.start.row;\n      var column = delta.start.column;\n      for (var from = 0, to = 0; from < l; from = to) {\n        to += MAX - 1;\n        var chunk = lines.slice(from, to);\n        chunk.push(\"\");\n        this.applyDelta({\n          start: this.pos(row + from, column),\n          end: this.pos(row + to, column = 0),\n          action: delta.action,\n          lines: chunk\n        }, true);\n      }\n      delta.lines = lines.slice(from);\n      delta.start.row = row + from;\n      delta.start.column = column;\n      this.applyDelta(delta, true);\n    };\n    this.revertDelta = function (delta) {\n      this.$safeApplyDelta({\n        start: this.clonePos(delta.start),\n        end: this.clonePos(delta.end),\n        action: delta.action == \"insert\" ? \"remove\" : \"insert\",\n        lines: delta.lines.slice()\n      });\n    };\n    this.indexToPosition = function (index, startRow) {\n      var lines = this.$lines || this.getAllLines();\n      var newlineLength = this.getNewLineCharacter().length;\n      for (var i = startRow || 0, l = lines.length; i < l; i++) {\n        index -= lines[i].length + newlineLength;\n        if (index < 0) return {\n          row: i,\n          column: index + lines[i].length + newlineLength\n        };\n      }\n      return {\n        row: l - 1,\n        column: index + lines[l - 1].length + newlineLength\n      };\n    };\n    this.positionToIndex = function (pos, startRow) {\n      var lines = this.$lines || this.getAllLines();\n      var newlineLength = this.getNewLineCharacter().length;\n      var index = 0;\n      var row = Math.min(pos.row, lines.length);\n      for (var i = startRow || 0; i < row; ++i) index += lines[i].length + newlineLength;\n      return index + pos.column;\n    };\n  }).call(Document.prototype);\n  exports.Document = Document;\n});\nace.define(\"ace/worker/mirror\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var Document = require(\"../document\").Document;\n  var lang = require(\"../lib/lang\");\n  var Mirror = exports.Mirror = function (sender) {\n    this.sender = sender;\n    var doc = this.doc = new Document(\"\");\n    var deferredUpdate = this.deferredUpdate = lang.delayedCall(this.onUpdate.bind(this));\n    var _self = this;\n    sender.on(\"change\", function (e) {\n      var data = e.data;\n      if (data[0].start) {\n        doc.applyDeltas(data);\n      } else {\n        for (var i = 0; i < data.length; i += 2) {\n          var d, err;\n          if (Array.isArray(data[i + 1])) {\n            d = {\n              action: \"insert\",\n              start: data[i],\n              lines: data[i + 1]\n            };\n          } else {\n            d = {\n              action: \"remove\",\n              start: data[i],\n              end: data[i + 1]\n            };\n          }\n          if ((d.action == \"insert\" ? d.start : d.end).row >= doc.$lines.length) {\n            err = new Error(\"Invalid delta\");\n            err.data = {\n              path: _self.$path,\n              linesLength: doc.$lines.length,\n              start: d.start,\n              end: d.end\n            };\n            throw err;\n          }\n          doc.applyDelta(d, true);\n        }\n      }\n      if (_self.$timeout) return deferredUpdate.schedule(_self.$timeout);\n      _self.onUpdate();\n    });\n  };\n  (function () {\n    this.$timeout = 500;\n    this.setTimeout = function (timeout) {\n      this.$timeout = timeout;\n    };\n    this.setValue = function (value) {\n      this.doc.setValue(value);\n      this.deferredUpdate.schedule(this.$timeout);\n    };\n    this.getValue = function (callbackId) {\n      this.sender.callback(this.doc.getValue(), callbackId);\n    };\n    this.onUpdate = function () {};\n    this.isPending = function () {\n      return this.deferredUpdate.isPending();\n    };\n  }).call(Mirror.prototype);\n});\nace.define(\"ace/mode/html/saxparser\", [], function (require, exports, module) {\n  module.exports = function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          throw new Error(\"Cannot find module '\" + o + \"'\");\n        }\n        var f = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(f.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, f, f.exports, e, t, n, r);\n      }\n      return n[o].exports;\n    }\n    var i = typeof require == \"function\" && require;\n    for (var o = 0; o < r.length; o++) s(r[o]);\n    return s;\n  }({\n    1: [function (_dereq_, module, exports) {\n      function isScopeMarker(node) {\n        if (node.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\n          return node.localName === \"applet\" || node.localName === \"caption\" || node.localName === \"marquee\" || node.localName === \"object\" || node.localName === \"table\" || node.localName === \"td\" || node.localName === \"th\";\n        }\n        if (node.namespaceURI === \"http://www.w3.org/1998/Math/MathML\") {\n          return node.localName === \"mi\" || node.localName === \"mo\" || node.localName === \"mn\" || node.localName === \"ms\" || node.localName === \"mtext\" || node.localName === \"annotation-xml\";\n        }\n        if (node.namespaceURI === \"http://www.w3.org/2000/svg\") {\n          return node.localName === \"foreignObject\" || node.localName === \"desc\" || node.localName === \"title\";\n        }\n      }\n      function isListItemScopeMarker(node) {\n        return isScopeMarker(node) || node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'ol' || node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'ul';\n      }\n      function isTableScopeMarker(node) {\n        return node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'table' || node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'html';\n      }\n      function isTableBodyScopeMarker(node) {\n        return node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'tbody' || node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'tfoot' || node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'thead' || node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'html';\n      }\n      function isTableRowScopeMarker(node) {\n        return node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'tr' || node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'html';\n      }\n      function isButtonScopeMarker(node) {\n        return isScopeMarker(node) || node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'button';\n      }\n      function isSelectScopeMarker(node) {\n        return !(node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'optgroup') && !(node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'option');\n      }\n      function ElementStack() {\n        this.elements = [];\n        this.rootNode = null;\n        this.headElement = null;\n        this.bodyElement = null;\n      }\n      ElementStack.prototype._inScope = function (localName, isMarker) {\n        for (var i = this.elements.length - 1; i >= 0; i--) {\n          var node = this.elements[i];\n          if (node.localName === localName) return true;\n          if (isMarker(node)) return false;\n        }\n      };\n      ElementStack.prototype.push = function (item) {\n        this.elements.push(item);\n      };\n      ElementStack.prototype.pushHtmlElement = function (item) {\n        this.rootNode = item.node;\n        this.push(item);\n      };\n      ElementStack.prototype.pushHeadElement = function (item) {\n        this.headElement = item.node;\n        this.push(item);\n      };\n      ElementStack.prototype.pushBodyElement = function (item) {\n        this.bodyElement = item.node;\n        this.push(item);\n      };\n      ElementStack.prototype.pop = function () {\n        return this.elements.pop();\n      };\n      ElementStack.prototype.remove = function (item) {\n        this.elements.splice(this.elements.indexOf(item), 1);\n      };\n      ElementStack.prototype.popUntilPopped = function (localName) {\n        var element;\n        do {\n          element = this.pop();\n        } while (element.localName != localName);\n      };\n      ElementStack.prototype.popUntilTableScopeMarker = function () {\n        while (!isTableScopeMarker(this.top)) this.pop();\n      };\n      ElementStack.prototype.popUntilTableBodyScopeMarker = function () {\n        while (!isTableBodyScopeMarker(this.top)) this.pop();\n      };\n      ElementStack.prototype.popUntilTableRowScopeMarker = function () {\n        while (!isTableRowScopeMarker(this.top)) this.pop();\n      };\n      ElementStack.prototype.item = function (index) {\n        return this.elements[index];\n      };\n      ElementStack.prototype.contains = function (element) {\n        return this.elements.indexOf(element) !== -1;\n      };\n      ElementStack.prototype.inScope = function (localName) {\n        return this._inScope(localName, isScopeMarker);\n      };\n      ElementStack.prototype.inListItemScope = function (localName) {\n        return this._inScope(localName, isListItemScopeMarker);\n      };\n      ElementStack.prototype.inTableScope = function (localName) {\n        return this._inScope(localName, isTableScopeMarker);\n      };\n      ElementStack.prototype.inButtonScope = function (localName) {\n        return this._inScope(localName, isButtonScopeMarker);\n      };\n      ElementStack.prototype.inSelectScope = function (localName) {\n        return this._inScope(localName, isSelectScopeMarker);\n      };\n      ElementStack.prototype.hasNumberedHeaderElementInScope = function () {\n        for (var i = this.elements.length - 1; i >= 0; i--) {\n          var node = this.elements[i];\n          if (node.isNumberedHeader()) return true;\n          if (isScopeMarker(node)) return false;\n        }\n      };\n      ElementStack.prototype.furthestBlockForFormattingElement = function (element) {\n        var furthestBlock = null;\n        for (var i = this.elements.length - 1; i >= 0; i--) {\n          var node = this.elements[i];\n          if (node.node === element) break;\n          if (node.isSpecial()) furthestBlock = node;\n        }\n        return furthestBlock;\n      };\n      ElementStack.prototype.findIndex = function (localName) {\n        for (var i = this.elements.length - 1; i >= 0; i--) {\n          if (this.elements[i].localName == localName) return i;\n        }\n        return -1;\n      };\n      ElementStack.prototype.remove_openElements_until = function (callback) {\n        var finished = false;\n        var element;\n        while (!finished) {\n          element = this.elements.pop();\n          finished = callback(element);\n        }\n        return element;\n      };\n      Object.defineProperty(ElementStack.prototype, 'top', {\n        get: function get() {\n          return this.elements[this.elements.length - 1];\n        }\n      });\n      Object.defineProperty(ElementStack.prototype, 'length', {\n        get: function get() {\n          return this.elements.length;\n        }\n      });\n      exports.ElementStack = ElementStack;\n    }, {}],\n    2: [function (_dereq_, module, exports) {\n      var entities = _dereq_('html5-entities');\n      var InputStream = _dereq_('./InputStream').InputStream;\n      var namedEntityPrefixes = {};\n      Object.keys(entities).forEach(function (entityKey) {\n        for (var i = 0; i < entityKey.length; i++) {\n          namedEntityPrefixes[entityKey.substring(0, i + 1)] = true;\n        }\n      });\n      function isAlphaNumeric(c) {\n        return c >= '0' && c <= '9' || c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n      }\n      function isHexDigit(c) {\n        return c >= '0' && c <= '9' || c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F';\n      }\n      function isDecimalDigit(c) {\n        return c >= '0' && c <= '9';\n      }\n      var EntityParser = {};\n      EntityParser.consumeEntity = function (buffer, tokenizer, additionalAllowedCharacter) {\n        var decodedCharacter = '';\n        var consumedCharacters = '';\n        var ch = buffer.char();\n        if (ch === InputStream.EOF) return false;\n        consumedCharacters += ch;\n        if (ch == '\\t' || ch == '\\n' || ch == '\\v' || ch == ' ' || ch == '<' || ch == '&') {\n          buffer.unget(consumedCharacters);\n          return false;\n        }\n        if (additionalAllowedCharacter === ch) {\n          buffer.unget(consumedCharacters);\n          return false;\n        }\n        if (ch == '#') {\n          ch = buffer.shift(1);\n          if (ch === InputStream.EOF) {\n            tokenizer._parseError(\"expected-numeric-entity-but-got-eof\");\n            buffer.unget(consumedCharacters);\n            return false;\n          }\n          consumedCharacters += ch;\n          var radix = 10;\n          var isDigit = isDecimalDigit;\n          if (ch == 'x' || ch == 'X') {\n            radix = 16;\n            isDigit = isHexDigit;\n            ch = buffer.shift(1);\n            if (ch === InputStream.EOF) {\n              tokenizer._parseError(\"expected-numeric-entity-but-got-eof\");\n              buffer.unget(consumedCharacters);\n              return false;\n            }\n            consumedCharacters += ch;\n          }\n          if (isDigit(ch)) {\n            var code = '';\n            while (ch !== InputStream.EOF && isDigit(ch)) {\n              code += ch;\n              ch = buffer.char();\n            }\n            code = parseInt(code, radix);\n            var replacement = this.replaceEntityNumbers(code);\n            if (replacement) {\n              tokenizer._parseError(\"invalid-numeric-entity-replaced\");\n              code = replacement;\n            }\n            if (code > 0xFFFF && code <= 0x10FFFF) {\n              code -= 0x10000;\n              var first = ((0xffc00 & code) >> 10) + 0xD800;\n              var second = (0x3ff & code) + 0xDC00;\n              decodedCharacter = String.fromCharCode(first, second);\n            } else decodedCharacter = String.fromCharCode(code);\n            if (ch !== ';') {\n              tokenizer._parseError(\"numeric-entity-without-semicolon\");\n              buffer.unget(ch);\n            }\n            return decodedCharacter;\n          }\n          buffer.unget(consumedCharacters);\n          tokenizer._parseError(\"expected-numeric-entity\");\n          return false;\n        }\n        if (ch >= 'a' && ch <= 'z' || ch >= 'A' && ch <= 'Z') {\n          var mostRecentMatch = '';\n          while (namedEntityPrefixes[consumedCharacters]) {\n            if (entities[consumedCharacters]) {\n              mostRecentMatch = consumedCharacters;\n            }\n            if (ch == ';') break;\n            ch = buffer.char();\n            if (ch === InputStream.EOF) break;\n            consumedCharacters += ch;\n          }\n          if (!mostRecentMatch) {\n            tokenizer._parseError(\"expected-named-entity\");\n            buffer.unget(consumedCharacters);\n            return false;\n          }\n          decodedCharacter = entities[mostRecentMatch];\n          if (ch === ';' || !additionalAllowedCharacter || !(isAlphaNumeric(ch) || ch === '=')) {\n            if (consumedCharacters.length > mostRecentMatch.length) {\n              buffer.unget(consumedCharacters.substring(mostRecentMatch.length));\n            }\n            if (ch !== ';') {\n              tokenizer._parseError(\"named-entity-without-semicolon\");\n            }\n            return decodedCharacter;\n          }\n          buffer.unget(consumedCharacters);\n          return false;\n        }\n      };\n      EntityParser.replaceEntityNumbers = function (c) {\n        switch (c) {\n          case 0x00:\n            return 0xFFFD;\n          // REPLACEMENT CHARACTER\n          case 0x13:\n            return 0x0010;\n          // Carriage return\n          case 0x80:\n            return 0x20AC;\n          // EURO SIGN\n          case 0x81:\n            return 0x0081;\n          // <control>\n          case 0x82:\n            return 0x201A;\n          // SINGLE LOW-9 QUOTATION MARK\n          case 0x83:\n            return 0x0192;\n          // LATIN SMALL LETTER F WITH HOOK\n          case 0x84:\n            return 0x201E;\n          // DOUBLE LOW-9 QUOTATION MARK\n          case 0x85:\n            return 0x2026;\n          // HORIZONTAL ELLIPSIS\n          case 0x86:\n            return 0x2020;\n          // DAGGER\n          case 0x87:\n            return 0x2021;\n          // DOUBLE DAGGER\n          case 0x88:\n            return 0x02C6;\n          // MODIFIER LETTER CIRCUMFLEX ACCENT\n          case 0x89:\n            return 0x2030;\n          // PER MILLE SIGN\n          case 0x8A:\n            return 0x0160;\n          // LATIN CAPITAL LETTER S WITH CARON\n          case 0x8B:\n            return 0x2039;\n          // SINGLE LEFT-POINTING ANGLE QUOTATION MARK\n          case 0x8C:\n            return 0x0152;\n          // LATIN CAPITAL LIGATURE OE\n          case 0x8D:\n            return 0x008D;\n          // <control>\n          case 0x8E:\n            return 0x017D;\n          // LATIN CAPITAL LETTER Z WITH CARON\n          case 0x8F:\n            return 0x008F;\n          // <control>\n          case 0x90:\n            return 0x0090;\n          // <control>\n          case 0x91:\n            return 0x2018;\n          // LEFT SINGLE QUOTATION MARK\n          case 0x92:\n            return 0x2019;\n          // RIGHT SINGLE QUOTATION MARK\n          case 0x93:\n            return 0x201C;\n          // LEFT DOUBLE QUOTATION MARK\n          case 0x94:\n            return 0x201D;\n          // RIGHT DOUBLE QUOTATION MARK\n          case 0x95:\n            return 0x2022;\n          // BULLET\n          case 0x96:\n            return 0x2013;\n          // EN DASH\n          case 0x97:\n            return 0x2014;\n          // EM DASH\n          case 0x98:\n            return 0x02DC;\n          // SMALL TILDE\n          case 0x99:\n            return 0x2122;\n          // TRADE MARK SIGN\n          case 0x9A:\n            return 0x0161;\n          // LATIN SMALL LETTER S WITH CARON\n          case 0x9B:\n            return 0x203A;\n          // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK\n          case 0x9C:\n            return 0x0153;\n          // LATIN SMALL LIGATURE OE\n          case 0x9D:\n            return 0x009D;\n          // <control>\n          case 0x9E:\n            return 0x017E;\n          // LATIN SMALL LETTER Z WITH CARON\n          case 0x9F:\n            return 0x0178;\n          // LATIN CAPITAL LETTER Y WITH DIAERESIS\n          default:\n            if (c >= 0xD800 && c <= 0xDFFF || c > 0x10FFFF) {\n              return 0xFFFD;\n            } else if (c >= 0x0001 && c <= 0x0008 || c >= 0x000E && c <= 0x001F || c >= 0x007F && c <= 0x009F || c >= 0xFDD0 && c <= 0xFDEF || c == 0x000B || c == 0xFFFE || c == 0x1FFFE || c == 0x2FFFFE || c == 0x2FFFF || c == 0x3FFFE || c == 0x3FFFF || c == 0x4FFFE || c == 0x4FFFF || c == 0x5FFFE || c == 0x5FFFF || c == 0x6FFFE || c == 0x6FFFF || c == 0x7FFFE || c == 0x7FFFF || c == 0x8FFFE || c == 0x8FFFF || c == 0x9FFFE || c == 0x9FFFF || c == 0xAFFFE || c == 0xAFFFF || c == 0xBFFFE || c == 0xBFFFF || c == 0xCFFFE || c == 0xCFFFF || c == 0xDFFFE || c == 0xDFFFF || c == 0xEFFFE || c == 0xEFFFF || c == 0xFFFFE || c == 0xFFFFF || c == 0x10FFFE || c == 0x10FFFF) {\n              return c;\n            }\n        }\n      };\n      exports.EntityParser = EntityParser;\n    }, {\n      \"./InputStream\": 3,\n      \"html5-entities\": 12\n    }],\n    3: [function (_dereq_, module, exports) {\n      function InputStream() {\n        this.data = '';\n        this.start = 0;\n        this.committed = 0;\n        this.eof = false;\n        this.lastLocation = {\n          line: 0,\n          column: 0\n        };\n      }\n      InputStream.EOF = -1;\n      InputStream.DRAIN = -2;\n      InputStream.prototype = {\n        slice: function slice() {\n          if (this.start >= this.data.length) {\n            if (!this.eof) throw InputStream.DRAIN;\n            return InputStream.EOF;\n          }\n          return this.data.slice(this.start, this.data.length);\n        },\n        char: function char() {\n          if (!this.eof && this.start >= this.data.length - 1) throw InputStream.DRAIN;\n          if (this.start >= this.data.length) {\n            return InputStream.EOF;\n          }\n          var ch = this.data[this.start++];\n          if (ch === '\\r') ch = '\\n';\n          return ch;\n        },\n        advance: function advance(amount) {\n          this.start += amount;\n          if (this.start >= this.data.length) {\n            if (!this.eof) throw InputStream.DRAIN;\n            return InputStream.EOF;\n          } else {\n            if (this.committed > this.data.length / 2) {\n              this.lastLocation = this.location();\n              this.data = this.data.slice(this.committed);\n              this.start = this.start - this.committed;\n              this.committed = 0;\n            }\n          }\n        },\n        matchWhile: function matchWhile(re) {\n          if (this.eof && this.start >= this.data.length) return '';\n          var r = new RegExp(\"^\" + re + \"+\");\n          var m = r.exec(this.slice());\n          if (m) {\n            if (!this.eof && m[0].length == this.data.length - this.start) throw InputStream.DRAIN;\n            this.advance(m[0].length);\n            return m[0];\n          } else {\n            return '';\n          }\n        },\n        matchUntil: function matchUntil(re) {\n          var m, s;\n          s = this.slice();\n          if (s === InputStream.EOF) {\n            return '';\n          } else if (m = new RegExp(re + (this.eof ? \"|$\" : \"\")).exec(s)) {\n            var t = this.data.slice(this.start, this.start + m.index);\n            this.advance(m.index);\n            return t.replace(/\\r/g, '\\n').replace(/\\n{2,}/g, '\\n');\n          } else {\n            throw InputStream.DRAIN;\n          }\n        },\n        append: function append(data) {\n          this.data += data;\n        },\n        shift: function shift(n) {\n          if (!this.eof && this.start + n >= this.data.length) throw InputStream.DRAIN;\n          if (this.eof && this.start >= this.data.length) return InputStream.EOF;\n          var d = this.data.slice(this.start, this.start + n).toString();\n          this.advance(Math.min(n, this.data.length - this.start));\n          return d;\n        },\n        peek: function peek(n) {\n          if (!this.eof && this.start + n >= this.data.length) throw InputStream.DRAIN;\n          if (this.eof && this.start >= this.data.length) return InputStream.EOF;\n          return this.data.slice(this.start, Math.min(this.start + n, this.data.length)).toString();\n        },\n        length: function length() {\n          return this.data.length - this.start - 1;\n        },\n        unget: function unget(d) {\n          if (d === InputStream.EOF) return;\n          this.start -= d.length;\n        },\n        undo: function undo() {\n          this.start = this.committed;\n        },\n        commit: function commit() {\n          this.committed = this.start;\n        },\n        location: function location() {\n          var lastLine = this.lastLocation.line;\n          var lastColumn = this.lastLocation.column;\n          var read = this.data.slice(0, this.committed);\n          var newlines = read.match(/\\n/g);\n          var line = newlines ? lastLine + newlines.length : lastLine;\n          var column = newlines ? read.length - read.lastIndexOf('\\n') - 1 : lastColumn + read.length;\n          return {\n            line: line,\n            column: column\n          };\n        }\n      };\n      exports.InputStream = InputStream;\n    }, {}],\n    4: [function (_dereq_, module, exports) {\n      var SpecialElements = {\n        \"http://www.w3.org/1999/xhtml\": ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'],\n        \"http://www.w3.org/1998/Math/MathML\": ['mi', 'mo', 'mn', 'ms', 'mtext', 'annotation-xml'],\n        \"http://www.w3.org/2000/svg\": ['foreignObject', 'desc', 'title']\n      };\n      function StackItem(namespaceURI, localName, attributes, node) {\n        this.localName = localName;\n        this.namespaceURI = namespaceURI;\n        this.attributes = attributes;\n        this.node = node;\n      }\n      StackItem.prototype.isSpecial = function () {\n        return this.namespaceURI in SpecialElements && SpecialElements[this.namespaceURI].indexOf(this.localName) > -1;\n      };\n      StackItem.prototype.isFosterParenting = function () {\n        if (this.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\n          return this.localName === 'table' || this.localName === 'tbody' || this.localName === 'tfoot' || this.localName === 'thead' || this.localName === 'tr';\n        }\n        return false;\n      };\n      StackItem.prototype.isNumberedHeader = function () {\n        if (this.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\n          return this.localName === 'h1' || this.localName === 'h2' || this.localName === 'h3' || this.localName === 'h4' || this.localName === 'h5' || this.localName === 'h6';\n        }\n        return false;\n      };\n      StackItem.prototype.isForeign = function () {\n        return this.namespaceURI != \"http://www.w3.org/1999/xhtml\";\n      };\n      function getAttribute(item, name) {\n        for (var i = 0; i < item.attributes.length; i++) {\n          if (item.attributes[i].nodeName == name) return item.attributes[i].nodeValue;\n        }\n        return null;\n      }\n      StackItem.prototype.isHtmlIntegrationPoint = function () {\n        if (this.namespaceURI === \"http://www.w3.org/1998/Math/MathML\") {\n          if (this.localName !== \"annotation-xml\") return false;\n          var encoding = getAttribute(this, 'encoding');\n          if (!encoding) return false;\n          encoding = encoding.toLowerCase();\n          return encoding === \"text/html\" || encoding === \"application/xhtml+xml\";\n        }\n        if (this.namespaceURI === \"http://www.w3.org/2000/svg\") {\n          return this.localName === \"foreignObject\" || this.localName === \"desc\" || this.localName === \"title\";\n        }\n        return false;\n      };\n      StackItem.prototype.isMathMLTextIntegrationPoint = function () {\n        if (this.namespaceURI === \"http://www.w3.org/1998/Math/MathML\") {\n          return this.localName === \"mi\" || this.localName === \"mo\" || this.localName === \"mn\" || this.localName === \"ms\" || this.localName === \"mtext\";\n        }\n        return false;\n      };\n      exports.StackItem = StackItem;\n    }, {}],\n    5: [function (_dereq_, module, exports) {\n      var InputStream = _dereq_('./InputStream').InputStream;\n      var EntityParser = _dereq_('./EntityParser').EntityParser;\n      function isWhitespace(c) {\n        return c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\r\" || c === \"\\f\";\n      }\n      function isAlpha(c) {\n        return c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z';\n      }\n      function Tokenizer(tokenHandler) {\n        this._tokenHandler = tokenHandler;\n        this._state = Tokenizer.DATA;\n        this._inputStream = new InputStream();\n        this._currentToken = null;\n        this._temporaryBuffer = '';\n        this._additionalAllowedCharacter = '';\n      }\n      Tokenizer.prototype._parseError = function (code, args) {\n        this._tokenHandler.parseError(code, args);\n      };\n      Tokenizer.prototype._emitToken = function (token) {\n        if (token.type === 'StartTag') {\n          for (var i = 1; i < token.data.length; i++) {\n            if (!token.data[i].nodeName) token.data.splice(i--, 1);\n          }\n        } else if (token.type === 'EndTag') {\n          if (token.selfClosing) {\n            this._parseError('self-closing-flag-on-end-tag');\n          }\n          if (token.data.length !== 0) {\n            this._parseError('attributes-in-end-tag');\n          }\n        }\n        this._tokenHandler.processToken(token);\n        if (token.type === 'StartTag' && token.selfClosing && !this._tokenHandler.isSelfClosingFlagAcknowledged()) {\n          this._parseError('non-void-element-with-trailing-solidus', {\n            name: token.name\n          });\n        }\n      };\n      Tokenizer.prototype._emitCurrentToken = function () {\n        this._state = Tokenizer.DATA;\n        this._emitToken(this._currentToken);\n      };\n      Tokenizer.prototype._currentAttribute = function () {\n        return this._currentToken.data[this._currentToken.data.length - 1];\n      };\n      Tokenizer.prototype.setState = function (state) {\n        this._state = state;\n      };\n      Tokenizer.prototype.tokenize = function (source) {\n        Tokenizer.DATA = data_state;\n        Tokenizer.RCDATA = rcdata_state;\n        Tokenizer.RAWTEXT = rawtext_state;\n        Tokenizer.SCRIPT_DATA = script_data_state;\n        Tokenizer.PLAINTEXT = plaintext_state;\n        this._state = Tokenizer.DATA;\n        this._inputStream.append(source);\n        this._tokenHandler.startTokenization(this);\n        this._inputStream.eof = true;\n        var tokenizer = this;\n        while (this._state.call(this, this._inputStream));\n        function data_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._emitToken({\n              type: 'EOF',\n              data: null\n            });\n            return false;\n          } else if (data === '&') {\n            tokenizer.setState(character_reference_in_data_state);\n          } else if (data === '<') {\n            tokenizer.setState(tag_open_state);\n          } else if (data === \"\\0\") {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            buffer.commit();\n          } else {\n            var chars = buffer.matchUntil(\"&|<|\\0\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data + chars\n            });\n            buffer.commit();\n          }\n          return true;\n        }\n        function character_reference_in_data_state(buffer) {\n          var character = EntityParser.consumeEntity(buffer, tokenizer);\n          tokenizer.setState(data_state);\n          tokenizer._emitToken({\n            type: 'Characters',\n            data: character || '&'\n          });\n          return true;\n        }\n        function rcdata_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._emitToken({\n              type: 'EOF',\n              data: null\n            });\n            return false;\n          } else if (data === '&') {\n            tokenizer.setState(character_reference_in_rcdata_state);\n          } else if (data === '<') {\n            tokenizer.setState(rcdata_less_than_sign_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            buffer.commit();\n          } else {\n            var chars = buffer.matchUntil(\"&|<|\\0\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data + chars\n            });\n            buffer.commit();\n          }\n          return true;\n        }\n        function character_reference_in_rcdata_state(buffer) {\n          var character = EntityParser.consumeEntity(buffer, tokenizer);\n          tokenizer.setState(rcdata_state);\n          tokenizer._emitToken({\n            type: 'Characters',\n            data: character || '&'\n          });\n          return true;\n        }\n        function rawtext_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._emitToken({\n              type: 'EOF',\n              data: null\n            });\n            return false;\n          } else if (data === '<') {\n            tokenizer.setState(rawtext_less_than_sign_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            buffer.commit();\n          } else {\n            var chars = buffer.matchUntil(\"<|\\0\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data + chars\n            });\n          }\n          return true;\n        }\n        function plaintext_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._emitToken({\n              type: 'EOF',\n              data: null\n            });\n            return false;\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            buffer.commit();\n          } else {\n            var chars = buffer.matchUntil(\"\\0\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data + chars\n            });\n          }\n          return true;\n        }\n        function script_data_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._emitToken({\n              type: 'EOF',\n              data: null\n            });\n            return false;\n          } else if (data === '<') {\n            tokenizer.setState(script_data_less_than_sign_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            buffer.commit();\n          } else {\n            var chars = buffer.matchUntil(\"<|\\0\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data + chars\n            });\n          }\n          return true;\n        }\n        function rcdata_less_than_sign_state(buffer) {\n          var data = buffer.char();\n          if (data === \"/\") {\n            this._temporaryBuffer = '';\n            tokenizer.setState(rcdata_end_tag_open_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<'\n            });\n            buffer.unget(data);\n            tokenizer.setState(rcdata_state);\n          }\n          return true;\n        }\n        function rcdata_end_tag_open_state(buffer) {\n          var data = buffer.char();\n          if (isAlpha(data)) {\n            this._temporaryBuffer += data;\n            tokenizer.setState(rcdata_end_tag_name_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '</'\n            });\n            buffer.unget(data);\n            tokenizer.setState(rcdata_state);\n          }\n          return true;\n        }\n        function rcdata_end_tag_name_state(buffer) {\n          var appropriate = tokenizer._currentToken && tokenizer._currentToken.name === this._temporaryBuffer.toLowerCase();\n          var data = buffer.char();\n          if (isWhitespace(data) && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: this._temporaryBuffer,\n              data: [],\n              selfClosing: false\n            };\n            tokenizer.setState(before_attribute_name_state);\n          } else if (data === '/' && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: this._temporaryBuffer,\n              data: [],\n              selfClosing: false\n            };\n            tokenizer.setState(self_closing_tag_state);\n          } else if (data === '>' && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: this._temporaryBuffer,\n              data: [],\n              selfClosing: false\n            };\n            tokenizer._emitCurrentToken();\n            tokenizer.setState(data_state);\n          } else if (isAlpha(data)) {\n            this._temporaryBuffer += data;\n            buffer.commit();\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '</' + this._temporaryBuffer\n            });\n            buffer.unget(data);\n            tokenizer.setState(rcdata_state);\n          }\n          return true;\n        }\n        function rawtext_less_than_sign_state(buffer) {\n          var data = buffer.char();\n          if (data === \"/\") {\n            this._temporaryBuffer = '';\n            tokenizer.setState(rawtext_end_tag_open_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<'\n            });\n            buffer.unget(data);\n            tokenizer.setState(rawtext_state);\n          }\n          return true;\n        }\n        function rawtext_end_tag_open_state(buffer) {\n          var data = buffer.char();\n          if (isAlpha(data)) {\n            this._temporaryBuffer += data;\n            tokenizer.setState(rawtext_end_tag_name_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '</'\n            });\n            buffer.unget(data);\n            tokenizer.setState(rawtext_state);\n          }\n          return true;\n        }\n        function rawtext_end_tag_name_state(buffer) {\n          var appropriate = tokenizer._currentToken && tokenizer._currentToken.name === this._temporaryBuffer.toLowerCase();\n          var data = buffer.char();\n          if (isWhitespace(data) && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: this._temporaryBuffer,\n              data: [],\n              selfClosing: false\n            };\n            tokenizer.setState(before_attribute_name_state);\n          } else if (data === '/' && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: this._temporaryBuffer,\n              data: [],\n              selfClosing: false\n            };\n            tokenizer.setState(self_closing_tag_state);\n          } else if (data === '>' && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: this._temporaryBuffer,\n              data: [],\n              selfClosing: false\n            };\n            tokenizer._emitCurrentToken();\n            tokenizer.setState(data_state);\n          } else if (isAlpha(data)) {\n            this._temporaryBuffer += data;\n            buffer.commit();\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '</' + this._temporaryBuffer\n            });\n            buffer.unget(data);\n            tokenizer.setState(rawtext_state);\n          }\n          return true;\n        }\n        function script_data_less_than_sign_state(buffer) {\n          var data = buffer.char();\n          if (data === \"/\") {\n            this._temporaryBuffer = '';\n            tokenizer.setState(script_data_end_tag_open_state);\n          } else if (data === '!') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<!'\n            });\n            tokenizer.setState(script_data_escape_start_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<'\n            });\n            buffer.unget(data);\n            tokenizer.setState(script_data_state);\n          }\n          return true;\n        }\n        function script_data_end_tag_open_state(buffer) {\n          var data = buffer.char();\n          if (isAlpha(data)) {\n            this._temporaryBuffer += data;\n            tokenizer.setState(script_data_end_tag_name_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '</'\n            });\n            buffer.unget(data);\n            tokenizer.setState(script_data_state);\n          }\n          return true;\n        }\n        function script_data_end_tag_name_state(buffer) {\n          var appropriate = tokenizer._currentToken && tokenizer._currentToken.name === this._temporaryBuffer.toLowerCase();\n          var data = buffer.char();\n          if (isWhitespace(data) && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: 'script',\n              data: [],\n              selfClosing: false\n            };\n            tokenizer.setState(before_attribute_name_state);\n          } else if (data === '/' && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: 'script',\n              data: [],\n              selfClosing: false\n            };\n            tokenizer.setState(self_closing_tag_state);\n          } else if (data === '>' && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: 'script',\n              data: [],\n              selfClosing: false\n            };\n            tokenizer._emitCurrentToken();\n          } else if (isAlpha(data)) {\n            this._temporaryBuffer += data;\n            buffer.commit();\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '</' + this._temporaryBuffer\n            });\n            buffer.unget(data);\n            tokenizer.setState(script_data_state);\n          }\n          return true;\n        }\n        function script_data_escape_start_state(buffer) {\n          var data = buffer.char();\n          if (data === '-') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '-'\n            });\n            tokenizer.setState(script_data_escape_start_dash_state);\n          } else {\n            buffer.unget(data);\n            tokenizer.setState(script_data_state);\n          }\n          return true;\n        }\n        function script_data_escape_start_dash_state(buffer) {\n          var data = buffer.char();\n          if (data === '-') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '-'\n            });\n            tokenizer.setState(script_data_escaped_dash_dash_state);\n          } else {\n            buffer.unget(data);\n            tokenizer.setState(script_data_state);\n          }\n          return true;\n        }\n        function script_data_escaped_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '-'\n            });\n            tokenizer.setState(script_data_escaped_dash_state);\n          } else if (data === '<') {\n            tokenizer.setState(script_data_escaped_less_then_sign_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            buffer.commit();\n          } else {\n            var chars = buffer.matchUntil(\"<|-|\\0\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data + chars\n            });\n          }\n          return true;\n        }\n        function script_data_escaped_dash_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '-'\n            });\n            tokenizer.setState(script_data_escaped_dash_dash_state);\n          } else if (data === '<') {\n            tokenizer.setState(script_data_escaped_less_then_sign_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            tokenizer.setState(script_data_escaped_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            tokenizer.setState(script_data_escaped_state);\n          }\n          return true;\n        }\n        function script_data_escaped_dash_dash_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError('eof-in-script');\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '<') {\n            tokenizer.setState(script_data_escaped_less_then_sign_state);\n          } else if (data === '>') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '>'\n            });\n            tokenizer.setState(script_data_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            tokenizer.setState(script_data_escaped_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            tokenizer.setState(script_data_escaped_state);\n          }\n          return true;\n        }\n        function script_data_escaped_less_then_sign_state(buffer) {\n          var data = buffer.char();\n          if (data === '/') {\n            this._temporaryBuffer = '';\n            tokenizer.setState(script_data_escaped_end_tag_open_state);\n          } else if (isAlpha(data)) {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<' + data\n            });\n            this._temporaryBuffer = data;\n            tokenizer.setState(script_data_double_escape_start_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<'\n            });\n            buffer.unget(data);\n            tokenizer.setState(script_data_escaped_state);\n          }\n          return true;\n        }\n        function script_data_escaped_end_tag_open_state(buffer) {\n          var data = buffer.char();\n          if (isAlpha(data)) {\n            this._temporaryBuffer = data;\n            tokenizer.setState(script_data_escaped_end_tag_name_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '</'\n            });\n            buffer.unget(data);\n            tokenizer.setState(script_data_escaped_state);\n          }\n          return true;\n        }\n        function script_data_escaped_end_tag_name_state(buffer) {\n          var appropriate = tokenizer._currentToken && tokenizer._currentToken.name === this._temporaryBuffer.toLowerCase();\n          var data = buffer.char();\n          if (isWhitespace(data) && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: 'script',\n              data: [],\n              selfClosing: false\n            };\n            tokenizer.setState(before_attribute_name_state);\n          } else if (data === '/' && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: 'script',\n              data: [],\n              selfClosing: false\n            };\n            tokenizer.setState(self_closing_tag_state);\n          } else if (data === '>' && appropriate) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: 'script',\n              data: [],\n              selfClosing: false\n            };\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (isAlpha(data)) {\n            this._temporaryBuffer += data;\n            buffer.commit();\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '</' + this._temporaryBuffer\n            });\n            buffer.unget(data);\n            tokenizer.setState(script_data_escaped_state);\n          }\n          return true;\n        }\n        function script_data_double_escape_start_state(buffer) {\n          var data = buffer.char();\n          if (isWhitespace(data) || data === '/' || data === '>') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            if (this._temporaryBuffer.toLowerCase() === 'script') tokenizer.setState(script_data_double_escaped_state);else tokenizer.setState(script_data_escaped_state);\n          } else if (isAlpha(data)) {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            this._temporaryBuffer += data;\n            buffer.commit();\n          } else {\n            buffer.unget(data);\n            tokenizer.setState(script_data_escaped_state);\n          }\n          return true;\n        }\n        function script_data_double_escaped_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError('eof-in-script');\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '-'\n            });\n            tokenizer.setState(script_data_double_escaped_dash_state);\n          } else if (data === '<') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<'\n            });\n            tokenizer.setState(script_data_double_escaped_less_than_sign_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError('invalid-codepoint');\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            buffer.commit();\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            buffer.commit();\n          }\n          return true;\n        }\n        function script_data_double_escaped_dash_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError('eof-in-script');\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '-'\n            });\n            tokenizer.setState(script_data_double_escaped_dash_dash_state);\n          } else if (data === '<') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<'\n            });\n            tokenizer.setState(script_data_double_escaped_less_than_sign_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError('invalid-codepoint');\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            tokenizer.setState(script_data_double_escaped_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            tokenizer.setState(script_data_double_escaped_state);\n          }\n          return true;\n        }\n        function script_data_double_escaped_dash_dash_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError('eof-in-script');\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '-'\n            });\n            buffer.commit();\n          } else if (data === '<') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<'\n            });\n            tokenizer.setState(script_data_double_escaped_less_than_sign_state);\n          } else if (data === '>') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '>'\n            });\n            tokenizer.setState(script_data_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError('invalid-codepoint');\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"\\uFFFD\"\n            });\n            tokenizer.setState(script_data_double_escaped_state);\n          } else {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            tokenizer.setState(script_data_double_escaped_state);\n          }\n          return true;\n        }\n        function script_data_double_escaped_less_than_sign_state(buffer) {\n          var data = buffer.char();\n          if (data === '/') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '/'\n            });\n            this._temporaryBuffer = '';\n            tokenizer.setState(script_data_double_escape_end_state);\n          } else {\n            buffer.unget(data);\n            tokenizer.setState(script_data_double_escaped_state);\n          }\n          return true;\n        }\n        function script_data_double_escape_end_state(buffer) {\n          var data = buffer.char();\n          if (isWhitespace(data) || data === '/' || data === '>') {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            if (this._temporaryBuffer.toLowerCase() === 'script') tokenizer.setState(script_data_escaped_state);else tokenizer.setState(script_data_double_escaped_state);\n          } else if (isAlpha(data)) {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n            this._temporaryBuffer += data;\n            buffer.commit();\n          } else {\n            buffer.unget(data);\n            tokenizer.setState(script_data_double_escaped_state);\n          }\n          return true;\n        }\n        function tag_open_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"bare-less-than-sign-at-eof\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '<'\n            });\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isAlpha(data)) {\n            tokenizer._currentToken = {\n              type: 'StartTag',\n              name: data.toLowerCase(),\n              data: []\n            };\n            tokenizer.setState(tag_name_state);\n          } else if (data === '!') {\n            tokenizer.setState(markup_declaration_open_state);\n          } else if (data === '/') {\n            tokenizer.setState(close_tag_open_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"expected-tag-name-but-got-right-bracket\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"<>\"\n            });\n            tokenizer.setState(data_state);\n          } else if (data === '?') {\n            tokenizer._parseError(\"expected-tag-name-but-got-question-mark\");\n            buffer.unget(data);\n            tokenizer.setState(bogus_comment_state);\n          } else {\n            tokenizer._parseError(\"expected-tag-name\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: \"<\"\n            });\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          }\n          return true;\n        }\n        function close_tag_open_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"expected-closing-tag-but-got-eof\");\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: '</'\n            });\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isAlpha(data)) {\n            tokenizer._currentToken = {\n              type: 'EndTag',\n              name: data.toLowerCase(),\n              data: []\n            };\n            tokenizer.setState(tag_name_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"expected-closing-tag-but-got-right-bracket\");\n            tokenizer.setState(data_state);\n          } else {\n            tokenizer._parseError(\"expected-closing-tag-but-got-char\", {\n              data: data\n            }); // param 1 is datavars:\n            buffer.unget(data);\n            tokenizer.setState(bogus_comment_state);\n          }\n          return true;\n        }\n        function tag_name_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError('eof-in-tag-name');\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {\n            tokenizer.setState(before_attribute_name_state);\n          } else if (isAlpha(data)) {\n            tokenizer._currentToken.name += data.toLowerCase();\n          } else if (data === '>') {\n            tokenizer._emitCurrentToken();\n          } else if (data === '/') {\n            tokenizer.setState(self_closing_tag_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentToken.name += \"\\uFFFD\";\n          } else {\n            tokenizer._currentToken.name += data;\n          }\n          buffer.commit();\n          return true;\n        }\n        function before_attribute_name_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"expected-attribute-name-but-got-eof\");\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {\n            return true;\n          } else if (isAlpha(data)) {\n            tokenizer._currentToken.data.push({\n              nodeName: data.toLowerCase(),\n              nodeValue: \"\"\n            });\n            tokenizer.setState(attribute_name_state);\n          } else if (data === '>') {\n            tokenizer._emitCurrentToken();\n          } else if (data === '/') {\n            tokenizer.setState(self_closing_tag_state);\n          } else if (data === \"'\" || data === '\"' || data === '=' || data === '<') {\n            tokenizer._parseError(\"invalid-character-in-attribute-name\");\n            tokenizer._currentToken.data.push({\n              nodeName: data,\n              nodeValue: \"\"\n            });\n            tokenizer.setState(attribute_name_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentToken.data.push({\n              nodeName: \"\\uFFFD\",\n              nodeValue: \"\"\n            });\n          } else {\n            tokenizer._currentToken.data.push({\n              nodeName: data,\n              nodeValue: \"\"\n            });\n            tokenizer.setState(attribute_name_state);\n          }\n          return true;\n        }\n        function attribute_name_state(buffer) {\n          var data = buffer.char();\n          var leavingThisState = true;\n          var shouldEmit = false;\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-attribute-name\");\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n            shouldEmit = true;\n          } else if (data === '=') {\n            tokenizer.setState(before_attribute_value_state);\n          } else if (isAlpha(data)) {\n            tokenizer._currentAttribute().nodeName += data.toLowerCase();\n            leavingThisState = false;\n          } else if (data === '>') {\n            shouldEmit = true;\n          } else if (isWhitespace(data)) {\n            tokenizer.setState(after_attribute_name_state);\n          } else if (data === '/') {\n            tokenizer.setState(self_closing_tag_state);\n          } else if (data === \"'\" || data === '\"') {\n            tokenizer._parseError(\"invalid-character-in-attribute-name\");\n            tokenizer._currentAttribute().nodeName += data;\n            leavingThisState = false;\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentAttribute().nodeName += \"\\uFFFD\";\n          } else {\n            tokenizer._currentAttribute().nodeName += data;\n            leavingThisState = false;\n          }\n          if (leavingThisState) {\n            var attributes = tokenizer._currentToken.data;\n            var currentAttribute = attributes[attributes.length - 1];\n            for (var i = attributes.length - 2; i >= 0; i--) {\n              if (currentAttribute.nodeName === attributes[i].nodeName) {\n                tokenizer._parseError(\"duplicate-attribute\", {\n                  name: currentAttribute.nodeName\n                });\n                currentAttribute.nodeName = null;\n                break;\n              }\n            }\n            if (shouldEmit) tokenizer._emitCurrentToken();\n          } else {\n            buffer.commit();\n          }\n          return true;\n        }\n        function after_attribute_name_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"expected-end-of-tag-but-got-eof\");\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {\n            return true;\n          } else if (data === '=') {\n            tokenizer.setState(before_attribute_value_state);\n          } else if (data === '>') {\n            tokenizer._emitCurrentToken();\n          } else if (isAlpha(data)) {\n            tokenizer._currentToken.data.push({\n              nodeName: data,\n              nodeValue: \"\"\n            });\n            tokenizer.setState(attribute_name_state);\n          } else if (data === '/') {\n            tokenizer.setState(self_closing_tag_state);\n          } else if (data === \"'\" || data === '\"' || data === '<') {\n            tokenizer._parseError(\"invalid-character-after-attribute-name\");\n            tokenizer._currentToken.data.push({\n              nodeName: data,\n              nodeValue: \"\"\n            });\n            tokenizer.setState(attribute_name_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentToken.data.push({\n              nodeName: \"\\uFFFD\",\n              nodeValue: \"\"\n            });\n          } else {\n            tokenizer._currentToken.data.push({\n              nodeName: data,\n              nodeValue: \"\"\n            });\n            tokenizer.setState(attribute_name_state);\n          }\n          return true;\n        }\n        function before_attribute_value_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"expected-attribute-value-but-got-eof\");\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {\n            return true;\n          } else if (data === '\"') {\n            tokenizer.setState(attribute_value_double_quoted_state);\n          } else if (data === '&') {\n            tokenizer.setState(attribute_value_unquoted_state);\n            buffer.unget(data);\n          } else if (data === \"'\") {\n            tokenizer.setState(attribute_value_single_quoted_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"expected-attribute-value-but-got-right-bracket\");\n            tokenizer._emitCurrentToken();\n          } else if (data === '=' || data === '<' || data === '`') {\n            tokenizer._parseError(\"unexpected-character-in-unquoted-attribute-value\");\n            tokenizer._currentAttribute().nodeValue += data;\n            tokenizer.setState(attribute_value_unquoted_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentAttribute().nodeValue += \"\\uFFFD\";\n          } else {\n            tokenizer._currentAttribute().nodeValue += data;\n            tokenizer.setState(attribute_value_unquoted_state);\n          }\n          return true;\n        }\n        function attribute_value_double_quoted_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-attribute-value-double-quote\");\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '\"') {\n            tokenizer.setState(after_attribute_value_state);\n          } else if (data === '&') {\n            this._additionalAllowedCharacter = '\"';\n            tokenizer.setState(character_reference_in_attribute_value_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentAttribute().nodeValue += \"\\uFFFD\";\n          } else {\n            var s = buffer.matchUntil('[\\0\"&]');\n            data = data + s;\n            tokenizer._currentAttribute().nodeValue += data;\n          }\n          return true;\n        }\n        function attribute_value_single_quoted_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-attribute-value-single-quote\");\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === \"'\") {\n            tokenizer.setState(after_attribute_value_state);\n          } else if (data === '&') {\n            this._additionalAllowedCharacter = \"'\";\n            tokenizer.setState(character_reference_in_attribute_value_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentAttribute().nodeValue += \"\\uFFFD\";\n          } else {\n            tokenizer._currentAttribute().nodeValue += data + buffer.matchUntil(\"\\0|['&]\");\n          }\n          return true;\n        }\n        function attribute_value_unquoted_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-after-attribute-value\");\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {\n            tokenizer.setState(before_attribute_name_state);\n          } else if (data === '&') {\n            this._additionalAllowedCharacter = \">\";\n            tokenizer.setState(character_reference_in_attribute_value_state);\n          } else if (data === '>') {\n            tokenizer._emitCurrentToken();\n          } else if (data === '\"' || data === \"'\" || data === '=' || data === '`' || data === '<') {\n            tokenizer._parseError(\"unexpected-character-in-unquoted-attribute-value\");\n            tokenizer._currentAttribute().nodeValue += data;\n            buffer.commit();\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentAttribute().nodeValue += \"\\uFFFD\";\n          } else {\n            var o = buffer.matchUntil(\"\\0|[\" + \"\\t\\n\\v\\f\\x20\\r\" + \"&<>\\\"'=`\" + \"]\");\n            if (o === InputStream.EOF) {\n              tokenizer._parseError(\"eof-in-attribute-value-no-quotes\");\n              tokenizer._emitCurrentToken();\n            }\n            buffer.commit();\n            tokenizer._currentAttribute().nodeValue += data + o;\n          }\n          return true;\n        }\n        function character_reference_in_attribute_value_state(buffer) {\n          var character = EntityParser.consumeEntity(buffer, tokenizer, this._additionalAllowedCharacter);\n          this._currentAttribute().nodeValue += character || '&';\n          if (this._additionalAllowedCharacter === '\"') tokenizer.setState(attribute_value_double_quoted_state);else if (this._additionalAllowedCharacter === '\\'') tokenizer.setState(attribute_value_single_quoted_state);else if (this._additionalAllowedCharacter === '>') tokenizer.setState(attribute_value_unquoted_state);\n          return true;\n        }\n        function after_attribute_value_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-after-attribute-value\");\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {\n            tokenizer.setState(before_attribute_name_state);\n          } else if (data === '>') {\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (data === '/') {\n            tokenizer.setState(self_closing_tag_state);\n          } else {\n            tokenizer._parseError(\"unexpected-character-after-attribute-value\");\n            buffer.unget(data);\n            tokenizer.setState(before_attribute_name_state);\n          }\n          return true;\n        }\n        function self_closing_tag_state(buffer) {\n          var c = buffer.char();\n          if (c === InputStream.EOF) {\n            tokenizer._parseError(\"unexpected-eof-after-solidus-in-tag\");\n            buffer.unget(c);\n            tokenizer.setState(data_state);\n          } else if (c === '>') {\n            tokenizer._currentToken.selfClosing = true;\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else {\n            tokenizer._parseError(\"unexpected-character-after-solidus-in-tag\");\n            buffer.unget(c);\n            tokenizer.setState(before_attribute_name_state);\n          }\n          return true;\n        }\n        function bogus_comment_state(buffer) {\n          var data = buffer.matchUntil('>');\n          data = data.replace(/\\u0000/g, \"\\uFFFD\");\n          buffer.char();\n          tokenizer._emitToken({\n            type: 'Comment',\n            data: data\n          });\n          tokenizer.setState(data_state);\n          return true;\n        }\n        function markup_declaration_open_state(buffer) {\n          var chars = buffer.shift(2);\n          if (chars === '--') {\n            tokenizer._currentToken = {\n              type: 'Comment',\n              data: ''\n            };\n            tokenizer.setState(comment_start_state);\n          } else {\n            var newchars = buffer.shift(5);\n            if (newchars === InputStream.EOF || chars === InputStream.EOF) {\n              tokenizer._parseError(\"expected-dashes-or-doctype\");\n              tokenizer.setState(bogus_comment_state);\n              buffer.unget(chars);\n              return true;\n            }\n            chars += newchars;\n            if (chars.toUpperCase() === 'DOCTYPE') {\n              tokenizer._currentToken = {\n                type: 'Doctype',\n                name: '',\n                publicId: null,\n                systemId: null,\n                forceQuirks: false\n              };\n              tokenizer.setState(doctype_state);\n            } else if (tokenizer._tokenHandler.isCdataSectionAllowed() && chars === '[CDATA[') {\n              tokenizer.setState(cdata_section_state);\n            } else {\n              tokenizer._parseError(\"expected-dashes-or-doctype\");\n              buffer.unget(chars);\n              tokenizer.setState(bogus_comment_state);\n            }\n          }\n          return true;\n        }\n        function cdata_section_state(buffer) {\n          var data = buffer.matchUntil(']]>');\n          buffer.shift(3);\n          if (data) {\n            tokenizer._emitToken({\n              type: 'Characters',\n              data: data\n            });\n          }\n          tokenizer.setState(data_state);\n          return true;\n        }\n        function comment_start_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-comment\");\n            tokenizer._emitToken(tokenizer._currentToken);\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer.setState(comment_start_dash_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"incorrect-comment\");\n            tokenizer._emitToken(tokenizer._currentToken);\n            tokenizer.setState(data_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentToken.data += \"\\uFFFD\";\n          } else {\n            tokenizer._currentToken.data += data;\n            tokenizer.setState(comment_state);\n          }\n          return true;\n        }\n        function comment_start_dash_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-comment\");\n            tokenizer._emitToken(tokenizer._currentToken);\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer.setState(comment_end_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"incorrect-comment\");\n            tokenizer._emitToken(tokenizer._currentToken);\n            tokenizer.setState(data_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentToken.data += \"\\uFFFD\";\n          } else {\n            tokenizer._currentToken.data += '-' + data;\n            tokenizer.setState(comment_state);\n          }\n          return true;\n        }\n        function comment_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-comment\");\n            tokenizer._emitToken(tokenizer._currentToken);\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer.setState(comment_end_dash_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentToken.data += \"\\uFFFD\";\n          } else {\n            tokenizer._currentToken.data += data;\n            buffer.commit();\n          }\n          return true;\n        }\n        function comment_end_dash_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-comment-end-dash\");\n            tokenizer._emitToken(tokenizer._currentToken);\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer.setState(comment_end_state);\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentToken.data += \"-\\uFFFD\";\n            tokenizer.setState(comment_state);\n          } else {\n            tokenizer._currentToken.data += '-' + data + buffer.matchUntil(\"\\0|-\");\n            buffer.char();\n          }\n          return true;\n        }\n        function comment_end_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-comment-double-dash\");\n            tokenizer._emitToken(tokenizer._currentToken);\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '>') {\n            tokenizer._emitToken(tokenizer._currentToken);\n            tokenizer.setState(data_state);\n          } else if (data === '!') {\n            tokenizer._parseError(\"unexpected-bang-after-double-dash-in-comment\");\n            tokenizer.setState(comment_end_bang_state);\n          } else if (data === '-') {\n            tokenizer._parseError(\"unexpected-dash-after-double-dash-in-comment\");\n            tokenizer._currentToken.data += data;\n          } else if (data === \"\\0\") {\n            tokenizer._parseError(\"invalid-codepoint\");\n            tokenizer._currentToken.data += \"--\\uFFFD\";\n            tokenizer.setState(comment_state);\n          } else {\n            tokenizer._parseError(\"unexpected-char-in-comment\");\n            tokenizer._currentToken.data += '--' + data;\n            tokenizer.setState(comment_state);\n          }\n          return true;\n        }\n        function comment_end_bang_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-comment-end-bang-state\");\n            tokenizer._emitToken(tokenizer._currentToken);\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '>') {\n            tokenizer._emitToken(tokenizer._currentToken);\n            tokenizer.setState(data_state);\n          } else if (data === '-') {\n            tokenizer._currentToken.data += '--!';\n            tokenizer.setState(comment_end_dash_state);\n          } else {\n            tokenizer._currentToken.data += '--!' + data;\n            tokenizer.setState(comment_state);\n          }\n          return true;\n        }\n        function doctype_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"expected-doctype-name-but-got-eof\");\n            tokenizer._currentToken.forceQuirks = true;\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (isWhitespace(data)) {\n            tokenizer.setState(before_doctype_name_state);\n          } else {\n            tokenizer._parseError(\"need-space-after-doctype\");\n            buffer.unget(data);\n            tokenizer.setState(before_doctype_name_state);\n          }\n          return true;\n        }\n        function before_doctype_name_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"expected-doctype-name-but-got-eof\");\n            tokenizer._currentToken.forceQuirks = true;\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (isWhitespace(data)) {} else if (data === '>') {\n            tokenizer._parseError(\"expected-doctype-name-but-got-right-bracket\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else {\n            if (isAlpha(data)) data = data.toLowerCase();\n            tokenizer._currentToken.name = data;\n            tokenizer.setState(doctype_name_state);\n          }\n          return true;\n        }\n        function doctype_name_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._currentToken.forceQuirks = true;\n            buffer.unget(data);\n            tokenizer._parseError(\"eof-in-doctype-name\");\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (isWhitespace(data)) {\n            tokenizer.setState(after_doctype_name_state);\n          } else if (data === '>') {\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else {\n            if (isAlpha(data)) data = data.toLowerCase();\n            tokenizer._currentToken.name += data;\n            buffer.commit();\n          }\n          return true;\n        }\n        function after_doctype_name_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._currentToken.forceQuirks = true;\n            buffer.unget(data);\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (isWhitespace(data)) {} else if (data === '>') {\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else {\n            if (['p', 'P'].indexOf(data) > -1) {\n              var expected = [['u', 'U'], ['b', 'B'], ['l', 'L'], ['i', 'I'], ['c', 'C']];\n              var matched = expected.every(function (expected) {\n                data = buffer.char();\n                return expected.indexOf(data) > -1;\n              });\n              if (matched) {\n                tokenizer.setState(after_doctype_public_keyword_state);\n                return true;\n              }\n            } else if (['s', 'S'].indexOf(data) > -1) {\n              var expected = [['y', 'Y'], ['s', 'S'], ['t', 'T'], ['e', 'E'], ['m', 'M']];\n              var matched = expected.every(function (expected) {\n                data = buffer.char();\n                return expected.indexOf(data) > -1;\n              });\n              if (matched) {\n                tokenizer.setState(after_doctype_system_keyword_state);\n                return true;\n              }\n            }\n            buffer.unget(data);\n            tokenizer._currentToken.forceQuirks = true;\n            if (data === InputStream.EOF) {\n              tokenizer._parseError(\"eof-in-doctype\");\n              buffer.unget(data);\n              tokenizer.setState(data_state);\n              tokenizer._emitCurrentToken();\n            } else {\n              tokenizer._parseError(\"expected-space-or-right-bracket-in-doctype\", {\n                data: data\n              });\n              tokenizer.setState(bogus_doctype_state);\n            }\n          }\n          return true;\n        }\n        function after_doctype_public_keyword_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (isWhitespace(data)) {\n            tokenizer.setState(before_doctype_public_identifier_state);\n          } else if (data === \"'\" || data === '\"') {\n            tokenizer._parseError(\"unexpected-char-in-doctype\");\n            buffer.unget(data);\n            tokenizer.setState(before_doctype_public_identifier_state);\n          } else {\n            buffer.unget(data);\n            tokenizer.setState(before_doctype_public_identifier_state);\n          }\n          return true;\n        }\n        function before_doctype_public_identifier_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (isWhitespace(data)) {} else if (data === '\"') {\n            tokenizer._currentToken.publicId = '';\n            tokenizer.setState(doctype_public_identifier_double_quoted_state);\n          } else if (data === \"'\") {\n            tokenizer._currentToken.publicId = '';\n            tokenizer.setState(doctype_public_identifier_single_quoted_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"unexpected-end-of-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else {\n            tokenizer._parseError(\"unexpected-char-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer.setState(bogus_doctype_state);\n          }\n          return true;\n        }\n        function doctype_public_identifier_double_quoted_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (data === '\"') {\n            tokenizer.setState(after_doctype_public_identifier_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"unexpected-end-of-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else {\n            tokenizer._currentToken.publicId += data;\n          }\n          return true;\n        }\n        function doctype_public_identifier_single_quoted_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (data === \"'\") {\n            tokenizer.setState(after_doctype_public_identifier_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"unexpected-end-of-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else {\n            tokenizer._currentToken.publicId += data;\n          }\n          return true;\n        }\n        function after_doctype_public_identifier_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {\n            tokenizer.setState(between_doctype_public_and_system_identifiers_state);\n          } else if (data === '>') {\n            tokenizer.setState(data_state);\n            tokenizer._emitCurrentToken();\n          } else if (data === '\"') {\n            tokenizer._parseError(\"unexpected-char-in-doctype\");\n            tokenizer._currentToken.systemId = '';\n            tokenizer.setState(doctype_system_identifier_double_quoted_state);\n          } else if (data === \"'\") {\n            tokenizer._parseError(\"unexpected-char-in-doctype\");\n            tokenizer._currentToken.systemId = '';\n            tokenizer.setState(doctype_system_identifier_single_quoted_state);\n          } else {\n            tokenizer._parseError(\"unexpected-char-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer.setState(bogus_doctype_state);\n          }\n          return true;\n        }\n        function between_doctype_public_and_system_identifiers_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {} else if (data === '>') {\n            tokenizer._emitCurrentToken();\n            tokenizer.setState(data_state);\n          } else if (data === '\"') {\n            tokenizer._currentToken.systemId = '';\n            tokenizer.setState(doctype_system_identifier_double_quoted_state);\n          } else if (data === \"'\") {\n            tokenizer._currentToken.systemId = '';\n            tokenizer.setState(doctype_system_identifier_single_quoted_state);\n          } else {\n            tokenizer._parseError(\"unexpected-char-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer.setState(bogus_doctype_state);\n          }\n          return true;\n        }\n        function after_doctype_system_keyword_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {\n            tokenizer.setState(before_doctype_system_identifier_state);\n          } else if (data === \"'\" || data === '\"') {\n            tokenizer._parseError(\"unexpected-char-in-doctype\");\n            buffer.unget(data);\n            tokenizer.setState(before_doctype_system_identifier_state);\n          } else {\n            buffer.unget(data);\n            tokenizer.setState(before_doctype_system_identifier_state);\n          }\n          return true;\n        }\n        function before_doctype_system_identifier_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {} else if (data === '\"') {\n            tokenizer._currentToken.systemId = '';\n            tokenizer.setState(doctype_system_identifier_double_quoted_state);\n          } else if (data === \"'\") {\n            tokenizer._currentToken.systemId = '';\n            tokenizer.setState(doctype_system_identifier_single_quoted_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"unexpected-end-of-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            tokenizer.setState(data_state);\n          } else {\n            tokenizer._parseError(\"unexpected-char-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer.setState(bogus_doctype_state);\n          }\n          return true;\n        }\n        function doctype_system_identifier_double_quoted_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === '\"') {\n            tokenizer.setState(after_doctype_system_identifier_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"unexpected-end-of-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            tokenizer.setState(data_state);\n          } else {\n            tokenizer._currentToken.systemId += data;\n          }\n          return true;\n        }\n        function doctype_system_identifier_single_quoted_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (data === \"'\") {\n            tokenizer.setState(after_doctype_system_identifier_state);\n          } else if (data === '>') {\n            tokenizer._parseError(\"unexpected-end-of-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            tokenizer.setState(data_state);\n          } else {\n            tokenizer._currentToken.systemId += data;\n          }\n          return true;\n        }\n        function after_doctype_system_identifier_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            tokenizer._parseError(\"eof-in-doctype\");\n            tokenizer._currentToken.forceQuirks = true;\n            tokenizer._emitCurrentToken();\n            buffer.unget(data);\n            tokenizer.setState(data_state);\n          } else if (isWhitespace(data)) {} else if (data === '>') {\n            tokenizer._emitCurrentToken();\n            tokenizer.setState(data_state);\n          } else {\n            tokenizer._parseError(\"unexpected-char-in-doctype\");\n            tokenizer.setState(bogus_doctype_state);\n          }\n          return true;\n        }\n        function bogus_doctype_state(buffer) {\n          var data = buffer.char();\n          if (data === InputStream.EOF) {\n            buffer.unget(data);\n            tokenizer._emitCurrentToken();\n            tokenizer.setState(data_state);\n          } else if (data === '>') {\n            tokenizer._emitCurrentToken();\n            tokenizer.setState(data_state);\n          }\n          return true;\n        }\n      };\n      Object.defineProperty(Tokenizer.prototype, 'lineNumber', {\n        get: function get() {\n          return this._inputStream.location().line;\n        }\n      });\n      Object.defineProperty(Tokenizer.prototype, 'columnNumber', {\n        get: function get() {\n          return this._inputStream.location().column;\n        }\n      });\n      exports.Tokenizer = Tokenizer;\n    }, {\n      \"./EntityParser\": 2,\n      \"./InputStream\": 3\n    }],\n    6: [function (_dereq_, module, exports) {\n      var assert = _dereq_('assert');\n      var messages = _dereq_('./messages.json');\n      var constants = _dereq_('./constants');\n      var EventEmitter = _dereq_('events').EventEmitter;\n      var Tokenizer = _dereq_('./Tokenizer').Tokenizer;\n      var ElementStack = _dereq_('./ElementStack').ElementStack;\n      var StackItem = _dereq_('./StackItem').StackItem;\n      var Marker = {};\n      function isWhitespace(ch) {\n        return ch === \" \" || ch === \"\\n\" || ch === \"\\t\" || ch === \"\\r\" || ch === \"\\f\";\n      }\n      function isWhitespaceOrReplacementCharacter(ch) {\n        return isWhitespace(ch) || ch === \"\\uFFFD\";\n      }\n      function isAllWhitespace(characters) {\n        for (var i = 0; i < characters.length; i++) {\n          var ch = characters[i];\n          if (!isWhitespace(ch)) return false;\n        }\n        return true;\n      }\n      function isAllWhitespaceOrReplacementCharacters(characters) {\n        for (var i = 0; i < characters.length; i++) {\n          var ch = characters[i];\n          if (!isWhitespaceOrReplacementCharacter(ch)) return false;\n        }\n        return true;\n      }\n      function getAttribute(node, name) {\n        for (var i = 0; i < node.attributes.length; i++) {\n          var attribute = node.attributes[i];\n          if (attribute.nodeName === name) {\n            return attribute;\n          }\n        }\n        return null;\n      }\n      function CharacterBuffer(characters) {\n        this.characters = characters;\n        this.current = 0;\n        this.end = this.characters.length;\n      }\n      CharacterBuffer.prototype.skipAtMostOneLeadingNewline = function () {\n        if (this.characters[this.current] === '\\n') this.current++;\n      };\n      CharacterBuffer.prototype.skipLeadingWhitespace = function () {\n        while (isWhitespace(this.characters[this.current])) {\n          if (++this.current == this.end) return;\n        }\n      };\n      CharacterBuffer.prototype.skipLeadingNonWhitespace = function () {\n        while (!isWhitespace(this.characters[this.current])) {\n          if (++this.current == this.end) return;\n        }\n      };\n      CharacterBuffer.prototype.takeRemaining = function () {\n        return this.characters.substring(this.current);\n      };\n      CharacterBuffer.prototype.takeLeadingWhitespace = function () {\n        var start = this.current;\n        this.skipLeadingWhitespace();\n        if (start === this.current) return \"\";\n        return this.characters.substring(start, this.current - start);\n      };\n      Object.defineProperty(CharacterBuffer.prototype, 'length', {\n        get: function get() {\n          return this.end - this.current;\n        }\n      });\n      function TreeBuilder() {\n        this.tokenizer = null;\n        this.errorHandler = null;\n        this.scriptingEnabled = false;\n        this.document = null;\n        this.head = null;\n        this.form = null;\n        this.openElements = new ElementStack();\n        this.activeFormattingElements = [];\n        this.insertionMode = null;\n        this.insertionModeName = \"\";\n        this.originalInsertionMode = \"\";\n        this.inQuirksMode = false; // TODO quirks mode\n        this.compatMode = \"no quirks\";\n        this.framesetOk = true;\n        this.redirectAttachToFosterParent = false;\n        this.selfClosingFlagAcknowledged = false;\n        this.context = \"\";\n        this.pendingTableCharacters = [];\n        this.shouldSkipLeadingNewline = false;\n        var tree = this;\n        var modes = this.insertionModes = {};\n        modes.base = {\n          end_tag_handlers: {\n            \"-default\": 'endTagOther'\n          },\n          start_tag_handlers: {\n            \"-default\": 'startTagOther'\n          },\n          processEOF: function processEOF() {\n            tree.generateImpliedEndTags();\n            if (tree.openElements.length > 2) {\n              tree.parseError('expected-closing-tag-but-got-eof');\n            } else if (tree.openElements.length == 2 && tree.openElements.item(1).localName != 'body') {\n              tree.parseError('expected-closing-tag-but-got-eof');\n            } else if (tree.context && tree.openElements.length > 1) {}\n          },\n          processComment: function processComment(data) {\n            tree.insertComment(data, tree.currentStackItem().node);\n          },\n          processDoctype: function processDoctype(name, publicId, systemId, forceQuirks) {\n            tree.parseError('unexpected-doctype');\n          },\n          processStartTag: function processStartTag(name, attributes, selfClosing) {\n            if (this[this.start_tag_handlers[name]]) {\n              this[this.start_tag_handlers[name]](name, attributes, selfClosing);\n            } else if (this[this.start_tag_handlers[\"-default\"]]) {\n              this[this.start_tag_handlers[\"-default\"]](name, attributes, selfClosing);\n            } else {\n              throw new Error(\"No handler found for \" + name);\n            }\n          },\n          processEndTag: function processEndTag(name) {\n            if (this[this.end_tag_handlers[name]]) {\n              this[this.end_tag_handlers[name]](name);\n            } else if (this[this.end_tag_handlers[\"-default\"]]) {\n              this[this.end_tag_handlers[\"-default\"]](name);\n            } else {\n              throw new Error(\"No handler found for \" + name);\n            }\n          },\n          startTagHtml: function startTagHtml(name, attributes) {\n            modes.inBody.startTagHtml(name, attributes);\n          }\n        };\n        modes.initial = Object.create(modes.base);\n        modes.initial.processEOF = function () {\n          tree.parseError(\"expected-doctype-but-got-eof\");\n          this.anythingElse();\n          tree.insertionMode.processEOF();\n        };\n        modes.initial.processComment = function (data) {\n          tree.insertComment(data, tree.document);\n        };\n        modes.initial.processDoctype = function (name, publicId, systemId, forceQuirks) {\n          tree.insertDoctype(name || '', publicId || '', systemId || '');\n          if (forceQuirks || name != 'html' || publicId != null && ([\"+//silmaril//dtd html pro v0r11 19970101//\", \"-//advasoft ltd//dtd html 3.0 aswedit + extensions//\", \"-//as//dtd html 3.0 aswedit + extensions//\", \"-//ietf//dtd html 2.0 level 1//\", \"-//ietf//dtd html 2.0 level 2//\", \"-//ietf//dtd html 2.0 strict level 1//\", \"-//ietf//dtd html 2.0 strict level 2//\", \"-//ietf//dtd html 2.0 strict//\", \"-//ietf//dtd html 2.0//\", \"-//ietf//dtd html 2.1e//\", \"-//ietf//dtd html 3.0//\", \"-//ietf//dtd html 3.0//\", \"-//ietf//dtd html 3.2 final//\", \"-//ietf//dtd html 3.2//\", \"-//ietf//dtd html 3//\", \"-//ietf//dtd html level 0//\", \"-//ietf//dtd html level 0//\", \"-//ietf//dtd html level 1//\", \"-//ietf//dtd html level 1//\", \"-//ietf//dtd html level 2//\", \"-//ietf//dtd html level 2//\", \"-//ietf//dtd html level 3//\", \"-//ietf//dtd html level 3//\", \"-//ietf//dtd html strict level 0//\", \"-//ietf//dtd html strict level 0//\", \"-//ietf//dtd html strict level 1//\", \"-//ietf//dtd html strict level 1//\", \"-//ietf//dtd html strict level 2//\", \"-//ietf//dtd html strict level 2//\", \"-//ietf//dtd html strict level 3//\", \"-//ietf//dtd html strict level 3//\", \"-//ietf//dtd html strict//\", \"-//ietf//dtd html strict//\", \"-//ietf//dtd html strict//\", \"-//ietf//dtd html//\", \"-//ietf//dtd html//\", \"-//ietf//dtd html//\", \"-//metrius//dtd metrius presentational//\", \"-//microsoft//dtd internet explorer 2.0 html strict//\", \"-//microsoft//dtd internet explorer 2.0 html//\", \"-//microsoft//dtd internet explorer 2.0 tables//\", \"-//microsoft//dtd internet explorer 3.0 html strict//\", \"-//microsoft//dtd internet explorer 3.0 html//\", \"-//microsoft//dtd internet explorer 3.0 tables//\", \"-//netscape comm. corp.//dtd html//\", \"-//netscape comm. corp.//dtd strict html//\", \"-//o'reilly and associates//dtd html 2.0//\", \"-//o'reilly and associates//dtd html extended 1.0//\", \"-//spyglass//dtd html 2.0 extended//\", \"-//sq//dtd html 2.0 hotmetal + extensions//\", \"-//sun microsystems corp.//dtd hotjava html//\", \"-//sun microsystems corp.//dtd hotjava strict html//\", \"-//w3c//dtd html 3 1995-03-24//\", \"-//w3c//dtd html 3.2 draft//\", \"-//w3c//dtd html 3.2 final//\", \"-//w3c//dtd html 3.2//\", \"-//w3c//dtd html 3.2s draft//\", \"-//w3c//dtd html 4.0 frameset//\", \"-//w3c//dtd html 4.0 transitional//\", \"-//w3c//dtd html experimental 19960712//\", \"-//w3c//dtd html experimental 970421//\", \"-//w3c//dtd w3 html//\", \"-//w3o//dtd w3 html 3.0//\", \"-//webtechs//dtd mozilla html 2.0//\", \"-//webtechs//dtd mozilla html//\", \"html\"].some(publicIdStartsWith) || [\"-//w3o//dtd w3 html strict 3.0//en//\", \"-/w3c/dtd html 4.0 transitional/en\", \"html\"].indexOf(publicId.toLowerCase()) > -1 || systemId == null && [\"-//w3c//dtd html 4.01 transitional//\", \"-//w3c//dtd html 4.01 frameset//\"].some(publicIdStartsWith)) || systemId != null && systemId.toLowerCase() == \"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\") {\n            tree.compatMode = \"quirks\";\n            tree.parseError(\"quirky-doctype\");\n          } else if (publicId != null && ([\"-//w3c//dtd xhtml 1.0 transitional//\", \"-//w3c//dtd xhtml 1.0 frameset//\"].some(publicIdStartsWith) || systemId != null && [\"-//w3c//dtd html 4.01 transitional//\", \"-//w3c//dtd html 4.01 frameset//\"].indexOf(publicId.toLowerCase()) > -1)) {\n            tree.compatMode = \"limited quirks\";\n            tree.parseError(\"almost-standards-doctype\");\n          } else {\n            if (publicId == \"-//W3C//DTD HTML 4.0//EN\" && (systemId == null || systemId == \"http://www.w3.org/TR/REC-html40/strict.dtd\") || publicId == \"-//W3C//DTD HTML 4.01//EN\" && (systemId == null || systemId == \"http://www.w3.org/TR/html4/strict.dtd\") || publicId == \"-//W3C//DTD XHTML 1.0 Strict//EN\" && systemId == \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\" || publicId == \"-//W3C//DTD XHTML 1.1//EN\" && systemId == \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\") {} else if (!((systemId == null || systemId == \"about:legacy-compat\") && publicId == null)) {\n              tree.parseError(\"unknown-doctype\");\n            }\n          }\n          tree.setInsertionMode('beforeHTML');\n          function publicIdStartsWith(string) {\n            return publicId.toLowerCase().indexOf(string) === 0;\n          }\n        };\n        modes.initial.processCharacters = function (buffer) {\n          buffer.skipLeadingWhitespace();\n          if (!buffer.length) return;\n          tree.parseError('expected-doctype-but-got-chars');\n          this.anythingElse();\n          tree.insertionMode.processCharacters(buffer);\n        };\n        modes.initial.processStartTag = function (name, attributes, selfClosing) {\n          tree.parseError('expected-doctype-but-got-start-tag', {\n            name: name\n          });\n          this.anythingElse();\n          tree.insertionMode.processStartTag(name, attributes, selfClosing);\n        };\n        modes.initial.processEndTag = function (name) {\n          tree.parseError('expected-doctype-but-got-end-tag', {\n            name: name\n          });\n          this.anythingElse();\n          tree.insertionMode.processEndTag(name);\n        };\n        modes.initial.anythingElse = function () {\n          tree.compatMode = 'quirks';\n          tree.setInsertionMode('beforeHTML');\n        };\n        modes.beforeHTML = Object.create(modes.base);\n        modes.beforeHTML.start_tag_handlers = {\n          html: 'startTagHtml',\n          '-default': 'startTagOther'\n        };\n        modes.beforeHTML.processEOF = function () {\n          this.anythingElse();\n          tree.insertionMode.processEOF();\n        };\n        modes.beforeHTML.processComment = function (data) {\n          tree.insertComment(data, tree.document);\n        };\n        modes.beforeHTML.processCharacters = function (buffer) {\n          buffer.skipLeadingWhitespace();\n          if (!buffer.length) return;\n          this.anythingElse();\n          tree.insertionMode.processCharacters(buffer);\n        };\n        modes.beforeHTML.startTagHtml = function (name, attributes, selfClosing) {\n          tree.insertHtmlElement(attributes);\n          tree.setInsertionMode('beforeHead');\n        };\n        modes.beforeHTML.startTagOther = function (name, attributes, selfClosing) {\n          this.anythingElse();\n          tree.insertionMode.processStartTag(name, attributes, selfClosing);\n        };\n        modes.beforeHTML.processEndTag = function (name) {\n          this.anythingElse();\n          tree.insertionMode.processEndTag(name);\n        };\n        modes.beforeHTML.anythingElse = function () {\n          tree.insertHtmlElement();\n          tree.setInsertionMode('beforeHead');\n        };\n        modes.afterAfterBody = Object.create(modes.base);\n        modes.afterAfterBody.start_tag_handlers = {\n          html: 'startTagHtml',\n          '-default': 'startTagOther'\n        };\n        modes.afterAfterBody.processComment = function (data) {\n          tree.insertComment(data, tree.document);\n        };\n        modes.afterAfterBody.processDoctype = function (data) {\n          modes.inBody.processDoctype(data);\n        };\n        modes.afterAfterBody.startTagHtml = function (data, attributes) {\n          modes.inBody.startTagHtml(data, attributes);\n        };\n        modes.afterAfterBody.startTagOther = function (name, attributes, selfClosing) {\n          tree.parseError('unexpected-start-tag', {\n            name: name\n          });\n          tree.setInsertionMode('inBody');\n          tree.insertionMode.processStartTag(name, attributes, selfClosing);\n        };\n        modes.afterAfterBody.endTagOther = function (name) {\n          tree.parseError('unexpected-end-tag', {\n            name: name\n          });\n          tree.setInsertionMode('inBody');\n          tree.insertionMode.processEndTag(name);\n        };\n        modes.afterAfterBody.processCharacters = function (data) {\n          if (!isAllWhitespace(data.characters)) {\n            tree.parseError('unexpected-char-after-body');\n            tree.setInsertionMode('inBody');\n            return tree.insertionMode.processCharacters(data);\n          }\n          modes.inBody.processCharacters(data);\n        };\n        modes.afterBody = Object.create(modes.base);\n        modes.afterBody.end_tag_handlers = {\n          html: 'endTagHtml',\n          '-default': 'endTagOther'\n        };\n        modes.afterBody.processComment = function (data) {\n          tree.insertComment(data, tree.openElements.rootNode);\n        };\n        modes.afterBody.processCharacters = function (data) {\n          if (!isAllWhitespace(data.characters)) {\n            tree.parseError('unexpected-char-after-body');\n            tree.setInsertionMode('inBody');\n            return tree.insertionMode.processCharacters(data);\n          }\n          modes.inBody.processCharacters(data);\n        };\n        modes.afterBody.processStartTag = function (name, attributes, selfClosing) {\n          tree.parseError('unexpected-start-tag-after-body', {\n            name: name\n          });\n          tree.setInsertionMode('inBody');\n          tree.insertionMode.processStartTag(name, attributes, selfClosing);\n        };\n        modes.afterBody.endTagHtml = function (name) {\n          if (tree.context) {\n            tree.parseError('end-html-in-innerhtml');\n          } else {\n            tree.setInsertionMode('afterAfterBody');\n          }\n        };\n        modes.afterBody.endTagOther = function (name) {\n          tree.parseError('unexpected-end-tag-after-body', {\n            name: name\n          });\n          tree.setInsertionMode('inBody');\n          tree.insertionMode.processEndTag(name);\n        };\n        modes.afterFrameset = Object.create(modes.base);\n        modes.afterFrameset.start_tag_handlers = {\n          html: 'startTagHtml',\n          noframes: 'startTagNoframes',\n          '-default': 'startTagOther'\n        };\n        modes.afterFrameset.end_tag_handlers = {\n          html: 'endTagHtml',\n          '-default': 'endTagOther'\n        };\n        modes.afterFrameset.processCharacters = function (buffer) {\n          var characters = buffer.takeRemaining();\n          var whitespace = \"\";\n          for (var i = 0; i < characters.length; i++) {\n            var ch = characters[i];\n            if (isWhitespace(ch)) whitespace += ch;\n          }\n          if (whitespace) {\n            tree.insertText(whitespace);\n          }\n          if (whitespace.length < characters.length) tree.parseError('expected-eof-but-got-char');\n        };\n        modes.afterFrameset.startTagNoframes = function (name, attributes) {\n          modes.inHead.processStartTag(name, attributes);\n        };\n        modes.afterFrameset.startTagOther = function (name, attributes) {\n          tree.parseError(\"unexpected-start-tag-after-frameset\", {\n            name: name\n          });\n        };\n        modes.afterFrameset.endTagHtml = function (name) {\n          tree.setInsertionMode('afterAfterFrameset');\n        };\n        modes.afterFrameset.endTagOther = function (name) {\n          tree.parseError(\"unexpected-end-tag-after-frameset\", {\n            name: name\n          });\n        };\n        modes.beforeHead = Object.create(modes.base);\n        modes.beforeHead.start_tag_handlers = {\n          html: 'startTagHtml',\n          head: 'startTagHead',\n          '-default': 'startTagOther'\n        };\n        modes.beforeHead.end_tag_handlers = {\n          html: 'endTagImplyHead',\n          head: 'endTagImplyHead',\n          body: 'endTagImplyHead',\n          br: 'endTagImplyHead',\n          '-default': 'endTagOther'\n        };\n        modes.beforeHead.processEOF = function () {\n          this.startTagHead('head', []);\n          tree.insertionMode.processEOF();\n        };\n        modes.beforeHead.processCharacters = function (buffer) {\n          buffer.skipLeadingWhitespace();\n          if (!buffer.length) return;\n          this.startTagHead('head', []);\n          tree.insertionMode.processCharacters(buffer);\n        };\n        modes.beforeHead.startTagHead = function (name, attributes) {\n          tree.insertHeadElement(attributes);\n          tree.setInsertionMode('inHead');\n        };\n        modes.beforeHead.startTagOther = function (name, attributes, selfClosing) {\n          this.startTagHead('head', []);\n          tree.insertionMode.processStartTag(name, attributes, selfClosing);\n        };\n        modes.beforeHead.endTagImplyHead = function (name) {\n          this.startTagHead('head', []);\n          tree.insertionMode.processEndTag(name);\n        };\n        modes.beforeHead.endTagOther = function (name) {\n          tree.parseError('end-tag-after-implied-root', {\n            name: name\n          });\n        };\n        modes.inHead = Object.create(modes.base);\n        modes.inHead.start_tag_handlers = {\n          html: 'startTagHtml',\n          head: 'startTagHead',\n          title: 'startTagTitle',\n          script: 'startTagScript',\n          style: 'startTagNoFramesStyle',\n          noscript: 'startTagNoScript',\n          noframes: 'startTagNoFramesStyle',\n          base: 'startTagBaseBasefontBgsoundLink',\n          basefont: 'startTagBaseBasefontBgsoundLink',\n          bgsound: 'startTagBaseBasefontBgsoundLink',\n          link: 'startTagBaseBasefontBgsoundLink',\n          meta: 'startTagMeta',\n          \"-default\": 'startTagOther'\n        };\n        modes.inHead.end_tag_handlers = {\n          head: 'endTagHead',\n          html: 'endTagHtmlBodyBr',\n          body: 'endTagHtmlBodyBr',\n          br: 'endTagHtmlBodyBr',\n          \"-default\": 'endTagOther'\n        };\n        modes.inHead.processEOF = function () {\n          var name = tree.currentStackItem().localName;\n          if (['title', 'style', 'script'].indexOf(name) != -1) {\n            tree.parseError(\"expected-named-closing-tag-but-got-eof\", {\n              name: name\n            });\n            tree.popElement();\n          }\n          this.anythingElse();\n          tree.insertionMode.processEOF();\n        };\n        modes.inHead.processCharacters = function (buffer) {\n          var leadingWhitespace = buffer.takeLeadingWhitespace();\n          if (leadingWhitespace) tree.insertText(leadingWhitespace);\n          if (!buffer.length) return;\n          this.anythingElse();\n          tree.insertionMode.processCharacters(buffer);\n        };\n        modes.inHead.startTagHtml = function (name, attributes) {\n          modes.inBody.processStartTag(name, attributes);\n        };\n        modes.inHead.startTagHead = function (name, attributes) {\n          tree.parseError('two-heads-are-not-better-than-one');\n        };\n        modes.inHead.startTagTitle = function (name, attributes) {\n          tree.processGenericRCDATAStartTag(name, attributes);\n        };\n        modes.inHead.startTagNoScript = function (name, attributes) {\n          if (tree.scriptingEnabled) return tree.processGenericRawTextStartTag(name, attributes);\n          tree.insertElement(name, attributes);\n          tree.setInsertionMode('inHeadNoscript');\n        };\n        modes.inHead.startTagNoFramesStyle = function (name, attributes) {\n          tree.processGenericRawTextStartTag(name, attributes);\n        };\n        modes.inHead.startTagScript = function (name, attributes) {\n          tree.insertElement(name, attributes);\n          tree.tokenizer.setState(Tokenizer.SCRIPT_DATA);\n          tree.originalInsertionMode = tree.insertionModeName;\n          tree.setInsertionMode('text');\n        };\n        modes.inHead.startTagBaseBasefontBgsoundLink = function (name, attributes) {\n          tree.insertSelfClosingElement(name, attributes);\n        };\n        modes.inHead.startTagMeta = function (name, attributes) {\n          tree.insertSelfClosingElement(name, attributes);\n        };\n        modes.inHead.startTagOther = function (name, attributes, selfClosing) {\n          this.anythingElse();\n          tree.insertionMode.processStartTag(name, attributes, selfClosing);\n        };\n        modes.inHead.endTagHead = function (name) {\n          if (tree.openElements.item(tree.openElements.length - 1).localName == 'head') {\n            tree.openElements.pop();\n          } else {\n            tree.parseError('unexpected-end-tag', {\n              name: 'head'\n            });\n          }\n          tree.setInsertionMode('afterHead');\n        };\n        modes.inHead.endTagHtmlBodyBr = function (name) {\n          this.anythingElse();\n          tree.insertionMode.processEndTag(name);\n        };\n        modes.inHead.endTagOther = function (name) {\n          tree.parseError('unexpected-end-tag', {\n            name: name\n          });\n        };\n        modes.inHead.anythingElse = function () {\n          this.endTagHead('head');\n        };\n        modes.afterHead = Object.create(modes.base);\n        modes.afterHead.start_tag_handlers = {\n          html: 'startTagHtml',\n          head: 'startTagHead',\n          body: 'startTagBody',\n          frameset: 'startTagFrameset',\n          base: 'startTagFromHead',\n          link: 'startTagFromHead',\n          meta: 'startTagFromHead',\n          script: 'startTagFromHead',\n          style: 'startTagFromHead',\n          title: 'startTagFromHead',\n          \"-default\": 'startTagOther'\n        };\n        modes.afterHead.end_tag_handlers = {\n          body: 'endTagBodyHtmlBr',\n          html: 'endTagBodyHtmlBr',\n          br: 'endTagBodyHtmlBr',\n          \"-default\": 'endTagOther'\n        };\n        modes.afterHead.processEOF = function () {\n          this.anythingElse();\n          tree.insertionMode.processEOF();\n        };\n        modes.afterHead.processCharacters = function (buffer) {\n          var leadingWhitespace = buffer.takeLeadingWhitespace();\n          if (leadingWhitespace) tree.insertText(leadingWhitespace);\n          if (!buffer.length) return;\n          this.anythingElse();\n          tree.insertionMode.processCharacters(buffer);\n        };\n        modes.afterHead.startTagHtml = function (name, attributes) {\n          modes.inBody.processStartTag(name, attributes);\n        };\n        modes.afterHead.startTagBody = function (name, attributes) {\n          tree.framesetOk = false;\n          tree.insertBodyElement(attributes);\n          tree.setInsertionMode('inBody');\n        };\n        modes.afterHead.startTagFrameset = function (name, attributes) {\n          tree.insertElement(name, attributes);\n          tree.setInsertionMode('inFrameset');\n        };\n        modes.afterHead.startTagFromHead = function (name, attributes, selfClosing) {\n          tree.parseError(\"unexpected-start-tag-out-of-my-head\", {\n            name: name\n          });\n          tree.openElements.push(tree.head);\n          modes.inHead.processStartTag(name, attributes, selfClosing);\n          tree.openElements.remove(tree.head);\n        };\n        modes.afterHead.startTagHead = function (name, attributes, selfClosing) {\n          tree.parseError('unexpected-start-tag', {\n            name: name\n          });\n        };\n        modes.afterHead.startTagOther = function (name, attributes, selfClosing) {\n          this.anythingElse();\n          tree.insertionMode.processStartTag(name, attributes, selfClosing);\n        };\n        modes.afterHead.endTagBodyHtmlBr = function (name) {\n          this.anythingElse();\n          tree.insertionMode.processEndTag(name);\n        };\n        modes.afterHead.endTagOther = function (name) {\n          tree.parseError('unexpected-end-tag', {\n            name: name\n          });\n        };\n        modes.afterHead.anythingElse = function () {\n          tree.insertBodyElement([]);\n          tree.setInsertionMode('inBody');\n          tree.framesetOk = true;\n        };\n        modes.inBody = Object.create(modes.base);\n        modes.inBody.start_tag_handlers = {\n          html: 'startTagHtml',\n          head: 'startTagMisplaced',\n          base: 'startTagProcessInHead',\n          basefont: 'startTagProcessInHead',\n          bgsound: 'startTagProcessInHead',\n          link: 'startTagProcessInHead',\n          meta: 'startTagProcessInHead',\n          noframes: 'startTagProcessInHead',\n          script: 'startTagProcessInHead',\n          style: 'startTagProcessInHead',\n          title: 'startTagProcessInHead',\n          body: 'startTagBody',\n          form: 'startTagForm',\n          plaintext: 'startTagPlaintext',\n          a: 'startTagA',\n          button: 'startTagButton',\n          xmp: 'startTagXmp',\n          table: 'startTagTable',\n          hr: 'startTagHr',\n          image: 'startTagImage',\n          input: 'startTagInput',\n          textarea: 'startTagTextarea',\n          select: 'startTagSelect',\n          isindex: 'startTagIsindex',\n          applet: 'startTagAppletMarqueeObject',\n          marquee: 'startTagAppletMarqueeObject',\n          object: 'startTagAppletMarqueeObject',\n          li: 'startTagListItem',\n          dd: 'startTagListItem',\n          dt: 'startTagListItem',\n          address: 'startTagCloseP',\n          article: 'startTagCloseP',\n          aside: 'startTagCloseP',\n          blockquote: 'startTagCloseP',\n          center: 'startTagCloseP',\n          details: 'startTagCloseP',\n          dir: 'startTagCloseP',\n          div: 'startTagCloseP',\n          dl: 'startTagCloseP',\n          fieldset: 'startTagCloseP',\n          figcaption: 'startTagCloseP',\n          figure: 'startTagCloseP',\n          footer: 'startTagCloseP',\n          header: 'startTagCloseP',\n          hgroup: 'startTagCloseP',\n          main: 'startTagCloseP',\n          menu: 'startTagCloseP',\n          nav: 'startTagCloseP',\n          ol: 'startTagCloseP',\n          p: 'startTagCloseP',\n          section: 'startTagCloseP',\n          summary: 'startTagCloseP',\n          ul: 'startTagCloseP',\n          listing: 'startTagPreListing',\n          pre: 'startTagPreListing',\n          b: 'startTagFormatting',\n          big: 'startTagFormatting',\n          code: 'startTagFormatting',\n          em: 'startTagFormatting',\n          font: 'startTagFormatting',\n          i: 'startTagFormatting',\n          s: 'startTagFormatting',\n          small: 'startTagFormatting',\n          strike: 'startTagFormatting',\n          strong: 'startTagFormatting',\n          tt: 'startTagFormatting',\n          u: 'startTagFormatting',\n          nobr: 'startTagNobr',\n          area: 'startTagVoidFormatting',\n          br: 'startTagVoidFormatting',\n          embed: 'startTagVoidFormatting',\n          img: 'startTagVoidFormatting',\n          keygen: 'startTagVoidFormatting',\n          wbr: 'startTagVoidFormatting',\n          param: 'startTagParamSourceTrack',\n          source: 'startTagParamSourceTrack',\n          track: 'startTagParamSourceTrack',\n          iframe: 'startTagIFrame',\n          noembed: 'startTagRawText',\n          noscript: 'startTagRawText',\n          h1: 'startTagHeading',\n          h2: 'startTagHeading',\n          h3: 'startTagHeading',\n          h4: 'startTagHeading',\n          h5: 'startTagHeading',\n          h6: 'startTagHeading',\n          caption: 'startTagMisplaced',\n          col: 'startTagMisplaced',\n          colgroup: 'startTagMisplaced',\n          frame: 'startTagMisplaced',\n          frameset: 'startTagFrameset',\n          tbody: 'startTagMisplaced',\n          td: 'startTagMisplaced',\n          tfoot: 'startTagMisplaced',\n          th: 'startTagMisplaced',\n          thead: 'startTagMisplaced',\n          tr: 'startTagMisplaced',\n          option: 'startTagOptionOptgroup',\n          optgroup: 'startTagOptionOptgroup',\n          math: 'startTagMath',\n          svg: 'startTagSVG',\n          rt: 'startTagRpRt',\n          rp: 'startTagRpRt',\n          \"-default\": 'startTagOther'\n        };\n        modes.inBody.end_tag_handlers = {\n          p: 'endTagP',\n          body: 'endTagBody',\n          html: 'endTagHtml',\n          address: 'endTagBlock',\n          article: 'endTagBlock',\n          aside: 'endTagBlock',\n          blockquote: 'endTagBlock',\n          button: 'endTagBlock',\n          center: 'endTagBlock',\n          details: 'endTagBlock',\n          dir: 'endTagBlock',\n          div: 'endTagBlock',\n          dl: 'endTagBlock',\n          fieldset: 'endTagBlock',\n          figcaption: 'endTagBlock',\n          figure: 'endTagBlock',\n          footer: 'endTagBlock',\n          header: 'endTagBlock',\n          hgroup: 'endTagBlock',\n          listing: 'endTagBlock',\n          main: 'endTagBlock',\n          menu: 'endTagBlock',\n          nav: 'endTagBlock',\n          ol: 'endTagBlock',\n          pre: 'endTagBlock',\n          section: 'endTagBlock',\n          summary: 'endTagBlock',\n          ul: 'endTagBlock',\n          form: 'endTagForm',\n          applet: 'endTagAppletMarqueeObject',\n          marquee: 'endTagAppletMarqueeObject',\n          object: 'endTagAppletMarqueeObject',\n          dd: 'endTagListItem',\n          dt: 'endTagListItem',\n          li: 'endTagListItem',\n          h1: 'endTagHeading',\n          h2: 'endTagHeading',\n          h3: 'endTagHeading',\n          h4: 'endTagHeading',\n          h5: 'endTagHeading',\n          h6: 'endTagHeading',\n          a: 'endTagFormatting',\n          b: 'endTagFormatting',\n          big: 'endTagFormatting',\n          code: 'endTagFormatting',\n          em: 'endTagFormatting',\n          font: 'endTagFormatting',\n          i: 'endTagFormatting',\n          nobr: 'endTagFormatting',\n          s: 'endTagFormatting',\n          small: 'endTagFormatting',\n          strike: 'endTagFormatting',\n          strong: 'endTagFormatting',\n          tt: 'endTagFormatting',\n          u: 'endTagFormatting',\n          br: 'endTagBr',\n          \"-default\": 'endTagOther'\n        };\n        modes.inBody.processCharacters = function (buffer) {\n          if (tree.shouldSkipLeadingNewline) {\n            tree.shouldSkipLeadingNewline = false;\n            buffer.skipAtMostOneLeadingNewline();\n          }\n          tree.reconstructActiveFormattingElements();\n          var characters = buffer.takeRemaining();\n          characters = characters.replace(/\\u0000/g, function (match, index) {\n            tree.parseError(\"invalid-codepoint\");\n            return '';\n          });\n          if (!characters) return;\n          tree.insertText(characters);\n          if (tree.framesetOk && !isAllWhitespaceOrReplacementCharacters(characters)) tree.framesetOk = false;\n        };\n        modes.inBody.startTagHtml = function (name, attributes) {\n          tree.parseError('non-html-root');\n          tree.addAttributesToElement(tree.openElements.rootNode, attributes);\n        };\n        modes.inBody.startTagProcessInHead = function (name, attributes) {\n          modes.inHead.processStartTag(name, attributes);\n        };\n        modes.inBody.startTagBody = function (name, attributes) {\n          tree.parseError('unexpected-start-tag', {\n            name: 'body'\n          });\n          if (tree.openElements.length == 1 || tree.openElements.item(1).localName != 'body') {\n            assert.ok(tree.context);\n          } else {\n            tree.framesetOk = false;\n            tree.addAttributesToElement(tree.openElements.bodyElement, attributes);\n          }\n        };\n        modes.inBody.startTagFrameset = function (name, attributes) {\n          tree.parseError('unexpected-start-tag', {\n            name: 'frameset'\n          });\n          if (tree.openElements.length == 1 || tree.openElements.item(1).localName != 'body') {\n            assert.ok(tree.context);\n          } else if (tree.framesetOk) {\n            tree.detachFromParent(tree.openElements.bodyElement);\n            while (tree.openElements.length > 1) tree.openElements.pop();\n            tree.insertElement(name, attributes);\n            tree.setInsertionMode('inFrameset');\n          }\n        };\n        modes.inBody.startTagCloseP = function (name, attributes) {\n          if (tree.openElements.inButtonScope('p')) this.endTagP('p');\n          tree.insertElement(name, attributes);\n        };\n        modes.inBody.startTagPreListing = function (name, attributes) {\n          if (tree.openElements.inButtonScope('p')) this.endTagP('p');\n          tree.insertElement(name, attributes);\n          tree.framesetOk = false;\n          tree.shouldSkipLeadingNewline = true;\n        };\n        modes.inBody.startTagForm = function (name, attributes) {\n          if (tree.form) {\n            tree.parseError('unexpected-start-tag', {\n              name: name\n            });\n          } else {\n            if (tree.openElements.inButtonScope('p')) this.endTagP('p');\n            tree.insertElement(name, attributes);\n            tree.form = tree.currentStackItem();\n          }\n        };\n        modes.inBody.startTagRpRt = function (name, attributes) {\n          if (tree.openElements.inScope('ruby')) {\n            tree.generateImpliedEndTags();\n            if (tree.currentStackItem().localName != 'ruby') {\n              tree.parseError('unexpected-start-tag', {\n                name: name\n              });\n            }\n          }\n          tree.insertElement(name, attributes);\n        };\n        modes.inBody.startTagListItem = function (name, attributes) {\n          var stopNames = {\n            li: ['li'],\n            dd: ['dd', 'dt'],\n            dt: ['dd', 'dt']\n          };\n          var stopName = stopNames[name];\n          var els = tree.openElements;\n          for (var i = els.length - 1; i >= 0; i--) {\n            var node = els.item(i);\n            if (stopName.indexOf(node.localName) != -1) {\n              tree.insertionMode.processEndTag(node.localName);\n              break;\n            }\n            if (node.isSpecial() && node.localName !== 'p' && node.localName !== 'address' && node.localName !== 'div') break;\n          }\n          if (tree.openElements.inButtonScope('p')) this.endTagP('p');\n          tree.insertElement(name, attributes);\n          tree.framesetOk = false;\n        };\n        modes.inBody.startTagPlaintext = function (name, attributes) {\n          if (tree.openElements.inButtonScope('p')) this.endTagP('p');\n          tree.insertElement(name, attributes);\n          tree.tokenizer.setState(Tokenizer.PLAINTEXT);\n        };\n        modes.inBody.startTagHeading = function (name, attributes) {\n          if (tree.openElements.inButtonScope('p')) this.endTagP('p');\n          if (tree.currentStackItem().isNumberedHeader()) {\n            tree.parseError('unexpected-start-tag', {\n              name: name\n            });\n            tree.popElement();\n          }\n          tree.insertElement(name, attributes);\n        };\n        modes.inBody.startTagA = function (name, attributes) {\n          var activeA = tree.elementInActiveFormattingElements('a');\n          if (activeA) {\n            tree.parseError(\"unexpected-start-tag-implies-end-tag\", {\n              startName: \"a\",\n              endName: \"a\"\n            });\n            tree.adoptionAgencyEndTag('a');\n            if (tree.openElements.contains(activeA)) tree.openElements.remove(activeA);\n            tree.removeElementFromActiveFormattingElements(activeA);\n          }\n          tree.reconstructActiveFormattingElements();\n          tree.insertFormattingElement(name, attributes);\n        };\n        modes.inBody.startTagFormatting = function (name, attributes) {\n          tree.reconstructActiveFormattingElements();\n          tree.insertFormattingElement(name, attributes);\n        };\n        modes.inBody.startTagNobr = function (name, attributes) {\n          tree.reconstructActiveFormattingElements();\n          if (tree.openElements.inScope('nobr')) {\n            tree.parseError(\"unexpected-start-tag-implies-end-tag\", {\n              startName: 'nobr',\n              endName: 'nobr'\n            });\n            this.processEndTag('nobr');\n            tree.reconstructActiveFormattingElements();\n          }\n          tree.insertFormattingElement(name, attributes);\n        };\n        modes.inBody.startTagButton = function (name, attributes) {\n          if (tree.openElements.inScope('button')) {\n            tree.parseError('unexpected-start-tag-implies-end-tag', {\n              startName: 'button',\n              endName: 'button'\n            });\n            this.processEndTag('button');\n            tree.insertionMode.processStartTag(name, attributes);\n          } else {\n            tree.framesetOk = false;\n            tree.reconstructActiveFormattingElements();\n            tree.insertElement(name, attributes);\n          }\n        };\n        modes.inBody.startTagAppletMarqueeObject = function (name, attributes) {\n          tree.reconstructActiveFormattingElements();\n          tree.insertElement(name, attributes);\n          tree.activeFormattingElements.push(Marker);\n          tree.framesetOk = false;\n        };\n        modes.inBody.endTagAppletMarqueeObject = function (name) {\n          if (!tree.openElements.inScope(name)) {\n            tree.parseError(\"unexpected-end-tag\", {\n              name: name\n            });\n          } else {\n            tree.generateImpliedEndTags();\n            if (tree.currentStackItem().localName != name) {\n              tree.parseError('end-tag-too-early', {\n                name: name\n              });\n            }\n            tree.openElements.popUntilPopped(name);\n            tree.clearActiveFormattingElements();\n          }\n        };\n        modes.inBody.startTagXmp = function (name, attributes) {\n          if (tree.openElements.inButtonScope('p')) this.processEndTag('p');\n          tree.reconstructActiveFormattingElements();\n          tree.processGenericRawTextStartTag(name, attributes);\n          tree.framesetOk = false;\n        };\n        modes.inBody.startTagTable = function (name, attributes) {\n          if (tree.compatMode !== \"quirks\") if (tree.openElements.inButtonScope('p')) this.processEndTag('p');\n          tree.insertElement(name, attributes);\n          tree.setInsertionMode('inTable');\n          tree.framesetOk = false;\n        };\n        modes.inBody.startTagVoidFormatting = function (name, attributes) {\n          tree.reconstructActiveFormattingElements();\n          tree.insertSelfClosingElement(name, attributes);\n          tree.framesetOk = false;\n        };\n        modes.inBody.startTagParamSourceTrack = function (name, attributes) {\n          tree.insertSelfClosingElement(name, attributes);\n        };\n        modes.inBody.startTagHr = function (name, attributes) {\n          if (tree.openElements.inButtonScope('p')) this.endTagP('p');\n          tree.insertSelfClosingElement(name, attributes);\n          tree.framesetOk = false;\n        };\n        modes.inBody.startTagImage = function (name, attributes) {\n          tree.parseError('unexpected-start-tag-treated-as', {\n            originalName: 'image',\n            newName: 'img'\n          });\n          this.processStartTag('img', attributes);\n        };\n        modes.inBody.startTagInput = function (name, attributes) {\n          var currentFramesetOk = tree.framesetOk;\n          this.startTagVoidFormatting(name, attributes);\n          for (var key in attributes) {\n            if (attributes[key].nodeName == 'type') {\n              if (attributes[key].nodeValue.toLowerCase() == 'hidden') tree.framesetOk = currentFramesetOk;\n              break;\n            }\n          }\n        };\n        modes.inBody.startTagIsindex = function (name, attributes) {\n          tree.parseError('deprecated-tag', {\n            name: 'isindex'\n          });\n          tree.selfClosingFlagAcknowledged = true;\n          if (tree.form) return;\n          var formAttributes = [];\n          var inputAttributes = [];\n          var prompt = \"This is a searchable index. Enter search keywords: \";\n          for (var key in attributes) {\n            switch (attributes[key].nodeName) {\n              case 'action':\n                formAttributes.push({\n                  nodeName: 'action',\n                  nodeValue: attributes[key].nodeValue\n                });\n                break;\n              case 'prompt':\n                prompt = attributes[key].nodeValue;\n                break;\n              case 'name':\n                break;\n              default:\n                inputAttributes.push({\n                  nodeName: attributes[key].nodeName,\n                  nodeValue: attributes[key].nodeValue\n                });\n            }\n          }\n          inputAttributes.push({\n            nodeName: 'name',\n            nodeValue: 'isindex'\n          });\n          this.processStartTag('form', formAttributes);\n          this.processStartTag('hr');\n          this.processStartTag('label');\n          this.processCharacters(new CharacterBuffer(prompt));\n          this.processStartTag('input', inputAttributes);\n          this.processEndTag('label');\n          this.processStartTag('hr');\n          this.processEndTag('form');\n        };\n        modes.inBody.startTagTextarea = function (name, attributes) {\n          tree.insertElement(name, attributes);\n          tree.tokenizer.setState(Tokenizer.RCDATA);\n          tree.originalInsertionMode = tree.insertionModeName;\n          tree.shouldSkipLeadingNewline = true;\n          tree.framesetOk = false;\n          tree.setInsertionMode('text');\n        };\n        modes.inBody.startTagIFrame = function (name, attributes) {\n          tree.framesetOk = false;\n          this.startTagRawText(name, attributes);\n        };\n        modes.inBody.startTagRawText = function (name, attributes) {\n          tree.processGenericRawTextStartTag(name, attributes);\n        };\n        modes.inBody.startTagSelect = function (name, attributes) {\n          tree.reconstructActiveFormattingElements();\n          tree.insertElement(name, attributes);\n          tree.framesetOk = false;\n          var insertionModeName = tree.insertionModeName;\n          if (insertionModeName == 'inTable' || insertionModeName == 'inCaption' || insertionModeName == 'inColumnGroup' || insertionModeName == 'inTableBody' || insertionModeName == 'inRow' || insertionModeName == 'inCell') {\n            tree.setInsertionMode('inSelectInTable');\n          } else {\n            tree.setInsertionMode('inSelect');\n          }\n        };\n        modes.inBody.startTagMisplaced = function (name, attributes) {\n          tree.parseError('unexpected-start-tag-ignored', {\n            name: name\n          });\n        };\n        modes.inBody.endTagMisplaced = function (name) {\n          tree.parseError(\"unexpected-end-tag\", {\n            name: name\n          });\n        };\n        modes.inBody.endTagBr = function (name) {\n          tree.parseError(\"unexpected-end-tag-treated-as\", {\n            originalName: \"br\",\n            newName: \"br element\"\n          });\n          tree.reconstructActiveFormattingElements();\n          tree.insertElement(name, []);\n          tree.popElement();\n        };\n        modes.inBody.startTagOptionOptgroup = function (name, attributes) {\n          if (tree.currentStackItem().localName == 'option') tree.popElement();\n          tree.reconstructActiveFormattingElements();\n          tree.insertElement(name, attributes);\n        };\n        modes.inBody.startTagOther = function (name, attributes) {\n          tree.reconstructActiveFormattingElements();\n          tree.insertElement(name, attributes);\n        };\n        modes.inBody.endTagOther = function (name) {\n          var node;\n          for (var i = tree.openElements.length - 1; i > 0; i--) {\n            node = tree.openElements.item(i);\n            if (node.localName == name) {\n              tree.generateImpliedEndTags(name);\n              if (tree.currentStackItem().localName != name) tree.parseError('unexpected-end-tag', {\n                name: name\n              });\n              tree.openElements.remove_openElements_until(function (x) {\n                return x === node;\n              });\n              break;\n            }\n            if (node.isSpecial()) {\n              tree.parseError('unexpected-end-tag', {\n                name: name\n              });\n              break;\n            }\n          }\n        };\n        modes.inBody.startTagMath = function (name, attributes, selfClosing) {\n          tree.reconstructActiveFormattingElements();\n          attributes = tree.adjustMathMLAttributes(attributes);\n          attributes = tree.adjustForeignAttributes(attributes);\n          tree.insertForeignElement(name, attributes, \"http://www.w3.org/1998/Math/MathML\", selfClosing);\n        };\n        modes.inBody.startTagSVG = function (name, attributes, selfClosing) {\n          tree.reconstructActiveFormattingElements();\n          attributes = tree.adjustSVGAttributes(attributes);\n          attributes = tree.adjustForeignAttributes(attributes);\n          tree.insertForeignElement(name, attributes, \"http://www.w3.org/2000/svg\", selfClosing);\n        };\n        modes.inBody.endTagP = function (name) {\n          if (!tree.openElements.inButtonScope('p')) {\n            tree.parseError('unexpected-end-tag', {\n              name: 'p'\n            });\n            this.startTagCloseP('p', []);\n            this.endTagP('p');\n          } else {\n            tree.generateImpliedEndTags('p');\n            if (tree.currentStackItem().localName != 'p') tree.parseError('unexpected-implied-end-tag', {\n              name: 'p'\n            });\n            tree.openElements.popUntilPopped(name);\n          }\n        };\n        modes.inBody.endTagBody = function (name) {\n          if (!tree.openElements.inScope('body')) {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n            return;\n          }\n          if (tree.currentStackItem().localName != 'body') {\n            tree.parseError('expected-one-end-tag-but-got-another', {\n              expectedName: tree.currentStackItem().localName,\n              gotName: name\n            });\n          }\n          tree.setInsertionMode('afterBody');\n        };\n        modes.inBody.endTagHtml = function (name) {\n          if (!tree.openElements.inScope('body')) {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n            return;\n          }\n          if (tree.currentStackItem().localName != 'body') {\n            tree.parseError('expected-one-end-tag-but-got-another', {\n              expectedName: tree.currentStackItem().localName,\n              gotName: name\n            });\n          }\n          tree.setInsertionMode('afterBody');\n          tree.insertionMode.processEndTag(name);\n        };\n        modes.inBody.endTagBlock = function (name) {\n          if (!tree.openElements.inScope(name)) {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          } else {\n            tree.generateImpliedEndTags();\n            if (tree.currentStackItem().localName != name) {\n              tree.parseError('end-tag-too-early', {\n                name: name\n              });\n            }\n            tree.openElements.popUntilPopped(name);\n          }\n        };\n        modes.inBody.endTagForm = function (name) {\n          var node = tree.form;\n          tree.form = null;\n          if (!node || !tree.openElements.inScope(name)) {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          } else {\n            tree.generateImpliedEndTags();\n            if (tree.currentStackItem() != node) {\n              tree.parseError('end-tag-too-early-ignored', {\n                name: 'form'\n              });\n            }\n            tree.openElements.remove(node);\n          }\n        };\n        modes.inBody.endTagListItem = function (name) {\n          if (!tree.openElements.inListItemScope(name)) {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          } else {\n            tree.generateImpliedEndTags(name);\n            if (tree.currentStackItem().localName != name) tree.parseError('end-tag-too-early', {\n              name: name\n            });\n            tree.openElements.popUntilPopped(name);\n          }\n        };\n        modes.inBody.endTagHeading = function (name) {\n          if (!tree.openElements.hasNumberedHeaderElementInScope()) {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n            return;\n          }\n          tree.generateImpliedEndTags();\n          if (tree.currentStackItem().localName != name) tree.parseError('end-tag-too-early', {\n            name: name\n          });\n          tree.openElements.remove_openElements_until(function (e) {\n            return e.isNumberedHeader();\n          });\n        };\n        modes.inBody.endTagFormatting = function (name, attributes) {\n          if (!tree.adoptionAgencyEndTag(name)) this.endTagOther(name, attributes);\n        };\n        modes.inCaption = Object.create(modes.base);\n        modes.inCaption.start_tag_handlers = {\n          html: 'startTagHtml',\n          caption: 'startTagTableElement',\n          col: 'startTagTableElement',\n          colgroup: 'startTagTableElement',\n          tbody: 'startTagTableElement',\n          td: 'startTagTableElement',\n          tfoot: 'startTagTableElement',\n          thead: 'startTagTableElement',\n          tr: 'startTagTableElement',\n          '-default': 'startTagOther'\n        };\n        modes.inCaption.end_tag_handlers = {\n          caption: 'endTagCaption',\n          table: 'endTagTable',\n          body: 'endTagIgnore',\n          col: 'endTagIgnore',\n          colgroup: 'endTagIgnore',\n          html: 'endTagIgnore',\n          tbody: 'endTagIgnore',\n          td: 'endTagIgnore',\n          tfood: 'endTagIgnore',\n          thead: 'endTagIgnore',\n          tr: 'endTagIgnore',\n          '-default': 'endTagOther'\n        };\n        modes.inCaption.processCharacters = function (data) {\n          modes.inBody.processCharacters(data);\n        };\n        modes.inCaption.startTagTableElement = function (name, attributes) {\n          tree.parseError('unexpected-end-tag', {\n            name: name\n          });\n          var ignoreEndTag = !tree.openElements.inTableScope('caption');\n          tree.insertionMode.processEndTag('caption');\n          if (!ignoreEndTag) tree.insertionMode.processStartTag(name, attributes);\n        };\n        modes.inCaption.startTagOther = function (name, attributes, selfClosing) {\n          modes.inBody.processStartTag(name, attributes, selfClosing);\n        };\n        modes.inCaption.endTagCaption = function (name) {\n          if (!tree.openElements.inTableScope('caption')) {\n            assert.ok(tree.context);\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          } else {\n            tree.generateImpliedEndTags();\n            if (tree.currentStackItem().localName != 'caption') {\n              tree.parseError('expected-one-end-tag-but-got-another', {\n                gotName: \"caption\",\n                expectedName: tree.currentStackItem().localName\n              });\n            }\n            tree.openElements.popUntilPopped('caption');\n            tree.clearActiveFormattingElements();\n            tree.setInsertionMode('inTable');\n          }\n        };\n        modes.inCaption.endTagTable = function (name) {\n          tree.parseError(\"unexpected-end-table-in-caption\");\n          var ignoreEndTag = !tree.openElements.inTableScope('caption');\n          tree.insertionMode.processEndTag('caption');\n          if (!ignoreEndTag) tree.insertionMode.processEndTag(name);\n        };\n        modes.inCaption.endTagIgnore = function (name) {\n          tree.parseError('unexpected-end-tag', {\n            name: name\n          });\n        };\n        modes.inCaption.endTagOther = function (name) {\n          modes.inBody.processEndTag(name);\n        };\n        modes.inCell = Object.create(modes.base);\n        modes.inCell.start_tag_handlers = {\n          html: 'startTagHtml',\n          caption: 'startTagTableOther',\n          col: 'startTagTableOther',\n          colgroup: 'startTagTableOther',\n          tbody: 'startTagTableOther',\n          td: 'startTagTableOther',\n          tfoot: 'startTagTableOther',\n          th: 'startTagTableOther',\n          thead: 'startTagTableOther',\n          tr: 'startTagTableOther',\n          '-default': 'startTagOther'\n        };\n        modes.inCell.end_tag_handlers = {\n          td: 'endTagTableCell',\n          th: 'endTagTableCell',\n          body: 'endTagIgnore',\n          caption: 'endTagIgnore',\n          col: 'endTagIgnore',\n          colgroup: 'endTagIgnore',\n          html: 'endTagIgnore',\n          table: 'endTagImply',\n          tbody: 'endTagImply',\n          tfoot: 'endTagImply',\n          thead: 'endTagImply',\n          tr: 'endTagImply',\n          '-default': 'endTagOther'\n        };\n        modes.inCell.processCharacters = function (data) {\n          modes.inBody.processCharacters(data);\n        };\n        modes.inCell.startTagTableOther = function (name, attributes, selfClosing) {\n          if (tree.openElements.inTableScope('td') || tree.openElements.inTableScope('th')) {\n            this.closeCell();\n            tree.insertionMode.processStartTag(name, attributes, selfClosing);\n          } else {\n            tree.parseError('unexpected-start-tag', {\n              name: name\n            });\n          }\n        };\n        modes.inCell.startTagOther = function (name, attributes, selfClosing) {\n          modes.inBody.processStartTag(name, attributes, selfClosing);\n        };\n        modes.inCell.endTagTableCell = function (name) {\n          if (tree.openElements.inTableScope(name)) {\n            tree.generateImpliedEndTags(name);\n            if (tree.currentStackItem().localName != name.toLowerCase()) {\n              tree.parseError('unexpected-cell-end-tag', {\n                name: name\n              });\n              tree.openElements.popUntilPopped(name);\n            } else {\n              tree.popElement();\n            }\n            tree.clearActiveFormattingElements();\n            tree.setInsertionMode('inRow');\n          } else {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          }\n        };\n        modes.inCell.endTagIgnore = function (name) {\n          tree.parseError('unexpected-end-tag', {\n            name: name\n          });\n        };\n        modes.inCell.endTagImply = function (name) {\n          if (tree.openElements.inTableScope(name)) {\n            this.closeCell();\n            tree.insertionMode.processEndTag(name);\n          } else {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          }\n        };\n        modes.inCell.endTagOther = function (name) {\n          modes.inBody.processEndTag(name);\n        };\n        modes.inCell.closeCell = function () {\n          if (tree.openElements.inTableScope('td')) {\n            this.endTagTableCell('td');\n          } else if (tree.openElements.inTableScope('th')) {\n            this.endTagTableCell('th');\n          }\n        };\n        modes.inColumnGroup = Object.create(modes.base);\n        modes.inColumnGroup.start_tag_handlers = {\n          html: 'startTagHtml',\n          col: 'startTagCol',\n          '-default': 'startTagOther'\n        };\n        modes.inColumnGroup.end_tag_handlers = {\n          colgroup: 'endTagColgroup',\n          col: 'endTagCol',\n          '-default': 'endTagOther'\n        };\n        modes.inColumnGroup.ignoreEndTagColgroup = function () {\n          return tree.currentStackItem().localName == 'html';\n        };\n        modes.inColumnGroup.processCharacters = function (buffer) {\n          var leadingWhitespace = buffer.takeLeadingWhitespace();\n          if (leadingWhitespace) tree.insertText(leadingWhitespace);\n          if (!buffer.length) return;\n          var ignoreEndTag = this.ignoreEndTagColgroup();\n          this.endTagColgroup('colgroup');\n          if (!ignoreEndTag) tree.insertionMode.processCharacters(buffer);\n        };\n        modes.inColumnGroup.startTagCol = function (name, attributes) {\n          tree.insertSelfClosingElement(name, attributes);\n        };\n        modes.inColumnGroup.startTagOther = function (name, attributes, selfClosing) {\n          var ignoreEndTag = this.ignoreEndTagColgroup();\n          this.endTagColgroup('colgroup');\n          if (!ignoreEndTag) tree.insertionMode.processStartTag(name, attributes, selfClosing);\n        };\n        modes.inColumnGroup.endTagColgroup = function (name) {\n          if (this.ignoreEndTagColgroup()) {\n            assert.ok(tree.context);\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          } else {\n            tree.popElement();\n            tree.setInsertionMode('inTable');\n          }\n        };\n        modes.inColumnGroup.endTagCol = function (name) {\n          tree.parseError(\"no-end-tag\", {\n            name: 'col'\n          });\n        };\n        modes.inColumnGroup.endTagOther = function (name) {\n          var ignoreEndTag = this.ignoreEndTagColgroup();\n          this.endTagColgroup('colgroup');\n          if (!ignoreEndTag) tree.insertionMode.processEndTag(name);\n        };\n        modes.inForeignContent = Object.create(modes.base);\n        modes.inForeignContent.processStartTag = function (name, attributes, selfClosing) {\n          if (['b', 'big', 'blockquote', 'body', 'br', 'center', 'code', 'dd', 'div', 'dl', 'dt', 'em', 'embed', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'hr', 'i', 'img', 'li', 'listing', 'menu', 'meta', 'nobr', 'ol', 'p', 'pre', 'ruby', 's', 'small', 'span', 'strong', 'strike', 'sub', 'sup', 'table', 'tt', 'u', 'ul', 'var'].indexOf(name) != -1 || name == 'font' && attributes.some(function (attr) {\n            return ['color', 'face', 'size'].indexOf(attr.nodeName) >= 0;\n          })) {\n            tree.parseError('unexpected-html-element-in-foreign-content', {\n              name: name\n            });\n            while (tree.currentStackItem().isForeign() && !tree.currentStackItem().isHtmlIntegrationPoint() && !tree.currentStackItem().isMathMLTextIntegrationPoint()) {\n              tree.openElements.pop();\n            }\n            tree.insertionMode.processStartTag(name, attributes, selfClosing);\n            return;\n          }\n          if (tree.currentStackItem().namespaceURI == \"http://www.w3.org/1998/Math/MathML\") {\n            attributes = tree.adjustMathMLAttributes(attributes);\n          }\n          if (tree.currentStackItem().namespaceURI == \"http://www.w3.org/2000/svg\") {\n            name = tree.adjustSVGTagNameCase(name);\n            attributes = tree.adjustSVGAttributes(attributes);\n          }\n          attributes = tree.adjustForeignAttributes(attributes);\n          tree.insertForeignElement(name, attributes, tree.currentStackItem().namespaceURI, selfClosing);\n        };\n        modes.inForeignContent.processEndTag = function (name) {\n          var node = tree.currentStackItem();\n          var index = tree.openElements.length - 1;\n          if (node.localName.toLowerCase() != name) tree.parseError(\"unexpected-end-tag\", {\n            name: name\n          });\n          while (true) {\n            if (index === 0) break;\n            if (node.localName.toLowerCase() == name) {\n              while (tree.openElements.pop() != node);\n              break;\n            }\n            index -= 1;\n            node = tree.openElements.item(index);\n            if (node.isForeign()) {\n              continue;\n            } else {\n              tree.insertionMode.processEndTag(name);\n              break;\n            }\n          }\n        };\n        modes.inForeignContent.processCharacters = function (buffer) {\n          var characters = buffer.takeRemaining();\n          characters = characters.replace(/\\u0000/g, function (match, index) {\n            tree.parseError('invalid-codepoint');\n            return \"\\uFFFD\";\n          });\n          if (tree.framesetOk && !isAllWhitespaceOrReplacementCharacters(characters)) tree.framesetOk = false;\n          tree.insertText(characters);\n        };\n        modes.inHeadNoscript = Object.create(modes.base);\n        modes.inHeadNoscript.start_tag_handlers = {\n          html: 'startTagHtml',\n          basefont: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\n          bgsound: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\n          link: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\n          meta: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\n          noframes: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\n          style: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\n          head: 'startTagHeadNoscript',\n          noscript: 'startTagHeadNoscript',\n          \"-default\": 'startTagOther'\n        };\n        modes.inHeadNoscript.end_tag_handlers = {\n          noscript: 'endTagNoscript',\n          br: 'endTagBr',\n          '-default': 'endTagOther'\n        };\n        modes.inHeadNoscript.processCharacters = function (buffer) {\n          var leadingWhitespace = buffer.takeLeadingWhitespace();\n          if (leadingWhitespace) tree.insertText(leadingWhitespace);\n          if (!buffer.length) return;\n          tree.parseError(\"unexpected-char-in-frameset\");\n          this.anythingElse();\n          tree.insertionMode.processCharacters(buffer);\n        };\n        modes.inHeadNoscript.processComment = function (data) {\n          modes.inHead.processComment(data);\n        };\n        modes.inHeadNoscript.startTagBasefontBgsoundLinkMetaNoframesStyle = function (name, attributes) {\n          modes.inHead.processStartTag(name, attributes);\n        };\n        modes.inHeadNoscript.startTagHeadNoscript = function (name, attributes) {\n          tree.parseError(\"unexpected-start-tag-in-frameset\", {\n            name: name\n          });\n        };\n        modes.inHeadNoscript.startTagOther = function (name, attributes) {\n          tree.parseError(\"unexpected-start-tag-in-frameset\", {\n            name: name\n          });\n          this.anythingElse();\n          tree.insertionMode.processStartTag(name, attributes);\n        };\n        modes.inHeadNoscript.endTagBr = function (name, attributes) {\n          tree.parseError(\"unexpected-end-tag-in-frameset\", {\n            name: name\n          });\n          this.anythingElse();\n          tree.insertionMode.processEndTag(name, attributes);\n        };\n        modes.inHeadNoscript.endTagNoscript = function (name, attributes) {\n          tree.popElement();\n          tree.setInsertionMode('inHead');\n        };\n        modes.inHeadNoscript.endTagOther = function (name, attributes) {\n          tree.parseError(\"unexpected-end-tag-in-frameset\", {\n            name: name\n          });\n        };\n        modes.inHeadNoscript.anythingElse = function () {\n          tree.popElement();\n          tree.setInsertionMode('inHead');\n        };\n        modes.inFrameset = Object.create(modes.base);\n        modes.inFrameset.start_tag_handlers = {\n          html: 'startTagHtml',\n          frameset: 'startTagFrameset',\n          frame: 'startTagFrame',\n          noframes: 'startTagNoframes',\n          \"-default\": 'startTagOther'\n        };\n        modes.inFrameset.end_tag_handlers = {\n          frameset: 'endTagFrameset',\n          noframes: 'endTagNoframes',\n          '-default': 'endTagOther'\n        };\n        modes.inFrameset.processCharacters = function (data) {\n          tree.parseError(\"unexpected-char-in-frameset\");\n        };\n        modes.inFrameset.startTagFrameset = function (name, attributes) {\n          tree.insertElement(name, attributes);\n        };\n        modes.inFrameset.startTagFrame = function (name, attributes) {\n          tree.insertSelfClosingElement(name, attributes);\n        };\n        modes.inFrameset.startTagNoframes = function (name, attributes) {\n          modes.inBody.processStartTag(name, attributes);\n        };\n        modes.inFrameset.startTagOther = function (name, attributes) {\n          tree.parseError(\"unexpected-start-tag-in-frameset\", {\n            name: name\n          });\n        };\n        modes.inFrameset.endTagFrameset = function (name, attributes) {\n          if (tree.currentStackItem().localName == 'html') {\n            tree.parseError(\"unexpected-frameset-in-frameset-innerhtml\");\n          } else {\n            tree.popElement();\n          }\n          if (!tree.context && tree.currentStackItem().localName != 'frameset') {\n            tree.setInsertionMode('afterFrameset');\n          }\n        };\n        modes.inFrameset.endTagNoframes = function (name) {\n          modes.inBody.processEndTag(name);\n        };\n        modes.inFrameset.endTagOther = function (name) {\n          tree.parseError(\"unexpected-end-tag-in-frameset\", {\n            name: name\n          });\n        };\n        modes.inTable = Object.create(modes.base);\n        modes.inTable.start_tag_handlers = {\n          html: 'startTagHtml',\n          caption: 'startTagCaption',\n          colgroup: 'startTagColgroup',\n          col: 'startTagCol',\n          table: 'startTagTable',\n          tbody: 'startTagRowGroup',\n          tfoot: 'startTagRowGroup',\n          thead: 'startTagRowGroup',\n          td: 'startTagImplyTbody',\n          th: 'startTagImplyTbody',\n          tr: 'startTagImplyTbody',\n          style: 'startTagStyleScript',\n          script: 'startTagStyleScript',\n          input: 'startTagInput',\n          form: 'startTagForm',\n          '-default': 'startTagOther'\n        };\n        modes.inTable.end_tag_handlers = {\n          table: 'endTagTable',\n          body: 'endTagIgnore',\n          caption: 'endTagIgnore',\n          col: 'endTagIgnore',\n          colgroup: 'endTagIgnore',\n          html: 'endTagIgnore',\n          tbody: 'endTagIgnore',\n          td: 'endTagIgnore',\n          tfoot: 'endTagIgnore',\n          th: 'endTagIgnore',\n          thead: 'endTagIgnore',\n          tr: 'endTagIgnore',\n          '-default': 'endTagOther'\n        };\n        modes.inTable.processCharacters = function (data) {\n          if (tree.currentStackItem().isFosterParenting()) {\n            var originalInsertionMode = tree.insertionModeName;\n            tree.setInsertionMode('inTableText');\n            tree.originalInsertionMode = originalInsertionMode;\n            tree.insertionMode.processCharacters(data);\n          } else {\n            tree.redirectAttachToFosterParent = true;\n            modes.inBody.processCharacters(data);\n            tree.redirectAttachToFosterParent = false;\n          }\n        };\n        modes.inTable.startTagCaption = function (name, attributes) {\n          tree.openElements.popUntilTableScopeMarker();\n          tree.activeFormattingElements.push(Marker);\n          tree.insertElement(name, attributes);\n          tree.setInsertionMode('inCaption');\n        };\n        modes.inTable.startTagColgroup = function (name, attributes) {\n          tree.openElements.popUntilTableScopeMarker();\n          tree.insertElement(name, attributes);\n          tree.setInsertionMode('inColumnGroup');\n        };\n        modes.inTable.startTagCol = function (name, attributes) {\n          this.startTagColgroup('colgroup', []);\n          tree.insertionMode.processStartTag(name, attributes);\n        };\n        modes.inTable.startTagRowGroup = function (name, attributes) {\n          tree.openElements.popUntilTableScopeMarker();\n          tree.insertElement(name, attributes);\n          tree.setInsertionMode('inTableBody');\n        };\n        modes.inTable.startTagImplyTbody = function (name, attributes) {\n          this.startTagRowGroup('tbody', []);\n          tree.insertionMode.processStartTag(name, attributes);\n        };\n        modes.inTable.startTagTable = function (name, attributes) {\n          tree.parseError(\"unexpected-start-tag-implies-end-tag\", {\n            startName: \"table\",\n            endName: \"table\"\n          });\n          tree.insertionMode.processEndTag('table');\n          if (!tree.context) tree.insertionMode.processStartTag(name, attributes);\n        };\n        modes.inTable.startTagStyleScript = function (name, attributes) {\n          modes.inHead.processStartTag(name, attributes);\n        };\n        modes.inTable.startTagInput = function (name, attributes) {\n          for (var key in attributes) {\n            if (attributes[key].nodeName.toLowerCase() == 'type') {\n              if (attributes[key].nodeValue.toLowerCase() == 'hidden') {\n                tree.parseError(\"unexpected-hidden-input-in-table\");\n                tree.insertElement(name, attributes);\n                tree.openElements.pop();\n                return;\n              }\n              break;\n            }\n          }\n          this.startTagOther(name, attributes);\n        };\n        modes.inTable.startTagForm = function (name, attributes) {\n          tree.parseError(\"unexpected-form-in-table\");\n          if (!tree.form) {\n            tree.insertElement(name, attributes);\n            tree.form = tree.currentStackItem();\n            tree.openElements.pop();\n          }\n        };\n        modes.inTable.startTagOther = function (name, attributes, selfClosing) {\n          tree.parseError(\"unexpected-start-tag-implies-table-voodoo\", {\n            name: name\n          });\n          tree.redirectAttachToFosterParent = true;\n          modes.inBody.processStartTag(name, attributes, selfClosing);\n          tree.redirectAttachToFosterParent = false;\n        };\n        modes.inTable.endTagTable = function (name) {\n          if (tree.openElements.inTableScope(name)) {\n            tree.generateImpliedEndTags();\n            if (tree.currentStackItem().localName != name) {\n              tree.parseError(\"end-tag-too-early-named\", {\n                gotName: 'table',\n                expectedName: tree.currentStackItem().localName\n              });\n            }\n            tree.openElements.popUntilPopped('table');\n            tree.resetInsertionMode();\n          } else {\n            assert.ok(tree.context);\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          }\n        };\n        modes.inTable.endTagIgnore = function (name) {\n          tree.parseError(\"unexpected-end-tag\", {\n            name: name\n          });\n        };\n        modes.inTable.endTagOther = function (name) {\n          tree.parseError(\"unexpected-end-tag-implies-table-voodoo\", {\n            name: name\n          });\n          tree.redirectAttachToFosterParent = true;\n          modes.inBody.processEndTag(name);\n          tree.redirectAttachToFosterParent = false;\n        };\n        modes.inTableText = Object.create(modes.base);\n        modes.inTableText.flushCharacters = function () {\n          var characters = tree.pendingTableCharacters.join('');\n          if (!isAllWhitespace(characters)) {\n            tree.redirectAttachToFosterParent = true;\n            tree.reconstructActiveFormattingElements();\n            tree.insertText(characters);\n            tree.framesetOk = false;\n            tree.redirectAttachToFosterParent = false;\n          } else {\n            tree.insertText(characters);\n          }\n          tree.pendingTableCharacters = [];\n        };\n        modes.inTableText.processComment = function (data) {\n          this.flushCharacters();\n          tree.setInsertionMode(tree.originalInsertionMode);\n          tree.insertionMode.processComment(data);\n        };\n        modes.inTableText.processEOF = function (data) {\n          this.flushCharacters();\n          tree.setInsertionMode(tree.originalInsertionMode);\n          tree.insertionMode.processEOF();\n        };\n        modes.inTableText.processCharacters = function (buffer) {\n          var characters = buffer.takeRemaining();\n          characters = characters.replace(/\\u0000/g, function (match, index) {\n            tree.parseError(\"invalid-codepoint\");\n            return '';\n          });\n          if (!characters) return;\n          tree.pendingTableCharacters.push(characters);\n        };\n        modes.inTableText.processStartTag = function (name, attributes, selfClosing) {\n          this.flushCharacters();\n          tree.setInsertionMode(tree.originalInsertionMode);\n          tree.insertionMode.processStartTag(name, attributes, selfClosing);\n        };\n        modes.inTableText.processEndTag = function (name, attributes) {\n          this.flushCharacters();\n          tree.setInsertionMode(tree.originalInsertionMode);\n          tree.insertionMode.processEndTag(name, attributes);\n        };\n        modes.inTableBody = Object.create(modes.base);\n        modes.inTableBody.start_tag_handlers = {\n          html: 'startTagHtml',\n          tr: 'startTagTr',\n          td: 'startTagTableCell',\n          th: 'startTagTableCell',\n          caption: 'startTagTableOther',\n          col: 'startTagTableOther',\n          colgroup: 'startTagTableOther',\n          tbody: 'startTagTableOther',\n          tfoot: 'startTagTableOther',\n          thead: 'startTagTableOther',\n          '-default': 'startTagOther'\n        };\n        modes.inTableBody.end_tag_handlers = {\n          table: 'endTagTable',\n          tbody: 'endTagTableRowGroup',\n          tfoot: 'endTagTableRowGroup',\n          thead: 'endTagTableRowGroup',\n          body: 'endTagIgnore',\n          caption: 'endTagIgnore',\n          col: 'endTagIgnore',\n          colgroup: 'endTagIgnore',\n          html: 'endTagIgnore',\n          td: 'endTagIgnore',\n          th: 'endTagIgnore',\n          tr: 'endTagIgnore',\n          '-default': 'endTagOther'\n        };\n        modes.inTableBody.processCharacters = function (data) {\n          modes.inTable.processCharacters(data);\n        };\n        modes.inTableBody.startTagTr = function (name, attributes) {\n          tree.openElements.popUntilTableBodyScopeMarker();\n          tree.insertElement(name, attributes);\n          tree.setInsertionMode('inRow');\n        };\n        modes.inTableBody.startTagTableCell = function (name, attributes) {\n          tree.parseError(\"unexpected-cell-in-table-body\", {\n            name: name\n          });\n          this.startTagTr('tr', []);\n          tree.insertionMode.processStartTag(name, attributes);\n        };\n        modes.inTableBody.startTagTableOther = function (name, attributes) {\n          if (tree.openElements.inTableScope('tbody') || tree.openElements.inTableScope('thead') || tree.openElements.inTableScope('tfoot')) {\n            tree.openElements.popUntilTableBodyScopeMarker();\n            this.endTagTableRowGroup(tree.currentStackItem().localName);\n            tree.insertionMode.processStartTag(name, attributes);\n          } else {\n            tree.parseError('unexpected-start-tag', {\n              name: name\n            });\n          }\n        };\n        modes.inTableBody.startTagOther = function (name, attributes) {\n          modes.inTable.processStartTag(name, attributes);\n        };\n        modes.inTableBody.endTagTableRowGroup = function (name) {\n          if (tree.openElements.inTableScope(name)) {\n            tree.openElements.popUntilTableBodyScopeMarker();\n            tree.popElement();\n            tree.setInsertionMode('inTable');\n          } else {\n            tree.parseError('unexpected-end-tag-in-table-body', {\n              name: name\n            });\n          }\n        };\n        modes.inTableBody.endTagTable = function (name) {\n          if (tree.openElements.inTableScope('tbody') || tree.openElements.inTableScope('thead') || tree.openElements.inTableScope('tfoot')) {\n            tree.openElements.popUntilTableBodyScopeMarker();\n            this.endTagTableRowGroup(tree.currentStackItem().localName);\n            tree.insertionMode.processEndTag(name);\n          } else {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          }\n        };\n        modes.inTableBody.endTagIgnore = function (name) {\n          tree.parseError(\"unexpected-end-tag-in-table-body\", {\n            name: name\n          });\n        };\n        modes.inTableBody.endTagOther = function (name) {\n          modes.inTable.processEndTag(name);\n        };\n        modes.inSelect = Object.create(modes.base);\n        modes.inSelect.start_tag_handlers = {\n          html: 'startTagHtml',\n          option: 'startTagOption',\n          optgroup: 'startTagOptgroup',\n          select: 'startTagSelect',\n          input: 'startTagInput',\n          keygen: 'startTagInput',\n          textarea: 'startTagInput',\n          script: 'startTagScript',\n          '-default': 'startTagOther'\n        };\n        modes.inSelect.end_tag_handlers = {\n          option: 'endTagOption',\n          optgroup: 'endTagOptgroup',\n          select: 'endTagSelect',\n          caption: 'endTagTableElements',\n          table: 'endTagTableElements',\n          tbody: 'endTagTableElements',\n          tfoot: 'endTagTableElements',\n          thead: 'endTagTableElements',\n          tr: 'endTagTableElements',\n          td: 'endTagTableElements',\n          th: 'endTagTableElements',\n          '-default': 'endTagOther'\n        };\n        modes.inSelect.processCharacters = function (buffer) {\n          var data = buffer.takeRemaining();\n          data = data.replace(/\\u0000/g, function (match, index) {\n            tree.parseError(\"invalid-codepoint\");\n            return '';\n          });\n          if (!data) return;\n          tree.insertText(data);\n        };\n        modes.inSelect.startTagOption = function (name, attributes) {\n          if (tree.currentStackItem().localName == 'option') tree.popElement();\n          tree.insertElement(name, attributes);\n        };\n        modes.inSelect.startTagOptgroup = function (name, attributes) {\n          if (tree.currentStackItem().localName == 'option') tree.popElement();\n          if (tree.currentStackItem().localName == 'optgroup') tree.popElement();\n          tree.insertElement(name, attributes);\n        };\n        modes.inSelect.endTagOption = function (name) {\n          if (tree.currentStackItem().localName !== 'option') {\n            tree.parseError('unexpected-end-tag-in-select', {\n              name: name\n            });\n            return;\n          }\n          tree.popElement();\n        };\n        modes.inSelect.endTagOptgroup = function (name) {\n          if (tree.currentStackItem().localName == 'option' && tree.openElements.item(tree.openElements.length - 2).localName == 'optgroup') {\n            tree.popElement();\n          }\n          if (tree.currentStackItem().localName == 'optgroup') {\n            tree.popElement();\n          } else {\n            tree.parseError('unexpected-end-tag-in-select', {\n              name: 'optgroup'\n            });\n          }\n        };\n        modes.inSelect.startTagSelect = function (name) {\n          tree.parseError(\"unexpected-select-in-select\");\n          this.endTagSelect('select');\n        };\n        modes.inSelect.endTagSelect = function (name) {\n          if (tree.openElements.inTableScope('select')) {\n            tree.openElements.popUntilPopped('select');\n            tree.resetInsertionMode();\n          } else {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          }\n        };\n        modes.inSelect.startTagInput = function (name, attributes) {\n          tree.parseError(\"unexpected-input-in-select\");\n          if (tree.openElements.inSelectScope('select')) {\n            this.endTagSelect('select');\n            tree.insertionMode.processStartTag(name, attributes);\n          }\n        };\n        modes.inSelect.startTagScript = function (name, attributes) {\n          modes.inHead.processStartTag(name, attributes);\n        };\n        modes.inSelect.endTagTableElements = function (name) {\n          tree.parseError('unexpected-end-tag-in-select', {\n            name: name\n          });\n          if (tree.openElements.inTableScope(name)) {\n            this.endTagSelect('select');\n            tree.insertionMode.processEndTag(name);\n          }\n        };\n        modes.inSelect.startTagOther = function (name, attributes) {\n          tree.parseError(\"unexpected-start-tag-in-select\", {\n            name: name\n          });\n        };\n        modes.inSelect.endTagOther = function (name) {\n          tree.parseError('unexpected-end-tag-in-select', {\n            name: name\n          });\n        };\n        modes.inSelectInTable = Object.create(modes.base);\n        modes.inSelectInTable.start_tag_handlers = {\n          caption: 'startTagTable',\n          table: 'startTagTable',\n          tbody: 'startTagTable',\n          tfoot: 'startTagTable',\n          thead: 'startTagTable',\n          tr: 'startTagTable',\n          td: 'startTagTable',\n          th: 'startTagTable',\n          '-default': 'startTagOther'\n        };\n        modes.inSelectInTable.end_tag_handlers = {\n          caption: 'endTagTable',\n          table: 'endTagTable',\n          tbody: 'endTagTable',\n          tfoot: 'endTagTable',\n          thead: 'endTagTable',\n          tr: 'endTagTable',\n          td: 'endTagTable',\n          th: 'endTagTable',\n          '-default': 'endTagOther'\n        };\n        modes.inSelectInTable.processCharacters = function (data) {\n          modes.inSelect.processCharacters(data);\n        };\n        modes.inSelectInTable.startTagTable = function (name, attributes) {\n          tree.parseError(\"unexpected-table-element-start-tag-in-select-in-table\", {\n            name: name\n          });\n          this.endTagOther(\"select\");\n          tree.insertionMode.processStartTag(name, attributes);\n        };\n        modes.inSelectInTable.startTagOther = function (name, attributes, selfClosing) {\n          modes.inSelect.processStartTag(name, attributes, selfClosing);\n        };\n        modes.inSelectInTable.endTagTable = function (name) {\n          tree.parseError(\"unexpected-table-element-end-tag-in-select-in-table\", {\n            name: name\n          });\n          if (tree.openElements.inTableScope(name)) {\n            this.endTagOther(\"select\");\n            tree.insertionMode.processEndTag(name);\n          }\n        };\n        modes.inSelectInTable.endTagOther = function (name) {\n          modes.inSelect.processEndTag(name);\n        };\n        modes.inRow = Object.create(modes.base);\n        modes.inRow.start_tag_handlers = {\n          html: 'startTagHtml',\n          td: 'startTagTableCell',\n          th: 'startTagTableCell',\n          caption: 'startTagTableOther',\n          col: 'startTagTableOther',\n          colgroup: 'startTagTableOther',\n          tbody: 'startTagTableOther',\n          tfoot: 'startTagTableOther',\n          thead: 'startTagTableOther',\n          tr: 'startTagTableOther',\n          '-default': 'startTagOther'\n        };\n        modes.inRow.end_tag_handlers = {\n          tr: 'endTagTr',\n          table: 'endTagTable',\n          tbody: 'endTagTableRowGroup',\n          tfoot: 'endTagTableRowGroup',\n          thead: 'endTagTableRowGroup',\n          body: 'endTagIgnore',\n          caption: 'endTagIgnore',\n          col: 'endTagIgnore',\n          colgroup: 'endTagIgnore',\n          html: 'endTagIgnore',\n          td: 'endTagIgnore',\n          th: 'endTagIgnore',\n          '-default': 'endTagOther'\n        };\n        modes.inRow.processCharacters = function (data) {\n          modes.inTable.processCharacters(data);\n        };\n        modes.inRow.startTagTableCell = function (name, attributes) {\n          tree.openElements.popUntilTableRowScopeMarker();\n          tree.insertElement(name, attributes);\n          tree.setInsertionMode('inCell');\n          tree.activeFormattingElements.push(Marker);\n        };\n        modes.inRow.startTagTableOther = function (name, attributes) {\n          var ignoreEndTag = this.ignoreEndTagTr();\n          this.endTagTr('tr');\n          if (!ignoreEndTag) tree.insertionMode.processStartTag(name, attributes);\n        };\n        modes.inRow.startTagOther = function (name, attributes, selfClosing) {\n          modes.inTable.processStartTag(name, attributes, selfClosing);\n        };\n        modes.inRow.endTagTr = function (name) {\n          if (this.ignoreEndTagTr()) {\n            assert.ok(tree.context);\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          } else {\n            tree.openElements.popUntilTableRowScopeMarker();\n            tree.popElement();\n            tree.setInsertionMode('inTableBody');\n          }\n        };\n        modes.inRow.endTagTable = function (name) {\n          var ignoreEndTag = this.ignoreEndTagTr();\n          this.endTagTr('tr');\n          if (!ignoreEndTag) tree.insertionMode.processEndTag(name);\n        };\n        modes.inRow.endTagTableRowGroup = function (name) {\n          if (tree.openElements.inTableScope(name)) {\n            this.endTagTr('tr');\n            tree.insertionMode.processEndTag(name);\n          } else {\n            tree.parseError('unexpected-end-tag', {\n              name: name\n            });\n          }\n        };\n        modes.inRow.endTagIgnore = function (name) {\n          tree.parseError(\"unexpected-end-tag-in-table-row\", {\n            name: name\n          });\n        };\n        modes.inRow.endTagOther = function (name) {\n          modes.inTable.processEndTag(name);\n        };\n        modes.inRow.ignoreEndTagTr = function () {\n          return !tree.openElements.inTableScope('tr');\n        };\n        modes.afterAfterFrameset = Object.create(modes.base);\n        modes.afterAfterFrameset.start_tag_handlers = {\n          html: 'startTagHtml',\n          noframes: 'startTagNoFrames',\n          '-default': 'startTagOther'\n        };\n        modes.afterAfterFrameset.processEOF = function () {};\n        modes.afterAfterFrameset.processComment = function (data) {\n          tree.insertComment(data, tree.document);\n        };\n        modes.afterAfterFrameset.processCharacters = function (buffer) {\n          var characters = buffer.takeRemaining();\n          var whitespace = \"\";\n          for (var i = 0; i < characters.length; i++) {\n            var ch = characters[i];\n            if (isWhitespace(ch)) whitespace += ch;\n          }\n          if (whitespace) {\n            tree.reconstructActiveFormattingElements();\n            tree.insertText(whitespace);\n          }\n          if (whitespace.length < characters.length) tree.parseError('expected-eof-but-got-char');\n        };\n        modes.afterAfterFrameset.startTagNoFrames = function (name, attributes) {\n          modes.inHead.processStartTag(name, attributes);\n        };\n        modes.afterAfterFrameset.startTagOther = function (name, attributes, selfClosing) {\n          tree.parseError('expected-eof-but-got-start-tag', {\n            name: name\n          });\n        };\n        modes.afterAfterFrameset.processEndTag = function (name, attributes) {\n          tree.parseError('expected-eof-but-got-end-tag', {\n            name: name\n          });\n        };\n        modes.text = Object.create(modes.base);\n        modes.text.start_tag_handlers = {\n          '-default': 'startTagOther'\n        };\n        modes.text.end_tag_handlers = {\n          script: 'endTagScript',\n          '-default': 'endTagOther'\n        };\n        modes.text.processCharacters = function (buffer) {\n          if (tree.shouldSkipLeadingNewline) {\n            tree.shouldSkipLeadingNewline = false;\n            buffer.skipAtMostOneLeadingNewline();\n          }\n          var data = buffer.takeRemaining();\n          if (!data) return;\n          tree.insertText(data);\n        };\n        modes.text.processEOF = function () {\n          tree.parseError(\"expected-named-closing-tag-but-got-eof\", {\n            name: tree.currentStackItem().localName\n          });\n          tree.openElements.pop();\n          tree.setInsertionMode(tree.originalInsertionMode);\n          tree.insertionMode.processEOF();\n        };\n        modes.text.startTagOther = function (name) {\n          throw \"Tried to process start tag \" + name + \" in RCDATA/RAWTEXT mode\";\n        };\n        modes.text.endTagScript = function (name) {\n          var node = tree.openElements.pop();\n          assert.ok(node.localName == 'script');\n          tree.setInsertionMode(tree.originalInsertionMode);\n        };\n        modes.text.endTagOther = function (name) {\n          tree.openElements.pop();\n          tree.setInsertionMode(tree.originalInsertionMode);\n        };\n      }\n      TreeBuilder.prototype.setInsertionMode = function (name) {\n        this.insertionMode = this.insertionModes[name];\n        this.insertionModeName = name;\n      };\n      TreeBuilder.prototype.adoptionAgencyEndTag = function (name) {\n        var outerIterationLimit = 8;\n        var innerIterationLimit = 3;\n        var formattingElement;\n        function isActiveFormattingElement(el) {\n          return el === formattingElement;\n        }\n        var outerLoopCounter = 0;\n        while (outerLoopCounter++ < outerIterationLimit) {\n          formattingElement = this.elementInActiveFormattingElements(name);\n          if (!formattingElement || this.openElements.contains(formattingElement) && !this.openElements.inScope(formattingElement.localName)) {\n            this.parseError('adoption-agency-1.1', {\n              name: name\n            });\n            return false;\n          }\n          if (!this.openElements.contains(formattingElement)) {\n            this.parseError('adoption-agency-1.2', {\n              name: name\n            });\n            this.removeElementFromActiveFormattingElements(formattingElement);\n            return true;\n          }\n          if (!this.openElements.inScope(formattingElement.localName)) {\n            this.parseError('adoption-agency-4.4', {\n              name: name\n            });\n          }\n          if (formattingElement != this.currentStackItem()) {\n            this.parseError('adoption-agency-1.3', {\n              name: name\n            });\n          }\n          var furthestBlock = this.openElements.furthestBlockForFormattingElement(formattingElement.node);\n          if (!furthestBlock) {\n            this.openElements.remove_openElements_until(isActiveFormattingElement);\n            this.removeElementFromActiveFormattingElements(formattingElement);\n            return true;\n          }\n          var afeIndex = this.openElements.elements.indexOf(formattingElement);\n          var commonAncestor = this.openElements.item(afeIndex - 1);\n          var bookmark = this.activeFormattingElements.indexOf(formattingElement);\n          var node = furthestBlock;\n          var lastNode = furthestBlock;\n          var index = this.openElements.elements.indexOf(node);\n          var innerLoopCounter = 0;\n          while (innerLoopCounter++ < innerIterationLimit) {\n            index -= 1;\n            node = this.openElements.item(index);\n            if (this.activeFormattingElements.indexOf(node) < 0) {\n              this.openElements.elements.splice(index, 1);\n              continue;\n            }\n            if (node == formattingElement) break;\n            if (lastNode == furthestBlock) bookmark = this.activeFormattingElements.indexOf(node) + 1;\n            var clone = this.createElement(node.namespaceURI, node.localName, node.attributes);\n            var newNode = new StackItem(node.namespaceURI, node.localName, node.attributes, clone);\n            this.activeFormattingElements[this.activeFormattingElements.indexOf(node)] = newNode;\n            this.openElements.elements[this.openElements.elements.indexOf(node)] = newNode;\n            node = newNode;\n            this.detachFromParent(lastNode.node);\n            this.attachNode(lastNode.node, node.node);\n            lastNode = node;\n          }\n          this.detachFromParent(lastNode.node);\n          if (commonAncestor.isFosterParenting()) {\n            this.insertIntoFosterParent(lastNode.node);\n          } else {\n            this.attachNode(lastNode.node, commonAncestor.node);\n          }\n          var clone = this.createElement(\"http://www.w3.org/1999/xhtml\", formattingElement.localName, formattingElement.attributes);\n          var formattingClone = new StackItem(formattingElement.namespaceURI, formattingElement.localName, formattingElement.attributes, clone);\n          this.reparentChildren(furthestBlock.node, clone);\n          this.attachNode(clone, furthestBlock.node);\n          this.removeElementFromActiveFormattingElements(formattingElement);\n          this.activeFormattingElements.splice(Math.min(bookmark, this.activeFormattingElements.length), 0, formattingClone);\n          this.openElements.remove(formattingElement);\n          this.openElements.elements.splice(this.openElements.elements.indexOf(furthestBlock) + 1, 0, formattingClone);\n        }\n        return true;\n      };\n      TreeBuilder.prototype.start = function () {\n        throw \"Not mplemented\";\n      };\n      TreeBuilder.prototype.startTokenization = function (tokenizer) {\n        this.tokenizer = tokenizer;\n        this.compatMode = \"no quirks\";\n        this.originalInsertionMode = \"initial\";\n        this.framesetOk = true;\n        this.openElements = new ElementStack();\n        this.activeFormattingElements = [];\n        this.start();\n        if (this.context) {\n          switch (this.context) {\n            case 'title':\n            case 'textarea':\n              this.tokenizer.setState(Tokenizer.RCDATA);\n              break;\n            case 'style':\n            case 'xmp':\n            case 'iframe':\n            case 'noembed':\n            case 'noframes':\n              this.tokenizer.setState(Tokenizer.RAWTEXT);\n              break;\n            case 'script':\n              this.tokenizer.setState(Tokenizer.SCRIPT_DATA);\n              break;\n            case 'noscript':\n              if (this.scriptingEnabled) this.tokenizer.setState(Tokenizer.RAWTEXT);\n              break;\n            case 'plaintext':\n              this.tokenizer.setState(Tokenizer.PLAINTEXT);\n              break;\n          }\n          this.insertHtmlElement();\n          if (this.context === 'head') {\n            this.insertHeadElement();\n          } else {\n            this.insertBodyElement();\n          }\n          this.resetInsertionMode();\n        } else {\n          this.setInsertionMode('initial');\n        }\n      };\n      TreeBuilder.prototype.processToken = function (token) {\n        this.selfClosingFlagAcknowledged = false;\n        var currentNode = this.openElements.top || null;\n        var insertionMode;\n        if (!currentNode || !currentNode.isForeign() || currentNode.isMathMLTextIntegrationPoint() && (token.type == 'StartTag' && !(token.name in {\n          mglyph: 0,\n          malignmark: 0\n        }) || token.type === 'Characters') || currentNode.namespaceURI == \"http://www.w3.org/1998/Math/MathML\" && currentNode.localName == 'annotation-xml' && token.type == 'StartTag' && token.name == 'svg' || currentNode.isHtmlIntegrationPoint() && token.type in {\n          StartTag: 0,\n          Characters: 0\n        } || token.type == 'EOF') {\n          insertionMode = this.insertionMode;\n        } else {\n          insertionMode = this.insertionModes.inForeignContent;\n        }\n        switch (token.type) {\n          case 'Characters':\n            var buffer = new CharacterBuffer(token.data);\n            insertionMode.processCharacters(buffer);\n            break;\n          case 'Comment':\n            insertionMode.processComment(token.data);\n            break;\n          case 'StartTag':\n            insertionMode.processStartTag(token.name, token.data, token.selfClosing);\n            break;\n          case 'EndTag':\n            insertionMode.processEndTag(token.name);\n            break;\n          case 'Doctype':\n            insertionMode.processDoctype(token.name, token.publicId, token.systemId, token.forceQuirks);\n            break;\n          case 'EOF':\n            insertionMode.processEOF();\n            break;\n        }\n      };\n      TreeBuilder.prototype.isCdataSectionAllowed = function () {\n        return this.openElements.length > 0 && this.currentStackItem().isForeign();\n      };\n      TreeBuilder.prototype.isSelfClosingFlagAcknowledged = function () {\n        return this.selfClosingFlagAcknowledged;\n      };\n      TreeBuilder.prototype.createElement = function (namespaceURI, localName, attributes) {\n        throw new Error(\"Not implemented\");\n      };\n      TreeBuilder.prototype.attachNode = function (child, parent) {\n        throw new Error(\"Not implemented\");\n      };\n      TreeBuilder.prototype.attachNodeToFosterParent = function (child, table, stackParent) {\n        throw new Error(\"Not implemented\");\n      };\n      TreeBuilder.prototype.detachFromParent = function (node) {\n        throw new Error(\"Not implemented\");\n      };\n      TreeBuilder.prototype.addAttributesToElement = function (element, attributes) {\n        throw new Error(\"Not implemented\");\n      };\n      TreeBuilder.prototype.insertHtmlElement = function (attributes) {\n        var root = this.createElement(\"http://www.w3.org/1999/xhtml\", 'html', attributes);\n        this.attachNode(root, this.document);\n        this.openElements.pushHtmlElement(new StackItem(\"http://www.w3.org/1999/xhtml\", 'html', attributes, root));\n        return root;\n      };\n      TreeBuilder.prototype.insertHeadElement = function (attributes) {\n        var element = this.createElement(\"http://www.w3.org/1999/xhtml\", \"head\", attributes);\n        this.head = new StackItem(\"http://www.w3.org/1999/xhtml\", \"head\", attributes, element);\n        this.attachNode(element, this.openElements.top.node);\n        this.openElements.pushHeadElement(this.head);\n        return element;\n      };\n      TreeBuilder.prototype.insertBodyElement = function (attributes) {\n        var element = this.createElement(\"http://www.w3.org/1999/xhtml\", \"body\", attributes);\n        this.attachNode(element, this.openElements.top.node);\n        this.openElements.pushBodyElement(new StackItem(\"http://www.w3.org/1999/xhtml\", \"body\", attributes, element));\n        return element;\n      };\n      TreeBuilder.prototype.insertIntoFosterParent = function (node) {\n        var tableIndex = this.openElements.findIndex('table');\n        var tableElement = this.openElements.item(tableIndex).node;\n        if (tableIndex === 0) return this.attachNode(node, tableElement);\n        this.attachNodeToFosterParent(node, tableElement, this.openElements.item(tableIndex - 1).node);\n      };\n      TreeBuilder.prototype.insertElement = function (name, attributes, namespaceURI, selfClosing) {\n        if (!namespaceURI) namespaceURI = \"http://www.w3.org/1999/xhtml\";\n        var element = this.createElement(namespaceURI, name, attributes);\n        if (this.shouldFosterParent()) this.insertIntoFosterParent(element);else this.attachNode(element, this.openElements.top.node);\n        if (!selfClosing) this.openElements.push(new StackItem(namespaceURI, name, attributes, element));\n      };\n      TreeBuilder.prototype.insertFormattingElement = function (name, attributes) {\n        this.insertElement(name, attributes, \"http://www.w3.org/1999/xhtml\");\n        this.appendElementToActiveFormattingElements(this.currentStackItem());\n      };\n      TreeBuilder.prototype.insertSelfClosingElement = function (name, attributes) {\n        this.selfClosingFlagAcknowledged = true;\n        this.insertElement(name, attributes, \"http://www.w3.org/1999/xhtml\", true);\n      };\n      TreeBuilder.prototype.insertForeignElement = function (name, attributes, namespaceURI, selfClosing) {\n        if (selfClosing) this.selfClosingFlagAcknowledged = true;\n        this.insertElement(name, attributes, namespaceURI, selfClosing);\n      };\n      TreeBuilder.prototype.insertComment = function (data, parent) {\n        throw new Error(\"Not implemented\");\n      };\n      TreeBuilder.prototype.insertDoctype = function (name, publicId, systemId) {\n        throw new Error(\"Not implemented\");\n      };\n      TreeBuilder.prototype.insertText = function (data) {\n        throw new Error(\"Not implemented\");\n      };\n      TreeBuilder.prototype.currentStackItem = function () {\n        return this.openElements.top;\n      };\n      TreeBuilder.prototype.popElement = function () {\n        return this.openElements.pop();\n      };\n      TreeBuilder.prototype.shouldFosterParent = function () {\n        return this.redirectAttachToFosterParent && this.currentStackItem().isFosterParenting();\n      };\n      TreeBuilder.prototype.generateImpliedEndTags = function (exclude) {\n        var name = this.openElements.top.localName;\n        if (['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'].indexOf(name) != -1 && name != exclude) {\n          this.popElement();\n          this.generateImpliedEndTags(exclude);\n        }\n      };\n      TreeBuilder.prototype.reconstructActiveFormattingElements = function () {\n        if (this.activeFormattingElements.length === 0) return;\n        var i = this.activeFormattingElements.length - 1;\n        var entry = this.activeFormattingElements[i];\n        if (entry == Marker || this.openElements.contains(entry)) return;\n        while (entry != Marker && !this.openElements.contains(entry)) {\n          i -= 1;\n          entry = this.activeFormattingElements[i];\n          if (!entry) break;\n        }\n        while (true) {\n          i += 1;\n          entry = this.activeFormattingElements[i];\n          this.insertElement(entry.localName, entry.attributes);\n          var element = this.currentStackItem();\n          this.activeFormattingElements[i] = element;\n          if (element == this.activeFormattingElements[this.activeFormattingElements.length - 1]) break;\n        }\n      };\n      TreeBuilder.prototype.ensureNoahsArkCondition = function (item) {\n        var kNoahsArkCapacity = 3;\n        if (this.activeFormattingElements.length < kNoahsArkCapacity) return;\n        var candidates = [];\n        var newItemAttributeCount = item.attributes.length;\n        for (var i = this.activeFormattingElements.length - 1; i >= 0; i--) {\n          var candidate = this.activeFormattingElements[i];\n          if (candidate === Marker) break;\n          if (item.localName !== candidate.localName || item.namespaceURI !== candidate.namespaceURI) continue;\n          if (candidate.attributes.length != newItemAttributeCount) continue;\n          candidates.push(candidate);\n        }\n        if (candidates.length < kNoahsArkCapacity) return;\n        var remainingCandidates = [];\n        var attributes = item.attributes;\n        for (var i = 0; i < attributes.length; i++) {\n          var attribute = attributes[i];\n          for (var j = 0; j < candidates.length; j++) {\n            var candidate = candidates[j];\n            var candidateAttribute = getAttribute(candidate, attribute.nodeName);\n            if (candidateAttribute && candidateAttribute.nodeValue === attribute.nodeValue) remainingCandidates.push(candidate);\n          }\n          if (remainingCandidates.length < kNoahsArkCapacity) return;\n          candidates = remainingCandidates;\n          remainingCandidates = [];\n        }\n        for (var i = kNoahsArkCapacity - 1; i < candidates.length; i++) this.removeElementFromActiveFormattingElements(candidates[i]);\n      };\n      TreeBuilder.prototype.appendElementToActiveFormattingElements = function (item) {\n        this.ensureNoahsArkCondition(item);\n        this.activeFormattingElements.push(item);\n      };\n      TreeBuilder.prototype.removeElementFromActiveFormattingElements = function (item) {\n        var index = this.activeFormattingElements.indexOf(item);\n        if (index >= 0) this.activeFormattingElements.splice(index, 1);\n      };\n      TreeBuilder.prototype.elementInActiveFormattingElements = function (name) {\n        var els = this.activeFormattingElements;\n        for (var i = els.length - 1; i >= 0; i--) {\n          if (els[i] == Marker) break;\n          if (els[i].localName == name) return els[i];\n        }\n        return false;\n      };\n      TreeBuilder.prototype.clearActiveFormattingElements = function () {\n        while (!(this.activeFormattingElements.length === 0 || this.activeFormattingElements.pop() == Marker));\n      };\n      TreeBuilder.prototype.reparentChildren = function (oldParent, newParent) {\n        throw new Error(\"Not implemented\");\n      };\n      TreeBuilder.prototype.setFragmentContext = function (context) {\n        this.context = context;\n      };\n      TreeBuilder.prototype.parseError = function (code, args) {\n        if (!this.errorHandler) return;\n        var message = formatMessage(messages[code], args);\n        this.errorHandler.error(message, this.tokenizer._inputStream.location(), code);\n      };\n      TreeBuilder.prototype.resetInsertionMode = function () {\n        var fragmentAssigned = false;\n        var node = null;\n        for (var i = this.openElements.length - 1; i >= 0; i--) {\n          node = this.openElements.item(i);\n          if (i === 0) {\n            assert.ok(this.context);\n            fragmentAssigned = true;\n            node = new StackItem(\"http://www.w3.org/1999/xhtml\", this.context, [], null);\n          }\n          if (node.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\n            if (node.localName === 'select') return this.setInsertionMode('inSelect');\n            if (node.localName === 'td' || node.localName === 'th') return this.setInsertionMode('inCell');\n            if (node.localName === 'tr') return this.setInsertionMode('inRow');\n            if (node.localName === 'tbody' || node.localName === 'thead' || node.localName === 'tfoot') return this.setInsertionMode('inTableBody');\n            if (node.localName === 'caption') return this.setInsertionMode('inCaption');\n            if (node.localName === 'colgroup') return this.setInsertionMode('inColumnGroup');\n            if (node.localName === 'table') return this.setInsertionMode('inTable');\n            if (node.localName === 'head') return this.setInsertionMode('inHead');\n            if (node.localName === 'body') return this.setInsertionMode('inBody');\n            if (node.localName === 'frameset') return this.setInsertionMode('inFrameset');\n            if (node.localName === 'html') if (!this.openElements.headElement) return this.setInsertionMode('beforeHead');else return this.setInsertionMode('afterHead');\n          }\n          if (fragmentAssigned) return this.setInsertionMode('inBody');\n        }\n      };\n      TreeBuilder.prototype.processGenericRCDATAStartTag = function (name, attributes) {\n        this.insertElement(name, attributes);\n        this.tokenizer.setState(Tokenizer.RCDATA);\n        this.originalInsertionMode = this.insertionModeName;\n        this.setInsertionMode('text');\n      };\n      TreeBuilder.prototype.processGenericRawTextStartTag = function (name, attributes) {\n        this.insertElement(name, attributes);\n        this.tokenizer.setState(Tokenizer.RAWTEXT);\n        this.originalInsertionMode = this.insertionModeName;\n        this.setInsertionMode('text');\n      };\n      TreeBuilder.prototype.adjustMathMLAttributes = function (attributes) {\n        attributes.forEach(function (a) {\n          a.namespaceURI = \"http://www.w3.org/1998/Math/MathML\";\n          if (constants.MATHMLAttributeMap[a.nodeName]) a.nodeName = constants.MATHMLAttributeMap[a.nodeName];\n        });\n        return attributes;\n      };\n      TreeBuilder.prototype.adjustSVGTagNameCase = function (name) {\n        return constants.SVGTagMap[name] || name;\n      };\n      TreeBuilder.prototype.adjustSVGAttributes = function (attributes) {\n        attributes.forEach(function (a) {\n          a.namespaceURI = \"http://www.w3.org/2000/svg\";\n          if (constants.SVGAttributeMap[a.nodeName]) a.nodeName = constants.SVGAttributeMap[a.nodeName];\n        });\n        return attributes;\n      };\n      TreeBuilder.prototype.adjustForeignAttributes = function (attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n          var attribute = attributes[i];\n          var adjusted = constants.ForeignAttributeMap[attribute.nodeName];\n          if (adjusted) {\n            attribute.nodeName = adjusted.localName;\n            attribute.prefix = adjusted.prefix;\n            attribute.namespaceURI = adjusted.namespaceURI;\n          }\n        }\n        return attributes;\n      };\n      function formatMessage(format, args) {\n        return format.replace(new RegExp('{[0-9a-z-]+}', 'gi'), function (match) {\n          return args[match.slice(1, -1)] || match;\n        });\n      }\n      exports.TreeBuilder = TreeBuilder;\n    }, {\n      \"./ElementStack\": 1,\n      \"./StackItem\": 4,\n      \"./Tokenizer\": 5,\n      \"./constants\": 7,\n      \"./messages.json\": 8,\n      \"assert\": 13,\n      \"events\": 16\n    }],\n    7: [function (_dereq_, module, exports) {\n      exports.SVGTagMap = {\n        \"altglyph\": \"altGlyph\",\n        \"altglyphdef\": \"altGlyphDef\",\n        \"altglyphitem\": \"altGlyphItem\",\n        \"animatecolor\": \"animateColor\",\n        \"animatemotion\": \"animateMotion\",\n        \"animatetransform\": \"animateTransform\",\n        \"clippath\": \"clipPath\",\n        \"feblend\": \"feBlend\",\n        \"fecolormatrix\": \"feColorMatrix\",\n        \"fecomponenttransfer\": \"feComponentTransfer\",\n        \"fecomposite\": \"feComposite\",\n        \"feconvolvematrix\": \"feConvolveMatrix\",\n        \"fediffuselighting\": \"feDiffuseLighting\",\n        \"fedisplacementmap\": \"feDisplacementMap\",\n        \"fedistantlight\": \"feDistantLight\",\n        \"feflood\": \"feFlood\",\n        \"fefunca\": \"feFuncA\",\n        \"fefuncb\": \"feFuncB\",\n        \"fefuncg\": \"feFuncG\",\n        \"fefuncr\": \"feFuncR\",\n        \"fegaussianblur\": \"feGaussianBlur\",\n        \"feimage\": \"feImage\",\n        \"femerge\": \"feMerge\",\n        \"femergenode\": \"feMergeNode\",\n        \"femorphology\": \"feMorphology\",\n        \"feoffset\": \"feOffset\",\n        \"fepointlight\": \"fePointLight\",\n        \"fespecularlighting\": \"feSpecularLighting\",\n        \"fespotlight\": \"feSpotLight\",\n        \"fetile\": \"feTile\",\n        \"feturbulence\": \"feTurbulence\",\n        \"foreignobject\": \"foreignObject\",\n        \"glyphref\": \"glyphRef\",\n        \"lineargradient\": \"linearGradient\",\n        \"radialgradient\": \"radialGradient\",\n        \"textpath\": \"textPath\"\n      };\n      exports.MATHMLAttributeMap = {\n        definitionurl: 'definitionURL'\n      };\n      exports.SVGAttributeMap = {\n        attributename: 'attributeName',\n        attributetype: 'attributeType',\n        basefrequency: 'baseFrequency',\n        baseprofile: 'baseProfile',\n        calcmode: 'calcMode',\n        clippathunits: 'clipPathUnits',\n        contentscripttype: 'contentScriptType',\n        contentstyletype: 'contentStyleType',\n        diffuseconstant: 'diffuseConstant',\n        edgemode: 'edgeMode',\n        externalresourcesrequired: 'externalResourcesRequired',\n        filterres: 'filterRes',\n        filterunits: 'filterUnits',\n        glyphref: 'glyphRef',\n        gradienttransform: 'gradientTransform',\n        gradientunits: 'gradientUnits',\n        kernelmatrix: 'kernelMatrix',\n        kernelunitlength: 'kernelUnitLength',\n        keypoints: 'keyPoints',\n        keysplines: 'keySplines',\n        keytimes: 'keyTimes',\n        lengthadjust: 'lengthAdjust',\n        limitingconeangle: 'limitingConeAngle',\n        markerheight: 'markerHeight',\n        markerunits: 'markerUnits',\n        markerwidth: 'markerWidth',\n        maskcontentunits: 'maskContentUnits',\n        maskunits: 'maskUnits',\n        numoctaves: 'numOctaves',\n        pathlength: 'pathLength',\n        patterncontentunits: 'patternContentUnits',\n        patterntransform: 'patternTransform',\n        patternunits: 'patternUnits',\n        pointsatx: 'pointsAtX',\n        pointsaty: 'pointsAtY',\n        pointsatz: 'pointsAtZ',\n        preservealpha: 'preserveAlpha',\n        preserveaspectratio: 'preserveAspectRatio',\n        primitiveunits: 'primitiveUnits',\n        refx: 'refX',\n        refy: 'refY',\n        repeatcount: 'repeatCount',\n        repeatdur: 'repeatDur',\n        requiredextensions: 'requiredExtensions',\n        requiredfeatures: 'requiredFeatures',\n        specularconstant: 'specularConstant',\n        specularexponent: 'specularExponent',\n        spreadmethod: 'spreadMethod',\n        startoffset: 'startOffset',\n        stddeviation: 'stdDeviation',\n        stitchtiles: 'stitchTiles',\n        surfacescale: 'surfaceScale',\n        systemlanguage: 'systemLanguage',\n        tablevalues: 'tableValues',\n        targetx: 'targetX',\n        targety: 'targetY',\n        textlength: 'textLength',\n        viewbox: 'viewBox',\n        viewtarget: 'viewTarget',\n        xchannelselector: 'xChannelSelector',\n        ychannelselector: 'yChannelSelector',\n        zoomandpan: 'zoomAndPan'\n      };\n      exports.ForeignAttributeMap = {\n        \"xlink:actuate\": {\n          prefix: \"xlink\",\n          localName: \"actuate\",\n          namespaceURI: \"http://www.w3.org/1999/xlink\"\n        },\n        \"xlink:arcrole\": {\n          prefix: \"xlink\",\n          localName: \"arcrole\",\n          namespaceURI: \"http://www.w3.org/1999/xlink\"\n        },\n        \"xlink:href\": {\n          prefix: \"xlink\",\n          localName: \"href\",\n          namespaceURI: \"http://www.w3.org/1999/xlink\"\n        },\n        \"xlink:role\": {\n          prefix: \"xlink\",\n          localName: \"role\",\n          namespaceURI: \"http://www.w3.org/1999/xlink\"\n        },\n        \"xlink:show\": {\n          prefix: \"xlink\",\n          localName: \"show\",\n          namespaceURI: \"http://www.w3.org/1999/xlink\"\n        },\n        \"xlink:title\": {\n          prefix: \"xlink\",\n          localName: \"title\",\n          namespaceURI: \"http://www.w3.org/1999/xlink\"\n        },\n        \"xlink:type\": {\n          prefix: \"xlink\",\n          localName: \"title\",\n          namespaceURI: \"http://www.w3.org/1999/xlink\"\n        },\n        \"xml:base\": {\n          prefix: \"xml\",\n          localName: \"base\",\n          namespaceURI: \"http://www.w3.org/XML/1998/namespace\"\n        },\n        \"xml:lang\": {\n          prefix: \"xml\",\n          localName: \"lang\",\n          namespaceURI: \"http://www.w3.org/XML/1998/namespace\"\n        },\n        \"xml:space\": {\n          prefix: \"xml\",\n          localName: \"space\",\n          namespaceURI: \"http://www.w3.org/XML/1998/namespace\"\n        },\n        \"xmlns\": {\n          prefix: null,\n          localName: \"xmlns\",\n          namespaceURI: \"http://www.w3.org/2000/xmlns/\"\n        },\n        \"xmlns:xlink\": {\n          prefix: \"xmlns\",\n          localName: \"xlink\",\n          namespaceURI: \"http://www.w3.org/2000/xmlns/\"\n        }\n      };\n    }, {}],\n    8: [function (_dereq_, module, exports) {\n      module.exports = {\n        \"null-character\": \"Null character in input stream, replaced with U+FFFD.\",\n        \"invalid-codepoint\": \"Invalid codepoint in stream\",\n        \"incorrectly-placed-solidus\": \"Solidus (/) incorrectly placed in tag.\",\n        \"incorrect-cr-newline-entity\": \"Incorrect CR newline entity, replaced with LF.\",\n        \"illegal-windows-1252-entity\": \"Entity used with illegal number (windows-1252 reference).\",\n        \"cant-convert-numeric-entity\": \"Numeric entity couldn't be converted to character (codepoint U+{charAsInt}).\",\n        \"invalid-numeric-entity-replaced\": \"Numeric entity represents an illegal codepoint. Expanded to the C1 controls range.\",\n        \"numeric-entity-without-semicolon\": \"Numeric entity didn't end with ';'.\",\n        \"expected-numeric-entity-but-got-eof\": \"Numeric entity expected. Got end of file instead.\",\n        \"expected-numeric-entity\": \"Numeric entity expected but none found.\",\n        \"named-entity-without-semicolon\": \"Named entity didn't end with ';'.\",\n        \"expected-named-entity\": \"Named entity expected. Got none.\",\n        \"attributes-in-end-tag\": \"End tag contains unexpected attributes.\",\n        \"self-closing-flag-on-end-tag\": \"End tag contains unexpected self-closing flag.\",\n        \"bare-less-than-sign-at-eof\": \"End of file after <.\",\n        \"expected-tag-name-but-got-right-bracket\": \"Expected tag name. Got '>' instead.\",\n        \"expected-tag-name-but-got-question-mark\": \"Expected tag name. Got '?' instead. (HTML doesn't support processing instructions.)\",\n        \"expected-tag-name\": \"Expected tag name. Got something else instead.\",\n        \"expected-closing-tag-but-got-right-bracket\": \"Expected closing tag. Got '>' instead. Ignoring '</>'.\",\n        \"expected-closing-tag-but-got-eof\": \"Expected closing tag. Unexpected end of file.\",\n        \"expected-closing-tag-but-got-char\": \"Expected closing tag. Unexpected character '{data}' found.\",\n        \"eof-in-tag-name\": \"Unexpected end of file in the tag name.\",\n        \"expected-attribute-name-but-got-eof\": \"Unexpected end of file. Expected attribute name instead.\",\n        \"eof-in-attribute-name\": \"Unexpected end of file in attribute name.\",\n        \"invalid-character-in-attribute-name\": \"Invalid character in attribute name.\",\n        \"duplicate-attribute\": \"Dropped duplicate attribute '{name}' on tag.\",\n        \"expected-end-of-tag-but-got-eof\": \"Unexpected end of file. Expected = or end of tag.\",\n        \"expected-attribute-value-but-got-eof\": \"Unexpected end of file. Expected attribute value.\",\n        \"expected-attribute-value-but-got-right-bracket\": \"Expected attribute value. Got '>' instead.\",\n        \"unexpected-character-in-unquoted-attribute-value\": \"Unexpected character in unquoted attribute\",\n        \"invalid-character-after-attribute-name\": \"Unexpected character after attribute name.\",\n        \"unexpected-character-after-attribute-value\": \"Unexpected character after attribute value.\",\n        \"eof-in-attribute-value-double-quote\": \"Unexpected end of file in attribute value (\\\").\",\n        \"eof-in-attribute-value-single-quote\": \"Unexpected end of file in attribute value (').\",\n        \"eof-in-attribute-value-no-quotes\": \"Unexpected end of file in attribute value.\",\n        \"eof-after-attribute-value\": \"Unexpected end of file after attribute value.\",\n        \"unexpected-eof-after-solidus-in-tag\": \"Unexpected end of file in tag. Expected >.\",\n        \"unexpected-character-after-solidus-in-tag\": \"Unexpected character after / in tag. Expected >.\",\n        \"expected-dashes-or-doctype\": \"Expected '--' or 'DOCTYPE'. Not found.\",\n        \"unexpected-bang-after-double-dash-in-comment\": \"Unexpected ! after -- in comment.\",\n        \"incorrect-comment\": \"Incorrect comment.\",\n        \"eof-in-comment\": \"Unexpected end of file in comment.\",\n        \"eof-in-comment-end-dash\": \"Unexpected end of file in comment (-).\",\n        \"unexpected-dash-after-double-dash-in-comment\": \"Unexpected '-' after '--' found in comment.\",\n        \"eof-in-comment-double-dash\": \"Unexpected end of file in comment (--).\",\n        \"eof-in-comment-end-bang-state\": \"Unexpected end of file in comment.\",\n        \"unexpected-char-in-comment\": \"Unexpected character in comment found.\",\n        \"need-space-after-doctype\": \"No space after literal string 'DOCTYPE'.\",\n        \"expected-doctype-name-but-got-right-bracket\": \"Unexpected > character. Expected DOCTYPE name.\",\n        \"expected-doctype-name-but-got-eof\": \"Unexpected end of file. Expected DOCTYPE name.\",\n        \"eof-in-doctype-name\": \"Unexpected end of file in DOCTYPE name.\",\n        \"eof-in-doctype\": \"Unexpected end of file in DOCTYPE.\",\n        \"expected-space-or-right-bracket-in-doctype\": \"Expected space or '>'. Got '{data}'.\",\n        \"unexpected-end-of-doctype\": \"Unexpected end of DOCTYPE.\",\n        \"unexpected-char-in-doctype\": \"Unexpected character in DOCTYPE.\",\n        \"eof-in-bogus-doctype\": \"Unexpected end of file in bogus doctype.\",\n        \"eof-in-innerhtml\": \"Unexpected EOF in inner html mode.\",\n        \"unexpected-doctype\": \"Unexpected DOCTYPE. Ignored.\",\n        \"non-html-root\": \"html needs to be the first start tag.\",\n        \"expected-doctype-but-got-eof\": \"Unexpected End of file. Expected DOCTYPE.\",\n        \"unknown-doctype\": \"Erroneous DOCTYPE. Expected <!DOCTYPE html>.\",\n        \"quirky-doctype\": \"Quirky doctype. Expected <!DOCTYPE html>.\",\n        \"almost-standards-doctype\": \"Almost standards mode doctype. Expected <!DOCTYPE html>.\",\n        \"obsolete-doctype\": \"Obsolete doctype. Expected <!DOCTYPE html>.\",\n        \"expected-doctype-but-got-chars\": \"Non-space characters found without seeing a doctype first. Expected e.g. <!DOCTYPE html>.\",\n        \"expected-doctype-but-got-start-tag\": \"Start tag seen without seeing a doctype first. Expected e.g. <!DOCTYPE html>.\",\n        \"expected-doctype-but-got-end-tag\": \"End tag seen without seeing a doctype first. Expected e.g. <!DOCTYPE html>.\",\n        \"end-tag-after-implied-root\": \"Unexpected end tag ({name}) after the (implied) root element.\",\n        \"expected-named-closing-tag-but-got-eof\": \"Unexpected end of file. Expected end tag ({name}).\",\n        \"two-heads-are-not-better-than-one\": \"Unexpected start tag head in existing head. Ignored.\",\n        \"unexpected-end-tag\": \"Unexpected end tag ({name}). Ignored.\",\n        \"unexpected-implied-end-tag\": \"End tag {name} implied, but there were open elements.\",\n        \"unexpected-start-tag-out-of-my-head\": \"Unexpected start tag ({name}) that can be in head. Moved.\",\n        \"unexpected-start-tag\": \"Unexpected start tag ({name}).\",\n        \"missing-end-tag\": \"Missing end tag ({name}).\",\n        \"missing-end-tags\": \"Missing end tags ({name}).\",\n        \"unexpected-start-tag-implies-end-tag\": \"Unexpected start tag ({startName}) implies end tag ({endName}).\",\n        \"unexpected-start-tag-treated-as\": \"Unexpected start tag ({originalName}). Treated as {newName}.\",\n        \"deprecated-tag\": \"Unexpected start tag {name}. Don't use it!\",\n        \"unexpected-start-tag-ignored\": \"Unexpected start tag {name}. Ignored.\",\n        \"expected-one-end-tag-but-got-another\": \"Unexpected end tag ({gotName}). Missing end tag ({expectedName}).\",\n        \"end-tag-too-early\": \"End tag ({name}) seen too early. Expected other end tag.\",\n        \"end-tag-too-early-named\": \"Unexpected end tag ({gotName}). Expected end tag ({expectedName}.\",\n        \"end-tag-too-early-ignored\": \"End tag ({name}) seen too early. Ignored.\",\n        \"adoption-agency-1.1\": \"End tag ({name}) violates step 1, paragraph 1 of the adoption agency algorithm.\",\n        \"adoption-agency-1.2\": \"End tag ({name}) violates step 1, paragraph 2 of the adoption agency algorithm.\",\n        \"adoption-agency-1.3\": \"End tag ({name}) violates step 1, paragraph 3 of the adoption agency algorithm.\",\n        \"adoption-agency-4.4\": \"End tag ({name}) violates step 4, paragraph 4 of the adoption agency algorithm.\",\n        \"unexpected-end-tag-treated-as\": \"Unexpected end tag ({originalName}). Treated as {newName}.\",\n        \"no-end-tag\": \"This element ({name}) has no end tag.\",\n        \"unexpected-implied-end-tag-in-table\": \"Unexpected implied end tag ({name}) in the table phase.\",\n        \"unexpected-implied-end-tag-in-table-body\": \"Unexpected implied end tag ({name}) in the table body phase.\",\n        \"unexpected-char-implies-table-voodoo\": \"Unexpected non-space characters in table context caused voodoo mode.\",\n        \"unexpected-hidden-input-in-table\": \"Unexpected input with type hidden in table context.\",\n        \"unexpected-form-in-table\": \"Unexpected form in table context.\",\n        \"unexpected-start-tag-implies-table-voodoo\": \"Unexpected start tag ({name}) in table context caused voodoo mode.\",\n        \"unexpected-end-tag-implies-table-voodoo\": \"Unexpected end tag ({name}) in table context caused voodoo mode.\",\n        \"unexpected-cell-in-table-body\": \"Unexpected table cell start tag ({name}) in the table body phase.\",\n        \"unexpected-cell-end-tag\": \"Got table cell end tag ({name}) while required end tags are missing.\",\n        \"unexpected-end-tag-in-table-body\": \"Unexpected end tag ({name}) in the table body phase. Ignored.\",\n        \"unexpected-implied-end-tag-in-table-row\": \"Unexpected implied end tag ({name}) in the table row phase.\",\n        \"unexpected-end-tag-in-table-row\": \"Unexpected end tag ({name}) in the table row phase. Ignored.\",\n        \"unexpected-select-in-select\": \"Unexpected select start tag in the select phase treated as select end tag.\",\n        \"unexpected-input-in-select\": \"Unexpected input start tag in the select phase.\",\n        \"unexpected-start-tag-in-select\": \"Unexpected start tag token ({name}) in the select phase. Ignored.\",\n        \"unexpected-end-tag-in-select\": \"Unexpected end tag ({name}) in the select phase. Ignored.\",\n        \"unexpected-table-element-start-tag-in-select-in-table\": \"Unexpected table element start tag ({name}) in the select in table phase.\",\n        \"unexpected-table-element-end-tag-in-select-in-table\": \"Unexpected table element end tag ({name}) in the select in table phase.\",\n        \"unexpected-char-after-body\": \"Unexpected non-space characters in the after body phase.\",\n        \"unexpected-start-tag-after-body\": \"Unexpected start tag token ({name}) in the after body phase.\",\n        \"unexpected-end-tag-after-body\": \"Unexpected end tag token ({name}) in the after body phase.\",\n        \"unexpected-char-in-frameset\": \"Unepxected characters in the frameset phase. Characters ignored.\",\n        \"unexpected-start-tag-in-frameset\": \"Unexpected start tag token ({name}) in the frameset phase. Ignored.\",\n        \"unexpected-frameset-in-frameset-innerhtml\": \"Unexpected end tag token (frameset in the frameset phase (innerHTML).\",\n        \"unexpected-end-tag-in-frameset\": \"Unexpected end tag token ({name}) in the frameset phase. Ignored.\",\n        \"unexpected-char-after-frameset\": \"Unexpected non-space characters in the after frameset phase. Ignored.\",\n        \"unexpected-start-tag-after-frameset\": \"Unexpected start tag ({name}) in the after frameset phase. Ignored.\",\n        \"unexpected-end-tag-after-frameset\": \"Unexpected end tag ({name}) in the after frameset phase. Ignored.\",\n        \"expected-eof-but-got-char\": \"Unexpected non-space characters. Expected end of file.\",\n        \"expected-eof-but-got-start-tag\": \"Unexpected start tag ({name}). Expected end of file.\",\n        \"expected-eof-but-got-end-tag\": \"Unexpected end tag ({name}). Expected end of file.\",\n        \"unexpected-end-table-in-caption\": \"Unexpected end table tag in caption. Generates implied end caption.\",\n        \"end-html-in-innerhtml\": \"Unexpected html end tag in inner html mode.\",\n        \"eof-in-table\": \"Unexpected end of file. Expected table content.\",\n        \"eof-in-script\": \"Unexpected end of file. Expected script content.\",\n        \"non-void-element-with-trailing-solidus\": \"Trailing solidus not allowed on element {name}.\",\n        \"unexpected-html-element-in-foreign-content\": \"HTML start tag \\\"{name}\\\" in a foreign namespace context.\",\n        \"unexpected-start-tag-in-table\": \"Unexpected {name}. Expected table content.\"\n      };\n    }, {}],\n    9: [function (_dereq_, module, exports) {\n      var SAXTreeBuilder = _dereq_('./SAXTreeBuilder').SAXTreeBuilder;\n      var Tokenizer = _dereq_('../Tokenizer').Tokenizer;\n      var TreeParser = _dereq_('./TreeParser').TreeParser;\n      function SAXParser() {\n        this.contentHandler = null;\n        this._errorHandler = null;\n        this._treeBuilder = new SAXTreeBuilder();\n        this._tokenizer = new Tokenizer(this._treeBuilder);\n        this._scriptingEnabled = false;\n      }\n      SAXParser.prototype.parse = function (source, context) {\n        if (context) {\n          this._treeBuilder.setFragmentContext(context);\n        }\n        this._tokenizer.tokenize(source);\n        var document = this._treeBuilder.document;\n        if (document) {\n          new TreeParser(this.contentHandler).parse(document);\n        }\n      };\n      SAXParser.prototype.parseFragment = function (source, context) {\n        this._treeBuilder.setFragmentContext(context);\n        this._tokenizer.tokenize(source);\n        var fragment = this._treeBuilder.getFragment();\n        if (fragment) {\n          new TreeParser(this.contentHandler).parse(fragment);\n        }\n      };\n      Object.defineProperty(SAXParser.prototype, 'scriptingEnabled', {\n        get: function get() {\n          return this._scriptingEnabled;\n        },\n        set: function set(value) {\n          this._scriptingEnabled = value;\n          this._treeBuilder.scriptingEnabled = value;\n        }\n      });\n      Object.defineProperty(SAXParser.prototype, 'errorHandler', {\n        get: function get() {\n          return this._errorHandler;\n        },\n        set: function set(value) {\n          this._errorHandler = value;\n          this._treeBuilder.errorHandler = value;\n        }\n      });\n      exports.SAXParser = SAXParser;\n    }, {\n      \"../Tokenizer\": 5,\n      \"./SAXTreeBuilder\": 10,\n      \"./TreeParser\": 11\n    }],\n    10: [function (_dereq_, module, exports) {\n      var util = _dereq_('util');\n      var TreeBuilder = _dereq_('../TreeBuilder').TreeBuilder;\n      function SAXTreeBuilder() {\n        TreeBuilder.call(this);\n      }\n      util.inherits(SAXTreeBuilder, TreeBuilder);\n      SAXTreeBuilder.prototype.start = function (tokenizer) {\n        this.document = new Document(this.tokenizer);\n      };\n      SAXTreeBuilder.prototype.end = function () {\n        this.document.endLocator = this.tokenizer;\n      };\n      SAXTreeBuilder.prototype.insertDoctype = function (name, publicId, systemId) {\n        var doctype = new DTD(this.tokenizer, name, publicId, systemId);\n        doctype.endLocator = this.tokenizer;\n        this.document.appendChild(doctype);\n      };\n      SAXTreeBuilder.prototype.createElement = function (namespaceURI, localName, attributes) {\n        var element = new Element(this.tokenizer, namespaceURI, localName, localName, attributes || []);\n        return element;\n      };\n      SAXTreeBuilder.prototype.insertComment = function (data, parent) {\n        if (!parent) parent = this.currentStackItem();\n        var comment = new Comment(this.tokenizer, data);\n        parent.appendChild(comment);\n      };\n      SAXTreeBuilder.prototype.appendCharacters = function (parent, data) {\n        var text = new Characters(this.tokenizer, data);\n        parent.appendChild(text);\n      };\n      SAXTreeBuilder.prototype.insertText = function (data) {\n        if (this.redirectAttachToFosterParent && this.openElements.top.isFosterParenting()) {\n          var tableIndex = this.openElements.findIndex('table');\n          var tableItem = this.openElements.item(tableIndex);\n          var table = tableItem.node;\n          if (tableIndex === 0) {\n            return this.appendCharacters(table, data);\n          }\n          var text = new Characters(this.tokenizer, data);\n          var parent = table.parentNode;\n          if (parent) {\n            parent.insertBetween(text, table.previousSibling, table);\n            return;\n          }\n          var stackParent = this.openElements.item(tableIndex - 1).node;\n          stackParent.appendChild(text);\n          return;\n        }\n        this.appendCharacters(this.currentStackItem().node, data);\n      };\n      SAXTreeBuilder.prototype.attachNode = function (node, parent) {\n        parent.appendChild(node);\n      };\n      SAXTreeBuilder.prototype.attachNodeToFosterParent = function (child, table, stackParent) {\n        var parent = table.parentNode;\n        if (parent) parent.insertBetween(child, table.previousSibling, table);else stackParent.appendChild(child);\n      };\n      SAXTreeBuilder.prototype.detachFromParent = function (element) {\n        element.detach();\n      };\n      SAXTreeBuilder.prototype.reparentChildren = function (oldParent, newParent) {\n        newParent.appendChildren(oldParent.firstChild);\n      };\n      SAXTreeBuilder.prototype.getFragment = function () {\n        var fragment = new DocumentFragment();\n        this.reparentChildren(this.openElements.rootNode, fragment);\n        return fragment;\n      };\n      function getAttribute(node, name) {\n        for (var i = 0; i < node.attributes.length; i++) {\n          var attribute = node.attributes[i];\n          if (attribute.nodeName === name) return attribute.nodeValue;\n        }\n      }\n      SAXTreeBuilder.prototype.addAttributesToElement = function (element, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n          var attribute = attributes[i];\n          if (!getAttribute(element, attribute.nodeName)) element.attributes.push(attribute);\n        }\n      };\n      var NodeType = {\n        CDATA: 1,\n        CHARACTERS: 2,\n        COMMENT: 3,\n        DOCUMENT: 4,\n        DOCUMENT_FRAGMENT: 5,\n        DTD: 6,\n        ELEMENT: 7,\n        ENTITY: 8,\n        IGNORABLE_WHITESPACE: 9,\n        PROCESSING_INSTRUCTION: 10,\n        SKIPPED_ENTITY: 11\n      };\n      function Node(locator) {\n        if (!locator) {\n          this.columnNumber = -1;\n          this.lineNumber = -1;\n        } else {\n          this.columnNumber = locator.columnNumber;\n          this.lineNumber = locator.lineNumber;\n        }\n        this.parentNode = null;\n        this.nextSibling = null;\n        this.firstChild = null;\n      }\n      Node.prototype.visit = function (treeParser) {\n        throw new Error(\"Not Implemented\");\n      };\n      Node.prototype.revisit = function (treeParser) {\n        return;\n      };\n      Node.prototype.detach = function () {\n        if (this.parentNode !== null) {\n          this.parentNode.removeChild(this);\n          this.parentNode = null;\n        }\n      };\n      Object.defineProperty(Node.prototype, 'previousSibling', {\n        get: function get() {\n          var prev = null;\n          var next = this.parentNode.firstChild;\n          for (;;) {\n            if (this == next) {\n              return prev;\n            }\n            prev = next;\n            next = next.nextSibling;\n          }\n        }\n      });\n      function ParentNode(locator) {\n        Node.call(this, locator);\n        this.lastChild = null;\n        this._endLocator = null;\n      }\n      ParentNode.prototype = Object.create(Node.prototype);\n      ParentNode.prototype.insertBefore = function (child, sibling) {\n        if (!sibling) {\n          return this.appendChild(child);\n        }\n        child.detach();\n        child.parentNode = this;\n        if (this.firstChild == sibling) {\n          child.nextSibling = sibling;\n          this.firstChild = child;\n        } else {\n          var prev = this.firstChild;\n          var next = this.firstChild.nextSibling;\n          while (next != sibling) {\n            prev = next;\n            next = next.nextSibling;\n          }\n          prev.nextSibling = child;\n          child.nextSibling = next;\n        }\n        return child;\n      };\n      ParentNode.prototype.insertBetween = function (child, prev, next) {\n        if (!next) {\n          return this.appendChild(child);\n        }\n        child.detach();\n        child.parentNode = this;\n        child.nextSibling = next;\n        if (!prev) {\n          firstChild = child;\n        } else {\n          prev.nextSibling = child;\n        }\n        return child;\n      };\n      ParentNode.prototype.appendChild = function (child) {\n        child.detach();\n        child.parentNode = this;\n        if (!this.firstChild) {\n          this.firstChild = child;\n        } else {\n          this.lastChild.nextSibling = child;\n        }\n        this.lastChild = child;\n        return child;\n      };\n      ParentNode.prototype.appendChildren = function (parent) {\n        var child = parent.firstChild;\n        if (!child) {\n          return;\n        }\n        var another = parent;\n        if (!this.firstChild) {\n          this.firstChild = child;\n        } else {\n          this.lastChild.nextSibling = child;\n        }\n        this.lastChild = another.lastChild;\n        do {\n          child.parentNode = this;\n        } while (child = child.nextSibling);\n        another.firstChild = null;\n        another.lastChild = null;\n      };\n      ParentNode.prototype.removeChild = function (node) {\n        if (this.firstChild == node) {\n          this.firstChild = node.nextSibling;\n          if (this.lastChild == node) {\n            this.lastChild = null;\n          }\n        } else {\n          var prev = this.firstChild;\n          var next = this.firstChild.nextSibling;\n          while (next != node) {\n            prev = next;\n            next = next.nextSibling;\n          }\n          prev.nextSibling = node.nextSibling;\n          if (this.lastChild == node) {\n            this.lastChild = prev;\n          }\n        }\n        node.parentNode = null;\n        return node;\n      };\n      Object.defineProperty(ParentNode.prototype, 'endLocator', {\n        get: function get() {\n          return this._endLocator;\n        },\n        set: function set(endLocator) {\n          this._endLocator = {\n            lineNumber: endLocator.lineNumber,\n            columnNumber: endLocator.columnNumber\n          };\n        }\n      });\n      function Document(locator) {\n        ParentNode.call(this, locator);\n        this.nodeType = NodeType.DOCUMENT;\n      }\n      Document.prototype = Object.create(ParentNode.prototype);\n      Document.prototype.visit = function (treeParser) {\n        treeParser.startDocument(this);\n      };\n      Document.prototype.revisit = function (treeParser) {\n        treeParser.endDocument(this.endLocator);\n      };\n      function DocumentFragment() {\n        ParentNode.call(this, new Locator());\n        this.nodeType = NodeType.DOCUMENT_FRAGMENT;\n      }\n      DocumentFragment.prototype = Object.create(ParentNode.prototype);\n      DocumentFragment.prototype.visit = function (treeParser) {};\n      function Element(locator, uri, localName, qName, atts, prefixMappings) {\n        ParentNode.call(this, locator);\n        this.uri = uri;\n        this.localName = localName;\n        this.qName = qName;\n        this.attributes = atts;\n        this.prefixMappings = prefixMappings;\n        this.nodeType = NodeType.ELEMENT;\n      }\n      Element.prototype = Object.create(ParentNode.prototype);\n      Element.prototype.visit = function (treeParser) {\n        if (this.prefixMappings) {\n          for (var key in prefixMappings) {\n            var mapping = prefixMappings[key];\n            treeParser.startPrefixMapping(mapping.getPrefix(), mapping.getUri(), this);\n          }\n        }\n        treeParser.startElement(this.uri, this.localName, this.qName, this.attributes, this);\n      };\n      Element.prototype.revisit = function (treeParser) {\n        treeParser.endElement(this.uri, this.localName, this.qName, this.endLocator);\n        if (this.prefixMappings) {\n          for (var key in prefixMappings) {\n            var mapping = prefixMappings[key];\n            treeParser.endPrefixMapping(mapping.getPrefix(), this.endLocator);\n          }\n        }\n      };\n      function Characters(locator, data) {\n        Node.call(this, locator);\n        this.data = data;\n        this.nodeType = NodeType.CHARACTERS;\n      }\n      Characters.prototype = Object.create(Node.prototype);\n      Characters.prototype.visit = function (treeParser) {\n        treeParser.characters(this.data, 0, this.data.length, this);\n      };\n      function IgnorableWhitespace(locator, data) {\n        Node.call(this, locator);\n        this.data = data;\n        this.nodeType = NodeType.IGNORABLE_WHITESPACE;\n      }\n      IgnorableWhitespace.prototype = Object.create(Node.prototype);\n      IgnorableWhitespace.prototype.visit = function (treeParser) {\n        treeParser.ignorableWhitespace(this.data, 0, this.data.length, this);\n      };\n      function Comment(locator, data) {\n        Node.call(this, locator);\n        this.data = data;\n        this.nodeType = NodeType.COMMENT;\n      }\n      Comment.prototype = Object.create(Node.prototype);\n      Comment.prototype.visit = function (treeParser) {\n        treeParser.comment(this.data, 0, this.data.length, this);\n      };\n      function CDATA(locator) {\n        ParentNode.call(this, locator);\n        this.nodeType = NodeType.CDATA;\n      }\n      CDATA.prototype = Object.create(ParentNode.prototype);\n      CDATA.prototype.visit = function (treeParser) {\n        treeParser.startCDATA(this);\n      };\n      CDATA.prototype.revisit = function (treeParser) {\n        treeParser.endCDATA(this.endLocator);\n      };\n      function Entity(name) {\n        ParentNode.call(this);\n        this.name = name;\n        this.nodeType = NodeType.ENTITY;\n      }\n      Entity.prototype = Object.create(ParentNode.prototype);\n      Entity.prototype.visit = function (treeParser) {\n        treeParser.startEntity(this.name, this);\n      };\n      Entity.prototype.revisit = function (treeParser) {\n        treeParser.endEntity(this.name);\n      };\n      function SkippedEntity(name) {\n        Node.call(this);\n        this.name = name;\n        this.nodeType = NodeType.SKIPPED_ENTITY;\n      }\n      SkippedEntity.prototype = Object.create(Node.prototype);\n      SkippedEntity.prototype.visit = function (treeParser) {\n        treeParser.skippedEntity(this.name, this);\n      };\n      function ProcessingInstruction(target, data) {\n        Node.call(this);\n        this.target = target;\n        this.data = data;\n      }\n      ProcessingInstruction.prototype = Object.create(Node.prototype);\n      ProcessingInstruction.prototype.visit = function (treeParser) {\n        treeParser.processingInstruction(this.target, this.data, this);\n      };\n      ProcessingInstruction.prototype.getNodeType = function () {\n        return NodeType.PROCESSING_INSTRUCTION;\n      };\n      function DTD(name, publicIdentifier, systemIdentifier) {\n        ParentNode.call(this);\n        this.name = name;\n        this.publicIdentifier = publicIdentifier;\n        this.systemIdentifier = systemIdentifier;\n        this.nodeType = NodeType.DTD;\n      }\n      DTD.prototype = Object.create(ParentNode.prototype);\n      DTD.prototype.visit = function (treeParser) {\n        treeParser.startDTD(this.name, this.publicIdentifier, this.systemIdentifier, this);\n      };\n      DTD.prototype.revisit = function (treeParser) {\n        treeParser.endDTD();\n      };\n      exports.SAXTreeBuilder = SAXTreeBuilder;\n    }, {\n      \"../TreeBuilder\": 6,\n      \"util\": 20\n    }],\n    11: [function (_dereq_, module, exports) {\n      function TreeParser(contentHandler, lexicalHandler) {\n        this.contentHandler;\n        this.lexicalHandler;\n        this.locatorDelegate;\n        if (!contentHandler) {\n          throw new IllegalArgumentException(\"contentHandler was null.\");\n        }\n        this.contentHandler = contentHandler;\n        if (!lexicalHandler) {\n          this.lexicalHandler = new NullLexicalHandler();\n        } else {\n          this.lexicalHandler = lexicalHandler;\n        }\n      }\n      TreeParser.prototype.parse = function (node) {\n        this.contentHandler.documentLocator = this;\n        var current = node;\n        var next;\n        for (;;) {\n          current.visit(this);\n          if (next = current.firstChild) {\n            current = next;\n            continue;\n          }\n          for (;;) {\n            current.revisit(this);\n            if (current == node) {\n              return;\n            }\n            if (next = current.nextSibling) {\n              current = next;\n              break;\n            }\n            current = current.parentNode;\n          }\n        }\n      };\n      TreeParser.prototype.characters = function (ch, start, length, locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.characters(ch, start, length);\n      };\n      TreeParser.prototype.endDocument = function (locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.endDocument();\n      };\n      TreeParser.prototype.endElement = function (uri, localName, qName, locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.endElement(uri, localName, qName);\n      };\n      TreeParser.prototype.endPrefixMapping = function (prefix, locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.endPrefixMapping(prefix);\n      };\n      TreeParser.prototype.ignorableWhitespace = function (ch, start, length, locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.ignorableWhitespace(ch, start, length);\n      };\n      TreeParser.prototype.processingInstruction = function (target, data, locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.processingInstruction(target, data);\n      };\n      TreeParser.prototype.skippedEntity = function (name, locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.skippedEntity(name);\n      };\n      TreeParser.prototype.startDocument = function (locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.startDocument();\n      };\n      TreeParser.prototype.startElement = function (uri, localName, qName, atts, locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.startElement(uri, localName, qName, atts);\n      };\n      TreeParser.prototype.startPrefixMapping = function (prefix, uri, locator) {\n        this.locatorDelegate = locator;\n        this.contentHandler.startPrefixMapping(prefix, uri);\n      };\n      TreeParser.prototype.comment = function (ch, start, length, locator) {\n        this.locatorDelegate = locator;\n        this.lexicalHandler.comment(ch, start, length);\n      };\n      TreeParser.prototype.endCDATA = function (locator) {\n        this.locatorDelegate = locator;\n        this.lexicalHandler.endCDATA();\n      };\n      TreeParser.prototype.endDTD = function (locator) {\n        this.locatorDelegate = locator;\n        this.lexicalHandler.endDTD();\n      };\n      TreeParser.prototype.endEntity = function (name, locator) {\n        this.locatorDelegate = locator;\n        this.lexicalHandler.endEntity(name);\n      };\n      TreeParser.prototype.startCDATA = function (locator) {\n        this.locatorDelegate = locator;\n        this.lexicalHandler.startCDATA();\n      };\n      TreeParser.prototype.startDTD = function (name, publicId, systemId, locator) {\n        this.locatorDelegate = locator;\n        this.lexicalHandler.startDTD(name, publicId, systemId);\n      };\n      TreeParser.prototype.startEntity = function (name, locator) {\n        this.locatorDelegate = locator;\n        this.lexicalHandler.startEntity(name);\n      };\n      Object.defineProperty(TreeParser.prototype, 'columnNumber', {\n        get: function get() {\n          if (!this.locatorDelegate) return -1;else return this.locatorDelegate.columnNumber;\n        }\n      });\n      Object.defineProperty(TreeParser.prototype, 'lineNumber', {\n        get: function get() {\n          if (!this.locatorDelegate) return -1;else return this.locatorDelegate.lineNumber;\n        }\n      });\n      function NullLexicalHandler() {}\n      NullLexicalHandler.prototype.comment = function () {};\n      NullLexicalHandler.prototype.endCDATA = function () {};\n      NullLexicalHandler.prototype.endDTD = function () {};\n      NullLexicalHandler.prototype.endEntity = function () {};\n      NullLexicalHandler.prototype.startCDATA = function () {};\n      NullLexicalHandler.prototype.startDTD = function () {};\n      NullLexicalHandler.prototype.startEntity = function () {};\n      exports.TreeParser = TreeParser;\n    }, {}],\n    12: [function (_dereq_, module, exports) {\n      module.exports = {\n        \"Aacute;\": \"\\xC1\",\n        \"Aacute\": \"\\xC1\",\n        \"aacute;\": \"\\xE1\",\n        \"aacute\": \"\\xE1\",\n        \"Abreve;\": \"\\u0102\",\n        \"abreve;\": \"\\u0103\",\n        \"ac;\": \"\\u223E\",\n        \"acd;\": \"\\u223F\",\n        \"acE;\": \"\\u223E\\u0333\",\n        \"Acirc;\": \"\\xC2\",\n        \"Acirc\": \"\\xC2\",\n        \"acirc;\": \"\\xE2\",\n        \"acirc\": \"\\xE2\",\n        \"acute;\": \"\\xB4\",\n        \"acute\": \"\\xB4\",\n        \"Acy;\": \"\\u0410\",\n        \"acy;\": \"\\u0430\",\n        \"AElig;\": \"\\xC6\",\n        \"AElig\": \"\\xC6\",\n        \"aelig;\": \"\\xE6\",\n        \"aelig\": \"\\xE6\",\n        \"af;\": \"\\u2061\",\n        \"Afr;\": \"\\uD835\\uDD04\",\n        \"afr;\": \"\\uD835\\uDD1E\",\n        \"Agrave;\": \"\\xC0\",\n        \"Agrave\": \"\\xC0\",\n        \"agrave;\": \"\\xE0\",\n        \"agrave\": \"\\xE0\",\n        \"alefsym;\": \"\\u2135\",\n        \"aleph;\": \"\\u2135\",\n        \"Alpha;\": \"\\u0391\",\n        \"alpha;\": \"\\u03B1\",\n        \"Amacr;\": \"\\u0100\",\n        \"amacr;\": \"\\u0101\",\n        \"amalg;\": \"\\u2A3F\",\n        \"amp;\": \"&\",\n        \"amp\": \"&\",\n        \"AMP;\": \"&\",\n        \"AMP\": \"&\",\n        \"andand;\": \"\\u2A55\",\n        \"And;\": \"\\u2A53\",\n        \"and;\": \"\\u2227\",\n        \"andd;\": \"\\u2A5C\",\n        \"andslope;\": \"\\u2A58\",\n        \"andv;\": \"\\u2A5A\",\n        \"ang;\": \"\\u2220\",\n        \"ange;\": \"\\u29A4\",\n        \"angle;\": \"\\u2220\",\n        \"angmsdaa;\": \"\\u29A8\",\n        \"angmsdab;\": \"\\u29A9\",\n        \"angmsdac;\": \"\\u29AA\",\n        \"angmsdad;\": \"\\u29AB\",\n        \"angmsdae;\": \"\\u29AC\",\n        \"angmsdaf;\": \"\\u29AD\",\n        \"angmsdag;\": \"\\u29AE\",\n        \"angmsdah;\": \"\\u29AF\",\n        \"angmsd;\": \"\\u2221\",\n        \"angrt;\": \"\\u221F\",\n        \"angrtvb;\": \"\\u22BE\",\n        \"angrtvbd;\": \"\\u299D\",\n        \"angsph;\": \"\\u2222\",\n        \"angst;\": \"\\xC5\",\n        \"angzarr;\": \"\\u237C\",\n        \"Aogon;\": \"\\u0104\",\n        \"aogon;\": \"\\u0105\",\n        \"Aopf;\": \"\\uD835\\uDD38\",\n        \"aopf;\": \"\\uD835\\uDD52\",\n        \"apacir;\": \"\\u2A6F\",\n        \"ap;\": \"\\u2248\",\n        \"apE;\": \"\\u2A70\",\n        \"ape;\": \"\\u224A\",\n        \"apid;\": \"\\u224B\",\n        \"apos;\": \"'\",\n        \"ApplyFunction;\": \"\\u2061\",\n        \"approx;\": \"\\u2248\",\n        \"approxeq;\": \"\\u224A\",\n        \"Aring;\": \"\\xC5\",\n        \"Aring\": \"\\xC5\",\n        \"aring;\": \"\\xE5\",\n        \"aring\": \"\\xE5\",\n        \"Ascr;\": \"\\uD835\\uDC9C\",\n        \"ascr;\": \"\\uD835\\uDCB6\",\n        \"Assign;\": \"\\u2254\",\n        \"ast;\": \"*\",\n        \"asymp;\": \"\\u2248\",\n        \"asympeq;\": \"\\u224D\",\n        \"Atilde;\": \"\\xC3\",\n        \"Atilde\": \"\\xC3\",\n        \"atilde;\": \"\\xE3\",\n        \"atilde\": \"\\xE3\",\n        \"Auml;\": \"\\xC4\",\n        \"Auml\": \"\\xC4\",\n        \"auml;\": \"\\xE4\",\n        \"auml\": \"\\xE4\",\n        \"awconint;\": \"\\u2233\",\n        \"awint;\": \"\\u2A11\",\n        \"backcong;\": \"\\u224C\",\n        \"backepsilon;\": \"\\u03F6\",\n        \"backprime;\": \"\\u2035\",\n        \"backsim;\": \"\\u223D\",\n        \"backsimeq;\": \"\\u22CD\",\n        \"Backslash;\": \"\\u2216\",\n        \"Barv;\": \"\\u2AE7\",\n        \"barvee;\": \"\\u22BD\",\n        \"barwed;\": \"\\u2305\",\n        \"Barwed;\": \"\\u2306\",\n        \"barwedge;\": \"\\u2305\",\n        \"bbrk;\": \"\\u23B5\",\n        \"bbrktbrk;\": \"\\u23B6\",\n        \"bcong;\": \"\\u224C\",\n        \"Bcy;\": \"\\u0411\",\n        \"bcy;\": \"\\u0431\",\n        \"bdquo;\": \"\\u201E\",\n        \"becaus;\": \"\\u2235\",\n        \"because;\": \"\\u2235\",\n        \"Because;\": \"\\u2235\",\n        \"bemptyv;\": \"\\u29B0\",\n        \"bepsi;\": \"\\u03F6\",\n        \"bernou;\": \"\\u212C\",\n        \"Bernoullis;\": \"\\u212C\",\n        \"Beta;\": \"\\u0392\",\n        \"beta;\": \"\\u03B2\",\n        \"beth;\": \"\\u2136\",\n        \"between;\": \"\\u226C\",\n        \"Bfr;\": \"\\uD835\\uDD05\",\n        \"bfr;\": \"\\uD835\\uDD1F\",\n        \"bigcap;\": \"\\u22C2\",\n        \"bigcirc;\": \"\\u25EF\",\n        \"bigcup;\": \"\\u22C3\",\n        \"bigodot;\": \"\\u2A00\",\n        \"bigoplus;\": \"\\u2A01\",\n        \"bigotimes;\": \"\\u2A02\",\n        \"bigsqcup;\": \"\\u2A06\",\n        \"bigstar;\": \"\\u2605\",\n        \"bigtriangledown;\": \"\\u25BD\",\n        \"bigtriangleup;\": \"\\u25B3\",\n        \"biguplus;\": \"\\u2A04\",\n        \"bigvee;\": \"\\u22C1\",\n        \"bigwedge;\": \"\\u22C0\",\n        \"bkarow;\": \"\\u290D\",\n        \"blacklozenge;\": \"\\u29EB\",\n        \"blacksquare;\": \"\\u25AA\",\n        \"blacktriangle;\": \"\\u25B4\",\n        \"blacktriangledown;\": \"\\u25BE\",\n        \"blacktriangleleft;\": \"\\u25C2\",\n        \"blacktriangleright;\": \"\\u25B8\",\n        \"blank;\": \"\\u2423\",\n        \"blk12;\": \"\\u2592\",\n        \"blk14;\": \"\\u2591\",\n        \"blk34;\": \"\\u2593\",\n        \"block;\": \"\\u2588\",\n        \"bne;\": \"=\\u20E5\",\n        \"bnequiv;\": \"\\u2261\\u20E5\",\n        \"bNot;\": \"\\u2AED\",\n        \"bnot;\": \"\\u2310\",\n        \"Bopf;\": \"\\uD835\\uDD39\",\n        \"bopf;\": \"\\uD835\\uDD53\",\n        \"bot;\": \"\\u22A5\",\n        \"bottom;\": \"\\u22A5\",\n        \"bowtie;\": \"\\u22C8\",\n        \"boxbox;\": \"\\u29C9\",\n        \"boxdl;\": \"\\u2510\",\n        \"boxdL;\": \"\\u2555\",\n        \"boxDl;\": \"\\u2556\",\n        \"boxDL;\": \"\\u2557\",\n        \"boxdr;\": \"\\u250C\",\n        \"boxdR;\": \"\\u2552\",\n        \"boxDr;\": \"\\u2553\",\n        \"boxDR;\": \"\\u2554\",\n        \"boxh;\": \"\\u2500\",\n        \"boxH;\": \"\\u2550\",\n        \"boxhd;\": \"\\u252C\",\n        \"boxHd;\": \"\\u2564\",\n        \"boxhD;\": \"\\u2565\",\n        \"boxHD;\": \"\\u2566\",\n        \"boxhu;\": \"\\u2534\",\n        \"boxHu;\": \"\\u2567\",\n        \"boxhU;\": \"\\u2568\",\n        \"boxHU;\": \"\\u2569\",\n        \"boxminus;\": \"\\u229F\",\n        \"boxplus;\": \"\\u229E\",\n        \"boxtimes;\": \"\\u22A0\",\n        \"boxul;\": \"\\u2518\",\n        \"boxuL;\": \"\\u255B\",\n        \"boxUl;\": \"\\u255C\",\n        \"boxUL;\": \"\\u255D\",\n        \"boxur;\": \"\\u2514\",\n        \"boxuR;\": \"\\u2558\",\n        \"boxUr;\": \"\\u2559\",\n        \"boxUR;\": \"\\u255A\",\n        \"boxv;\": \"\\u2502\",\n        \"boxV;\": \"\\u2551\",\n        \"boxvh;\": \"\\u253C\",\n        \"boxvH;\": \"\\u256A\",\n        \"boxVh;\": \"\\u256B\",\n        \"boxVH;\": \"\\u256C\",\n        \"boxvl;\": \"\\u2524\",\n        \"boxvL;\": \"\\u2561\",\n        \"boxVl;\": \"\\u2562\",\n        \"boxVL;\": \"\\u2563\",\n        \"boxvr;\": \"\\u251C\",\n        \"boxvR;\": \"\\u255E\",\n        \"boxVr;\": \"\\u255F\",\n        \"boxVR;\": \"\\u2560\",\n        \"bprime;\": \"\\u2035\",\n        \"breve;\": \"\\u02D8\",\n        \"Breve;\": \"\\u02D8\",\n        \"brvbar;\": \"\\xA6\",\n        \"brvbar\": \"\\xA6\",\n        \"bscr;\": \"\\uD835\\uDCB7\",\n        \"Bscr;\": \"\\u212C\",\n        \"bsemi;\": \"\\u204F\",\n        \"bsim;\": \"\\u223D\",\n        \"bsime;\": \"\\u22CD\",\n        \"bsolb;\": \"\\u29C5\",\n        \"bsol;\": \"\\\\\",\n        \"bsolhsub;\": \"\\u27C8\",\n        \"bull;\": \"\\u2022\",\n        \"bullet;\": \"\\u2022\",\n        \"bump;\": \"\\u224E\",\n        \"bumpE;\": \"\\u2AAE\",\n        \"bumpe;\": \"\\u224F\",\n        \"Bumpeq;\": \"\\u224E\",\n        \"bumpeq;\": \"\\u224F\",\n        \"Cacute;\": \"\\u0106\",\n        \"cacute;\": \"\\u0107\",\n        \"capand;\": \"\\u2A44\",\n        \"capbrcup;\": \"\\u2A49\",\n        \"capcap;\": \"\\u2A4B\",\n        \"cap;\": \"\\u2229\",\n        \"Cap;\": \"\\u22D2\",\n        \"capcup;\": \"\\u2A47\",\n        \"capdot;\": \"\\u2A40\",\n        \"CapitalDifferentialD;\": \"\\u2145\",\n        \"caps;\": \"\\u2229\\uFE00\",\n        \"caret;\": \"\\u2041\",\n        \"caron;\": \"\\u02C7\",\n        \"Cayleys;\": \"\\u212D\",\n        \"ccaps;\": \"\\u2A4D\",\n        \"Ccaron;\": \"\\u010C\",\n        \"ccaron;\": \"\\u010D\",\n        \"Ccedil;\": \"\\xC7\",\n        \"Ccedil\": \"\\xC7\",\n        \"ccedil;\": \"\\xE7\",\n        \"ccedil\": \"\\xE7\",\n        \"Ccirc;\": \"\\u0108\",\n        \"ccirc;\": \"\\u0109\",\n        \"Cconint;\": \"\\u2230\",\n        \"ccups;\": \"\\u2A4C\",\n        \"ccupssm;\": \"\\u2A50\",\n        \"Cdot;\": \"\\u010A\",\n        \"cdot;\": \"\\u010B\",\n        \"cedil;\": \"\\xB8\",\n        \"cedil\": \"\\xB8\",\n        \"Cedilla;\": \"\\xB8\",\n        \"cemptyv;\": \"\\u29B2\",\n        \"cent;\": \"\\xA2\",\n        \"cent\": \"\\xA2\",\n        \"centerdot;\": \"\\xB7\",\n        \"CenterDot;\": \"\\xB7\",\n        \"cfr;\": \"\\uD835\\uDD20\",\n        \"Cfr;\": \"\\u212D\",\n        \"CHcy;\": \"\\u0427\",\n        \"chcy;\": \"\\u0447\",\n        \"check;\": \"\\u2713\",\n        \"checkmark;\": \"\\u2713\",\n        \"Chi;\": \"\\u03A7\",\n        \"chi;\": \"\\u03C7\",\n        \"circ;\": \"\\u02C6\",\n        \"circeq;\": \"\\u2257\",\n        \"circlearrowleft;\": \"\\u21BA\",\n        \"circlearrowright;\": \"\\u21BB\",\n        \"circledast;\": \"\\u229B\",\n        \"circledcirc;\": \"\\u229A\",\n        \"circleddash;\": \"\\u229D\",\n        \"CircleDot;\": \"\\u2299\",\n        \"circledR;\": \"\\xAE\",\n        \"circledS;\": \"\\u24C8\",\n        \"CircleMinus;\": \"\\u2296\",\n        \"CirclePlus;\": \"\\u2295\",\n        \"CircleTimes;\": \"\\u2297\",\n        \"cir;\": \"\\u25CB\",\n        \"cirE;\": \"\\u29C3\",\n        \"cire;\": \"\\u2257\",\n        \"cirfnint;\": \"\\u2A10\",\n        \"cirmid;\": \"\\u2AEF\",\n        \"cirscir;\": \"\\u29C2\",\n        \"ClockwiseContourIntegral;\": \"\\u2232\",\n        \"CloseCurlyDoubleQuote;\": \"\\u201D\",\n        \"CloseCurlyQuote;\": \"\\u2019\",\n        \"clubs;\": \"\\u2663\",\n        \"clubsuit;\": \"\\u2663\",\n        \"colon;\": \":\",\n        \"Colon;\": \"\\u2237\",\n        \"Colone;\": \"\\u2A74\",\n        \"colone;\": \"\\u2254\",\n        \"coloneq;\": \"\\u2254\",\n        \"comma;\": \",\",\n        \"commat;\": \"@\",\n        \"comp;\": \"\\u2201\",\n        \"compfn;\": \"\\u2218\",\n        \"complement;\": \"\\u2201\",\n        \"complexes;\": \"\\u2102\",\n        \"cong;\": \"\\u2245\",\n        \"congdot;\": \"\\u2A6D\",\n        \"Congruent;\": \"\\u2261\",\n        \"conint;\": \"\\u222E\",\n        \"Conint;\": \"\\u222F\",\n        \"ContourIntegral;\": \"\\u222E\",\n        \"copf;\": \"\\uD835\\uDD54\",\n        \"Copf;\": \"\\u2102\",\n        \"coprod;\": \"\\u2210\",\n        \"Coproduct;\": \"\\u2210\",\n        \"copy;\": \"\\xA9\",\n        \"copy\": \"\\xA9\",\n        \"COPY;\": \"\\xA9\",\n        \"COPY\": \"\\xA9\",\n        \"copysr;\": \"\\u2117\",\n        \"CounterClockwiseContourIntegral;\": \"\\u2233\",\n        \"crarr;\": \"\\u21B5\",\n        \"cross;\": \"\\u2717\",\n        \"Cross;\": \"\\u2A2F\",\n        \"Cscr;\": \"\\uD835\\uDC9E\",\n        \"cscr;\": \"\\uD835\\uDCB8\",\n        \"csub;\": \"\\u2ACF\",\n        \"csube;\": \"\\u2AD1\",\n        \"csup;\": \"\\u2AD0\",\n        \"csupe;\": \"\\u2AD2\",\n        \"ctdot;\": \"\\u22EF\",\n        \"cudarrl;\": \"\\u2938\",\n        \"cudarrr;\": \"\\u2935\",\n        \"cuepr;\": \"\\u22DE\",\n        \"cuesc;\": \"\\u22DF\",\n        \"cularr;\": \"\\u21B6\",\n        \"cularrp;\": \"\\u293D\",\n        \"cupbrcap;\": \"\\u2A48\",\n        \"cupcap;\": \"\\u2A46\",\n        \"CupCap;\": \"\\u224D\",\n        \"cup;\": \"\\u222A\",\n        \"Cup;\": \"\\u22D3\",\n        \"cupcup;\": \"\\u2A4A\",\n        \"cupdot;\": \"\\u228D\",\n        \"cupor;\": \"\\u2A45\",\n        \"cups;\": \"\\u222A\\uFE00\",\n        \"curarr;\": \"\\u21B7\",\n        \"curarrm;\": \"\\u293C\",\n        \"curlyeqprec;\": \"\\u22DE\",\n        \"curlyeqsucc;\": \"\\u22DF\",\n        \"curlyvee;\": \"\\u22CE\",\n        \"curlywedge;\": \"\\u22CF\",\n        \"curren;\": \"\\xA4\",\n        \"curren\": \"\\xA4\",\n        \"curvearrowleft;\": \"\\u21B6\",\n        \"curvearrowright;\": \"\\u21B7\",\n        \"cuvee;\": \"\\u22CE\",\n        \"cuwed;\": \"\\u22CF\",\n        \"cwconint;\": \"\\u2232\",\n        \"cwint;\": \"\\u2231\",\n        \"cylcty;\": \"\\u232D\",\n        \"dagger;\": \"\\u2020\",\n        \"Dagger;\": \"\\u2021\",\n        \"daleth;\": \"\\u2138\",\n        \"darr;\": \"\\u2193\",\n        \"Darr;\": \"\\u21A1\",\n        \"dArr;\": \"\\u21D3\",\n        \"dash;\": \"\\u2010\",\n        \"Dashv;\": \"\\u2AE4\",\n        \"dashv;\": \"\\u22A3\",\n        \"dbkarow;\": \"\\u290F\",\n        \"dblac;\": \"\\u02DD\",\n        \"Dcaron;\": \"\\u010E\",\n        \"dcaron;\": \"\\u010F\",\n        \"Dcy;\": \"\\u0414\",\n        \"dcy;\": \"\\u0434\",\n        \"ddagger;\": \"\\u2021\",\n        \"ddarr;\": \"\\u21CA\",\n        \"DD;\": \"\\u2145\",\n        \"dd;\": \"\\u2146\",\n        \"DDotrahd;\": \"\\u2911\",\n        \"ddotseq;\": \"\\u2A77\",\n        \"deg;\": \"\\xB0\",\n        \"deg\": \"\\xB0\",\n        \"Del;\": \"\\u2207\",\n        \"Delta;\": \"\\u0394\",\n        \"delta;\": \"\\u03B4\",\n        \"demptyv;\": \"\\u29B1\",\n        \"dfisht;\": \"\\u297F\",\n        \"Dfr;\": \"\\uD835\\uDD07\",\n        \"dfr;\": \"\\uD835\\uDD21\",\n        \"dHar;\": \"\\u2965\",\n        \"dharl;\": \"\\u21C3\",\n        \"dharr;\": \"\\u21C2\",\n        \"DiacriticalAcute;\": \"\\xB4\",\n        \"DiacriticalDot;\": \"\\u02D9\",\n        \"DiacriticalDoubleAcute;\": \"\\u02DD\",\n        \"DiacriticalGrave;\": \"`\",\n        \"DiacriticalTilde;\": \"\\u02DC\",\n        \"diam;\": \"\\u22C4\",\n        \"diamond;\": \"\\u22C4\",\n        \"Diamond;\": \"\\u22C4\",\n        \"diamondsuit;\": \"\\u2666\",\n        \"diams;\": \"\\u2666\",\n        \"die;\": \"\\xA8\",\n        \"DifferentialD;\": \"\\u2146\",\n        \"digamma;\": \"\\u03DD\",\n        \"disin;\": \"\\u22F2\",\n        \"div;\": \"\\xF7\",\n        \"divide;\": \"\\xF7\",\n        \"divide\": \"\\xF7\",\n        \"divideontimes;\": \"\\u22C7\",\n        \"divonx;\": \"\\u22C7\",\n        \"DJcy;\": \"\\u0402\",\n        \"djcy;\": \"\\u0452\",\n        \"dlcorn;\": \"\\u231E\",\n        \"dlcrop;\": \"\\u230D\",\n        \"dollar;\": \"$\",\n        \"Dopf;\": \"\\uD835\\uDD3B\",\n        \"dopf;\": \"\\uD835\\uDD55\",\n        \"Dot;\": \"\\xA8\",\n        \"dot;\": \"\\u02D9\",\n        \"DotDot;\": \"\\u20DC\",\n        \"doteq;\": \"\\u2250\",\n        \"doteqdot;\": \"\\u2251\",\n        \"DotEqual;\": \"\\u2250\",\n        \"dotminus;\": \"\\u2238\",\n        \"dotplus;\": \"\\u2214\",\n        \"dotsquare;\": \"\\u22A1\",\n        \"doublebarwedge;\": \"\\u2306\",\n        \"DoubleContourIntegral;\": \"\\u222F\",\n        \"DoubleDot;\": \"\\xA8\",\n        \"DoubleDownArrow;\": \"\\u21D3\",\n        \"DoubleLeftArrow;\": \"\\u21D0\",\n        \"DoubleLeftRightArrow;\": \"\\u21D4\",\n        \"DoubleLeftTee;\": \"\\u2AE4\",\n        \"DoubleLongLeftArrow;\": \"\\u27F8\",\n        \"DoubleLongLeftRightArrow;\": \"\\u27FA\",\n        \"DoubleLongRightArrow;\": \"\\u27F9\",\n        \"DoubleRightArrow;\": \"\\u21D2\",\n        \"DoubleRightTee;\": \"\\u22A8\",\n        \"DoubleUpArrow;\": \"\\u21D1\",\n        \"DoubleUpDownArrow;\": \"\\u21D5\",\n        \"DoubleVerticalBar;\": \"\\u2225\",\n        \"DownArrowBar;\": \"\\u2913\",\n        \"downarrow;\": \"\\u2193\",\n        \"DownArrow;\": \"\\u2193\",\n        \"Downarrow;\": \"\\u21D3\",\n        \"DownArrowUpArrow;\": \"\\u21F5\",\n        \"DownBreve;\": \"\\u0311\",\n        \"downdownarrows;\": \"\\u21CA\",\n        \"downharpoonleft;\": \"\\u21C3\",\n        \"downharpoonright;\": \"\\u21C2\",\n        \"DownLeftRightVector;\": \"\\u2950\",\n        \"DownLeftTeeVector;\": \"\\u295E\",\n        \"DownLeftVectorBar;\": \"\\u2956\",\n        \"DownLeftVector;\": \"\\u21BD\",\n        \"DownRightTeeVector;\": \"\\u295F\",\n        \"DownRightVectorBar;\": \"\\u2957\",\n        \"DownRightVector;\": \"\\u21C1\",\n        \"DownTeeArrow;\": \"\\u21A7\",\n        \"DownTee;\": \"\\u22A4\",\n        \"drbkarow;\": \"\\u2910\",\n        \"drcorn;\": \"\\u231F\",\n        \"drcrop;\": \"\\u230C\",\n        \"Dscr;\": \"\\uD835\\uDC9F\",\n        \"dscr;\": \"\\uD835\\uDCB9\",\n        \"DScy;\": \"\\u0405\",\n        \"dscy;\": \"\\u0455\",\n        \"dsol;\": \"\\u29F6\",\n        \"Dstrok;\": \"\\u0110\",\n        \"dstrok;\": \"\\u0111\",\n        \"dtdot;\": \"\\u22F1\",\n        \"dtri;\": \"\\u25BF\",\n        \"dtrif;\": \"\\u25BE\",\n        \"duarr;\": \"\\u21F5\",\n        \"duhar;\": \"\\u296F\",\n        \"dwangle;\": \"\\u29A6\",\n        \"DZcy;\": \"\\u040F\",\n        \"dzcy;\": \"\\u045F\",\n        \"dzigrarr;\": \"\\u27FF\",\n        \"Eacute;\": \"\\xC9\",\n        \"Eacute\": \"\\xC9\",\n        \"eacute;\": \"\\xE9\",\n        \"eacute\": \"\\xE9\",\n        \"easter;\": \"\\u2A6E\",\n        \"Ecaron;\": \"\\u011A\",\n        \"ecaron;\": \"\\u011B\",\n        \"Ecirc;\": \"\\xCA\",\n        \"Ecirc\": \"\\xCA\",\n        \"ecirc;\": \"\\xEA\",\n        \"ecirc\": \"\\xEA\",\n        \"ecir;\": \"\\u2256\",\n        \"ecolon;\": \"\\u2255\",\n        \"Ecy;\": \"\\u042D\",\n        \"ecy;\": \"\\u044D\",\n        \"eDDot;\": \"\\u2A77\",\n        \"Edot;\": \"\\u0116\",\n        \"edot;\": \"\\u0117\",\n        \"eDot;\": \"\\u2251\",\n        \"ee;\": \"\\u2147\",\n        \"efDot;\": \"\\u2252\",\n        \"Efr;\": \"\\uD835\\uDD08\",\n        \"efr;\": \"\\uD835\\uDD22\",\n        \"eg;\": \"\\u2A9A\",\n        \"Egrave;\": \"\\xC8\",\n        \"Egrave\": \"\\xC8\",\n        \"egrave;\": \"\\xE8\",\n        \"egrave\": \"\\xE8\",\n        \"egs;\": \"\\u2A96\",\n        \"egsdot;\": \"\\u2A98\",\n        \"el;\": \"\\u2A99\",\n        \"Element;\": \"\\u2208\",\n        \"elinters;\": \"\\u23E7\",\n        \"ell;\": \"\\u2113\",\n        \"els;\": \"\\u2A95\",\n        \"elsdot;\": \"\\u2A97\",\n        \"Emacr;\": \"\\u0112\",\n        \"emacr;\": \"\\u0113\",\n        \"empty;\": \"\\u2205\",\n        \"emptyset;\": \"\\u2205\",\n        \"EmptySmallSquare;\": \"\\u25FB\",\n        \"emptyv;\": \"\\u2205\",\n        \"EmptyVerySmallSquare;\": \"\\u25AB\",\n        \"emsp13;\": \"\\u2004\",\n        \"emsp14;\": \"\\u2005\",\n        \"emsp;\": \"\\u2003\",\n        \"ENG;\": \"\\u014A\",\n        \"eng;\": \"\\u014B\",\n        \"ensp;\": \"\\u2002\",\n        \"Eogon;\": \"\\u0118\",\n        \"eogon;\": \"\\u0119\",\n        \"Eopf;\": \"\\uD835\\uDD3C\",\n        \"eopf;\": \"\\uD835\\uDD56\",\n        \"epar;\": \"\\u22D5\",\n        \"eparsl;\": \"\\u29E3\",\n        \"eplus;\": \"\\u2A71\",\n        \"epsi;\": \"\\u03B5\",\n        \"Epsilon;\": \"\\u0395\",\n        \"epsilon;\": \"\\u03B5\",\n        \"epsiv;\": \"\\u03F5\",\n        \"eqcirc;\": \"\\u2256\",\n        \"eqcolon;\": \"\\u2255\",\n        \"eqsim;\": \"\\u2242\",\n        \"eqslantgtr;\": \"\\u2A96\",\n        \"eqslantless;\": \"\\u2A95\",\n        \"Equal;\": \"\\u2A75\",\n        \"equals;\": \"=\",\n        \"EqualTilde;\": \"\\u2242\",\n        \"equest;\": \"\\u225F\",\n        \"Equilibrium;\": \"\\u21CC\",\n        \"equiv;\": \"\\u2261\",\n        \"equivDD;\": \"\\u2A78\",\n        \"eqvparsl;\": \"\\u29E5\",\n        \"erarr;\": \"\\u2971\",\n        \"erDot;\": \"\\u2253\",\n        \"escr;\": \"\\u212F\",\n        \"Escr;\": \"\\u2130\",\n        \"esdot;\": \"\\u2250\",\n        \"Esim;\": \"\\u2A73\",\n        \"esim;\": \"\\u2242\",\n        \"Eta;\": \"\\u0397\",\n        \"eta;\": \"\\u03B7\",\n        \"ETH;\": \"\\xD0\",\n        \"ETH\": \"\\xD0\",\n        \"eth;\": \"\\xF0\",\n        \"eth\": \"\\xF0\",\n        \"Euml;\": \"\\xCB\",\n        \"Euml\": \"\\xCB\",\n        \"euml;\": \"\\xEB\",\n        \"euml\": \"\\xEB\",\n        \"euro;\": \"\\u20AC\",\n        \"excl;\": \"!\",\n        \"exist;\": \"\\u2203\",\n        \"Exists;\": \"\\u2203\",\n        \"expectation;\": \"\\u2130\",\n        \"exponentiale;\": \"\\u2147\",\n        \"ExponentialE;\": \"\\u2147\",\n        \"fallingdotseq;\": \"\\u2252\",\n        \"Fcy;\": \"\\u0424\",\n        \"fcy;\": \"\\u0444\",\n        \"female;\": \"\\u2640\",\n        \"ffilig;\": \"\\uFB03\",\n        \"fflig;\": \"\\uFB00\",\n        \"ffllig;\": \"\\uFB04\",\n        \"Ffr;\": \"\\uD835\\uDD09\",\n        \"ffr;\": \"\\uD835\\uDD23\",\n        \"filig;\": \"\\uFB01\",\n        \"FilledSmallSquare;\": \"\\u25FC\",\n        \"FilledVerySmallSquare;\": \"\\u25AA\",\n        \"fjlig;\": \"fj\",\n        \"flat;\": \"\\u266D\",\n        \"fllig;\": \"\\uFB02\",\n        \"fltns;\": \"\\u25B1\",\n        \"fnof;\": \"\\u0192\",\n        \"Fopf;\": \"\\uD835\\uDD3D\",\n        \"fopf;\": \"\\uD835\\uDD57\",\n        \"forall;\": \"\\u2200\",\n        \"ForAll;\": \"\\u2200\",\n        \"fork;\": \"\\u22D4\",\n        \"forkv;\": \"\\u2AD9\",\n        \"Fouriertrf;\": \"\\u2131\",\n        \"fpartint;\": \"\\u2A0D\",\n        \"frac12;\": \"\\xBD\",\n        \"frac12\": \"\\xBD\",\n        \"frac13;\": \"\\u2153\",\n        \"frac14;\": \"\\xBC\",\n        \"frac14\": \"\\xBC\",\n        \"frac15;\": \"\\u2155\",\n        \"frac16;\": \"\\u2159\",\n        \"frac18;\": \"\\u215B\",\n        \"frac23;\": \"\\u2154\",\n        \"frac25;\": \"\\u2156\",\n        \"frac34;\": \"\\xBE\",\n        \"frac34\": \"\\xBE\",\n        \"frac35;\": \"\\u2157\",\n        \"frac38;\": \"\\u215C\",\n        \"frac45;\": \"\\u2158\",\n        \"frac56;\": \"\\u215A\",\n        \"frac58;\": \"\\u215D\",\n        \"frac78;\": \"\\u215E\",\n        \"frasl;\": \"\\u2044\",\n        \"frown;\": \"\\u2322\",\n        \"fscr;\": \"\\uD835\\uDCBB\",\n        \"Fscr;\": \"\\u2131\",\n        \"gacute;\": \"\\u01F5\",\n        \"Gamma;\": \"\\u0393\",\n        \"gamma;\": \"\\u03B3\",\n        \"Gammad;\": \"\\u03DC\",\n        \"gammad;\": \"\\u03DD\",\n        \"gap;\": \"\\u2A86\",\n        \"Gbreve;\": \"\\u011E\",\n        \"gbreve;\": \"\\u011F\",\n        \"Gcedil;\": \"\\u0122\",\n        \"Gcirc;\": \"\\u011C\",\n        \"gcirc;\": \"\\u011D\",\n        \"Gcy;\": \"\\u0413\",\n        \"gcy;\": \"\\u0433\",\n        \"Gdot;\": \"\\u0120\",\n        \"gdot;\": \"\\u0121\",\n        \"ge;\": \"\\u2265\",\n        \"gE;\": \"\\u2267\",\n        \"gEl;\": \"\\u2A8C\",\n        \"gel;\": \"\\u22DB\",\n        \"geq;\": \"\\u2265\",\n        \"geqq;\": \"\\u2267\",\n        \"geqslant;\": \"\\u2A7E\",\n        \"gescc;\": \"\\u2AA9\",\n        \"ges;\": \"\\u2A7E\",\n        \"gesdot;\": \"\\u2A80\",\n        \"gesdoto;\": \"\\u2A82\",\n        \"gesdotol;\": \"\\u2A84\",\n        \"gesl;\": \"\\u22DB\\uFE00\",\n        \"gesles;\": \"\\u2A94\",\n        \"Gfr;\": \"\\uD835\\uDD0A\",\n        \"gfr;\": \"\\uD835\\uDD24\",\n        \"gg;\": \"\\u226B\",\n        \"Gg;\": \"\\u22D9\",\n        \"ggg;\": \"\\u22D9\",\n        \"gimel;\": \"\\u2137\",\n        \"GJcy;\": \"\\u0403\",\n        \"gjcy;\": \"\\u0453\",\n        \"gla;\": \"\\u2AA5\",\n        \"gl;\": \"\\u2277\",\n        \"glE;\": \"\\u2A92\",\n        \"glj;\": \"\\u2AA4\",\n        \"gnap;\": \"\\u2A8A\",\n        \"gnapprox;\": \"\\u2A8A\",\n        \"gne;\": \"\\u2A88\",\n        \"gnE;\": \"\\u2269\",\n        \"gneq;\": \"\\u2A88\",\n        \"gneqq;\": \"\\u2269\",\n        \"gnsim;\": \"\\u22E7\",\n        \"Gopf;\": \"\\uD835\\uDD3E\",\n        \"gopf;\": \"\\uD835\\uDD58\",\n        \"grave;\": \"`\",\n        \"GreaterEqual;\": \"\\u2265\",\n        \"GreaterEqualLess;\": \"\\u22DB\",\n        \"GreaterFullEqual;\": \"\\u2267\",\n        \"GreaterGreater;\": \"\\u2AA2\",\n        \"GreaterLess;\": \"\\u2277\",\n        \"GreaterSlantEqual;\": \"\\u2A7E\",\n        \"GreaterTilde;\": \"\\u2273\",\n        \"Gscr;\": \"\\uD835\\uDCA2\",\n        \"gscr;\": \"\\u210A\",\n        \"gsim;\": \"\\u2273\",\n        \"gsime;\": \"\\u2A8E\",\n        \"gsiml;\": \"\\u2A90\",\n        \"gtcc;\": \"\\u2AA7\",\n        \"gtcir;\": \"\\u2A7A\",\n        \"gt;\": \">\",\n        \"gt\": \">\",\n        \"GT;\": \">\",\n        \"GT\": \">\",\n        \"Gt;\": \"\\u226B\",\n        \"gtdot;\": \"\\u22D7\",\n        \"gtlPar;\": \"\\u2995\",\n        \"gtquest;\": \"\\u2A7C\",\n        \"gtrapprox;\": \"\\u2A86\",\n        \"gtrarr;\": \"\\u2978\",\n        \"gtrdot;\": \"\\u22D7\",\n        \"gtreqless;\": \"\\u22DB\",\n        \"gtreqqless;\": \"\\u2A8C\",\n        \"gtrless;\": \"\\u2277\",\n        \"gtrsim;\": \"\\u2273\",\n        \"gvertneqq;\": \"\\u2269\\uFE00\",\n        \"gvnE;\": \"\\u2269\\uFE00\",\n        \"Hacek;\": \"\\u02C7\",\n        \"hairsp;\": \"\\u200A\",\n        \"half;\": \"\\xBD\",\n        \"hamilt;\": \"\\u210B\",\n        \"HARDcy;\": \"\\u042A\",\n        \"hardcy;\": \"\\u044A\",\n        \"harrcir;\": \"\\u2948\",\n        \"harr;\": \"\\u2194\",\n        \"hArr;\": \"\\u21D4\",\n        \"harrw;\": \"\\u21AD\",\n        \"Hat;\": \"^\",\n        \"hbar;\": \"\\u210F\",\n        \"Hcirc;\": \"\\u0124\",\n        \"hcirc;\": \"\\u0125\",\n        \"hearts;\": \"\\u2665\",\n        \"heartsuit;\": \"\\u2665\",\n        \"hellip;\": \"\\u2026\",\n        \"hercon;\": \"\\u22B9\",\n        \"hfr;\": \"\\uD835\\uDD25\",\n        \"Hfr;\": \"\\u210C\",\n        \"HilbertSpace;\": \"\\u210B\",\n        \"hksearow;\": \"\\u2925\",\n        \"hkswarow;\": \"\\u2926\",\n        \"hoarr;\": \"\\u21FF\",\n        \"homtht;\": \"\\u223B\",\n        \"hookleftarrow;\": \"\\u21A9\",\n        \"hookrightarrow;\": \"\\u21AA\",\n        \"hopf;\": \"\\uD835\\uDD59\",\n        \"Hopf;\": \"\\u210D\",\n        \"horbar;\": \"\\u2015\",\n        \"HorizontalLine;\": \"\\u2500\",\n        \"hscr;\": \"\\uD835\\uDCBD\",\n        \"Hscr;\": \"\\u210B\",\n        \"hslash;\": \"\\u210F\",\n        \"Hstrok;\": \"\\u0126\",\n        \"hstrok;\": \"\\u0127\",\n        \"HumpDownHump;\": \"\\u224E\",\n        \"HumpEqual;\": \"\\u224F\",\n        \"hybull;\": \"\\u2043\",\n        \"hyphen;\": \"\\u2010\",\n        \"Iacute;\": \"\\xCD\",\n        \"Iacute\": \"\\xCD\",\n        \"iacute;\": \"\\xED\",\n        \"iacute\": \"\\xED\",\n        \"ic;\": \"\\u2063\",\n        \"Icirc;\": \"\\xCE\",\n        \"Icirc\": \"\\xCE\",\n        \"icirc;\": \"\\xEE\",\n        \"icirc\": \"\\xEE\",\n        \"Icy;\": \"\\u0418\",\n        \"icy;\": \"\\u0438\",\n        \"Idot;\": \"\\u0130\",\n        \"IEcy;\": \"\\u0415\",\n        \"iecy;\": \"\\u0435\",\n        \"iexcl;\": \"\\xA1\",\n        \"iexcl\": \"\\xA1\",\n        \"iff;\": \"\\u21D4\",\n        \"ifr;\": \"\\uD835\\uDD26\",\n        \"Ifr;\": \"\\u2111\",\n        \"Igrave;\": \"\\xCC\",\n        \"Igrave\": \"\\xCC\",\n        \"igrave;\": \"\\xEC\",\n        \"igrave\": \"\\xEC\",\n        \"ii;\": \"\\u2148\",\n        \"iiiint;\": \"\\u2A0C\",\n        \"iiint;\": \"\\u222D\",\n        \"iinfin;\": \"\\u29DC\",\n        \"iiota;\": \"\\u2129\",\n        \"IJlig;\": \"\\u0132\",\n        \"ijlig;\": \"\\u0133\",\n        \"Imacr;\": \"\\u012A\",\n        \"imacr;\": \"\\u012B\",\n        \"image;\": \"\\u2111\",\n        \"ImaginaryI;\": \"\\u2148\",\n        \"imagline;\": \"\\u2110\",\n        \"imagpart;\": \"\\u2111\",\n        \"imath;\": \"\\u0131\",\n        \"Im;\": \"\\u2111\",\n        \"imof;\": \"\\u22B7\",\n        \"imped;\": \"\\u01B5\",\n        \"Implies;\": \"\\u21D2\",\n        \"incare;\": \"\\u2105\",\n        \"in;\": \"\\u2208\",\n        \"infin;\": \"\\u221E\",\n        \"infintie;\": \"\\u29DD\",\n        \"inodot;\": \"\\u0131\",\n        \"intcal;\": \"\\u22BA\",\n        \"int;\": \"\\u222B\",\n        \"Int;\": \"\\u222C\",\n        \"integers;\": \"\\u2124\",\n        \"Integral;\": \"\\u222B\",\n        \"intercal;\": \"\\u22BA\",\n        \"Intersection;\": \"\\u22C2\",\n        \"intlarhk;\": \"\\u2A17\",\n        \"intprod;\": \"\\u2A3C\",\n        \"InvisibleComma;\": \"\\u2063\",\n        \"InvisibleTimes;\": \"\\u2062\",\n        \"IOcy;\": \"\\u0401\",\n        \"iocy;\": \"\\u0451\",\n        \"Iogon;\": \"\\u012E\",\n        \"iogon;\": \"\\u012F\",\n        \"Iopf;\": \"\\uD835\\uDD40\",\n        \"iopf;\": \"\\uD835\\uDD5A\",\n        \"Iota;\": \"\\u0399\",\n        \"iota;\": \"\\u03B9\",\n        \"iprod;\": \"\\u2A3C\",\n        \"iquest;\": \"\\xBF\",\n        \"iquest\": \"\\xBF\",\n        \"iscr;\": \"\\uD835\\uDCBE\",\n        \"Iscr;\": \"\\u2110\",\n        \"isin;\": \"\\u2208\",\n        \"isindot;\": \"\\u22F5\",\n        \"isinE;\": \"\\u22F9\",\n        \"isins;\": \"\\u22F4\",\n        \"isinsv;\": \"\\u22F3\",\n        \"isinv;\": \"\\u2208\",\n        \"it;\": \"\\u2062\",\n        \"Itilde;\": \"\\u0128\",\n        \"itilde;\": \"\\u0129\",\n        \"Iukcy;\": \"\\u0406\",\n        \"iukcy;\": \"\\u0456\",\n        \"Iuml;\": \"\\xCF\",\n        \"Iuml\": \"\\xCF\",\n        \"iuml;\": \"\\xEF\",\n        \"iuml\": \"\\xEF\",\n        \"Jcirc;\": \"\\u0134\",\n        \"jcirc;\": \"\\u0135\",\n        \"Jcy;\": \"\\u0419\",\n        \"jcy;\": \"\\u0439\",\n        \"Jfr;\": \"\\uD835\\uDD0D\",\n        \"jfr;\": \"\\uD835\\uDD27\",\n        \"jmath;\": \"\\u0237\",\n        \"Jopf;\": \"\\uD835\\uDD41\",\n        \"jopf;\": \"\\uD835\\uDD5B\",\n        \"Jscr;\": \"\\uD835\\uDCA5\",\n        \"jscr;\": \"\\uD835\\uDCBF\",\n        \"Jsercy;\": \"\\u0408\",\n        \"jsercy;\": \"\\u0458\",\n        \"Jukcy;\": \"\\u0404\",\n        \"jukcy;\": \"\\u0454\",\n        \"Kappa;\": \"\\u039A\",\n        \"kappa;\": \"\\u03BA\",\n        \"kappav;\": \"\\u03F0\",\n        \"Kcedil;\": \"\\u0136\",\n        \"kcedil;\": \"\\u0137\",\n        \"Kcy;\": \"\\u041A\",\n        \"kcy;\": \"\\u043A\",\n        \"Kfr;\": \"\\uD835\\uDD0E\",\n        \"kfr;\": \"\\uD835\\uDD28\",\n        \"kgreen;\": \"\\u0138\",\n        \"KHcy;\": \"\\u0425\",\n        \"khcy;\": \"\\u0445\",\n        \"KJcy;\": \"\\u040C\",\n        \"kjcy;\": \"\\u045C\",\n        \"Kopf;\": \"\\uD835\\uDD42\",\n        \"kopf;\": \"\\uD835\\uDD5C\",\n        \"Kscr;\": \"\\uD835\\uDCA6\",\n        \"kscr;\": \"\\uD835\\uDCC0\",\n        \"lAarr;\": \"\\u21DA\",\n        \"Lacute;\": \"\\u0139\",\n        \"lacute;\": \"\\u013A\",\n        \"laemptyv;\": \"\\u29B4\",\n        \"lagran;\": \"\\u2112\",\n        \"Lambda;\": \"\\u039B\",\n        \"lambda;\": \"\\u03BB\",\n        \"lang;\": \"\\u27E8\",\n        \"Lang;\": \"\\u27EA\",\n        \"langd;\": \"\\u2991\",\n        \"langle;\": \"\\u27E8\",\n        \"lap;\": \"\\u2A85\",\n        \"Laplacetrf;\": \"\\u2112\",\n        \"laquo;\": \"\\xAB\",\n        \"laquo\": \"\\xAB\",\n        \"larrb;\": \"\\u21E4\",\n        \"larrbfs;\": \"\\u291F\",\n        \"larr;\": \"\\u2190\",\n        \"Larr;\": \"\\u219E\",\n        \"lArr;\": \"\\u21D0\",\n        \"larrfs;\": \"\\u291D\",\n        \"larrhk;\": \"\\u21A9\",\n        \"larrlp;\": \"\\u21AB\",\n        \"larrpl;\": \"\\u2939\",\n        \"larrsim;\": \"\\u2973\",\n        \"larrtl;\": \"\\u21A2\",\n        \"latail;\": \"\\u2919\",\n        \"lAtail;\": \"\\u291B\",\n        \"lat;\": \"\\u2AAB\",\n        \"late;\": \"\\u2AAD\",\n        \"lates;\": \"\\u2AAD\\uFE00\",\n        \"lbarr;\": \"\\u290C\",\n        \"lBarr;\": \"\\u290E\",\n        \"lbbrk;\": \"\\u2772\",\n        \"lbrace;\": \"{\",\n        \"lbrack;\": \"[\",\n        \"lbrke;\": \"\\u298B\",\n        \"lbrksld;\": \"\\u298F\",\n        \"lbrkslu;\": \"\\u298D\",\n        \"Lcaron;\": \"\\u013D\",\n        \"lcaron;\": \"\\u013E\",\n        \"Lcedil;\": \"\\u013B\",\n        \"lcedil;\": \"\\u013C\",\n        \"lceil;\": \"\\u2308\",\n        \"lcub;\": \"{\",\n        \"Lcy;\": \"\\u041B\",\n        \"lcy;\": \"\\u043B\",\n        \"ldca;\": \"\\u2936\",\n        \"ldquo;\": \"\\u201C\",\n        \"ldquor;\": \"\\u201E\",\n        \"ldrdhar;\": \"\\u2967\",\n        \"ldrushar;\": \"\\u294B\",\n        \"ldsh;\": \"\\u21B2\",\n        \"le;\": \"\\u2264\",\n        \"lE;\": \"\\u2266\",\n        \"LeftAngleBracket;\": \"\\u27E8\",\n        \"LeftArrowBar;\": \"\\u21E4\",\n        \"leftarrow;\": \"\\u2190\",\n        \"LeftArrow;\": \"\\u2190\",\n        \"Leftarrow;\": \"\\u21D0\",\n        \"LeftArrowRightArrow;\": \"\\u21C6\",\n        \"leftarrowtail;\": \"\\u21A2\",\n        \"LeftCeiling;\": \"\\u2308\",\n        \"LeftDoubleBracket;\": \"\\u27E6\",\n        \"LeftDownTeeVector;\": \"\\u2961\",\n        \"LeftDownVectorBar;\": \"\\u2959\",\n        \"LeftDownVector;\": \"\\u21C3\",\n        \"LeftFloor;\": \"\\u230A\",\n        \"leftharpoondown;\": \"\\u21BD\",\n        \"leftharpoonup;\": \"\\u21BC\",\n        \"leftleftarrows;\": \"\\u21C7\",\n        \"leftrightarrow;\": \"\\u2194\",\n        \"LeftRightArrow;\": \"\\u2194\",\n        \"Leftrightarrow;\": \"\\u21D4\",\n        \"leftrightarrows;\": \"\\u21C6\",\n        \"leftrightharpoons;\": \"\\u21CB\",\n        \"leftrightsquigarrow;\": \"\\u21AD\",\n        \"LeftRightVector;\": \"\\u294E\",\n        \"LeftTeeArrow;\": \"\\u21A4\",\n        \"LeftTee;\": \"\\u22A3\",\n        \"LeftTeeVector;\": \"\\u295A\",\n        \"leftthreetimes;\": \"\\u22CB\",\n        \"LeftTriangleBar;\": \"\\u29CF\",\n        \"LeftTriangle;\": \"\\u22B2\",\n        \"LeftTriangleEqual;\": \"\\u22B4\",\n        \"LeftUpDownVector;\": \"\\u2951\",\n        \"LeftUpTeeVector;\": \"\\u2960\",\n        \"LeftUpVectorBar;\": \"\\u2958\",\n        \"LeftUpVector;\": \"\\u21BF\",\n        \"LeftVectorBar;\": \"\\u2952\",\n        \"LeftVector;\": \"\\u21BC\",\n        \"lEg;\": \"\\u2A8B\",\n        \"leg;\": \"\\u22DA\",\n        \"leq;\": \"\\u2264\",\n        \"leqq;\": \"\\u2266\",\n        \"leqslant;\": \"\\u2A7D\",\n        \"lescc;\": \"\\u2AA8\",\n        \"les;\": \"\\u2A7D\",\n        \"lesdot;\": \"\\u2A7F\",\n        \"lesdoto;\": \"\\u2A81\",\n        \"lesdotor;\": \"\\u2A83\",\n        \"lesg;\": \"\\u22DA\\uFE00\",\n        \"lesges;\": \"\\u2A93\",\n        \"lessapprox;\": \"\\u2A85\",\n        \"lessdot;\": \"\\u22D6\",\n        \"lesseqgtr;\": \"\\u22DA\",\n        \"lesseqqgtr;\": \"\\u2A8B\",\n        \"LessEqualGreater;\": \"\\u22DA\",\n        \"LessFullEqual;\": \"\\u2266\",\n        \"LessGreater;\": \"\\u2276\",\n        \"lessgtr;\": \"\\u2276\",\n        \"LessLess;\": \"\\u2AA1\",\n        \"lesssim;\": \"\\u2272\",\n        \"LessSlantEqual;\": \"\\u2A7D\",\n        \"LessTilde;\": \"\\u2272\",\n        \"lfisht;\": \"\\u297C\",\n        \"lfloor;\": \"\\u230A\",\n        \"Lfr;\": \"\\uD835\\uDD0F\",\n        \"lfr;\": \"\\uD835\\uDD29\",\n        \"lg;\": \"\\u2276\",\n        \"lgE;\": \"\\u2A91\",\n        \"lHar;\": \"\\u2962\",\n        \"lhard;\": \"\\u21BD\",\n        \"lharu;\": \"\\u21BC\",\n        \"lharul;\": \"\\u296A\",\n        \"lhblk;\": \"\\u2584\",\n        \"LJcy;\": \"\\u0409\",\n        \"ljcy;\": \"\\u0459\",\n        \"llarr;\": \"\\u21C7\",\n        \"ll;\": \"\\u226A\",\n        \"Ll;\": \"\\u22D8\",\n        \"llcorner;\": \"\\u231E\",\n        \"Lleftarrow;\": \"\\u21DA\",\n        \"llhard;\": \"\\u296B\",\n        \"lltri;\": \"\\u25FA\",\n        \"Lmidot;\": \"\\u013F\",\n        \"lmidot;\": \"\\u0140\",\n        \"lmoustache;\": \"\\u23B0\",\n        \"lmoust;\": \"\\u23B0\",\n        \"lnap;\": \"\\u2A89\",\n        \"lnapprox;\": \"\\u2A89\",\n        \"lne;\": \"\\u2A87\",\n        \"lnE;\": \"\\u2268\",\n        \"lneq;\": \"\\u2A87\",\n        \"lneqq;\": \"\\u2268\",\n        \"lnsim;\": \"\\u22E6\",\n        \"loang;\": \"\\u27EC\",\n        \"loarr;\": \"\\u21FD\",\n        \"lobrk;\": \"\\u27E6\",\n        \"longleftarrow;\": \"\\u27F5\",\n        \"LongLeftArrow;\": \"\\u27F5\",\n        \"Longleftarrow;\": \"\\u27F8\",\n        \"longleftrightarrow;\": \"\\u27F7\",\n        \"LongLeftRightArrow;\": \"\\u27F7\",\n        \"Longleftrightarrow;\": \"\\u27FA\",\n        \"longmapsto;\": \"\\u27FC\",\n        \"longrightarrow;\": \"\\u27F6\",\n        \"LongRightArrow;\": \"\\u27F6\",\n        \"Longrightarrow;\": \"\\u27F9\",\n        \"looparrowleft;\": \"\\u21AB\",\n        \"looparrowright;\": \"\\u21AC\",\n        \"lopar;\": \"\\u2985\",\n        \"Lopf;\": \"\\uD835\\uDD43\",\n        \"lopf;\": \"\\uD835\\uDD5D\",\n        \"loplus;\": \"\\u2A2D\",\n        \"lotimes;\": \"\\u2A34\",\n        \"lowast;\": \"\\u2217\",\n        \"lowbar;\": \"_\",\n        \"LowerLeftArrow;\": \"\\u2199\",\n        \"LowerRightArrow;\": \"\\u2198\",\n        \"loz;\": \"\\u25CA\",\n        \"lozenge;\": \"\\u25CA\",\n        \"lozf;\": \"\\u29EB\",\n        \"lpar;\": \"(\",\n        \"lparlt;\": \"\\u2993\",\n        \"lrarr;\": \"\\u21C6\",\n        \"lrcorner;\": \"\\u231F\",\n        \"lrhar;\": \"\\u21CB\",\n        \"lrhard;\": \"\\u296D\",\n        \"lrm;\": \"\\u200E\",\n        \"lrtri;\": \"\\u22BF\",\n        \"lsaquo;\": \"\\u2039\",\n        \"lscr;\": \"\\uD835\\uDCC1\",\n        \"Lscr;\": \"\\u2112\",\n        \"lsh;\": \"\\u21B0\",\n        \"Lsh;\": \"\\u21B0\",\n        \"lsim;\": \"\\u2272\",\n        \"lsime;\": \"\\u2A8D\",\n        \"lsimg;\": \"\\u2A8F\",\n        \"lsqb;\": \"[\",\n        \"lsquo;\": \"\\u2018\",\n        \"lsquor;\": \"\\u201A\",\n        \"Lstrok;\": \"\\u0141\",\n        \"lstrok;\": \"\\u0142\",\n        \"ltcc;\": \"\\u2AA6\",\n        \"ltcir;\": \"\\u2A79\",\n        \"lt;\": \"<\",\n        \"lt\": \"<\",\n        \"LT;\": \"<\",\n        \"LT\": \"<\",\n        \"Lt;\": \"\\u226A\",\n        \"ltdot;\": \"\\u22D6\",\n        \"lthree;\": \"\\u22CB\",\n        \"ltimes;\": \"\\u22C9\",\n        \"ltlarr;\": \"\\u2976\",\n        \"ltquest;\": \"\\u2A7B\",\n        \"ltri;\": \"\\u25C3\",\n        \"ltrie;\": \"\\u22B4\",\n        \"ltrif;\": \"\\u25C2\",\n        \"ltrPar;\": \"\\u2996\",\n        \"lurdshar;\": \"\\u294A\",\n        \"luruhar;\": \"\\u2966\",\n        \"lvertneqq;\": \"\\u2268\\uFE00\",\n        \"lvnE;\": \"\\u2268\\uFE00\",\n        \"macr;\": \"\\xAF\",\n        \"macr\": \"\\xAF\",\n        \"male;\": \"\\u2642\",\n        \"malt;\": \"\\u2720\",\n        \"maltese;\": \"\\u2720\",\n        \"Map;\": \"\\u2905\",\n        \"map;\": \"\\u21A6\",\n        \"mapsto;\": \"\\u21A6\",\n        \"mapstodown;\": \"\\u21A7\",\n        \"mapstoleft;\": \"\\u21A4\",\n        \"mapstoup;\": \"\\u21A5\",\n        \"marker;\": \"\\u25AE\",\n        \"mcomma;\": \"\\u2A29\",\n        \"Mcy;\": \"\\u041C\",\n        \"mcy;\": \"\\u043C\",\n        \"mdash;\": \"\\u2014\",\n        \"mDDot;\": \"\\u223A\",\n        \"measuredangle;\": \"\\u2221\",\n        \"MediumSpace;\": \"\\u205F\",\n        \"Mellintrf;\": \"\\u2133\",\n        \"Mfr;\": \"\\uD835\\uDD10\",\n        \"mfr;\": \"\\uD835\\uDD2A\",\n        \"mho;\": \"\\u2127\",\n        \"micro;\": \"\\xB5\",\n        \"micro\": \"\\xB5\",\n        \"midast;\": \"*\",\n        \"midcir;\": \"\\u2AF0\",\n        \"mid;\": \"\\u2223\",\n        \"middot;\": \"\\xB7\",\n        \"middot\": \"\\xB7\",\n        \"minusb;\": \"\\u229F\",\n        \"minus;\": \"\\u2212\",\n        \"minusd;\": \"\\u2238\",\n        \"minusdu;\": \"\\u2A2A\",\n        \"MinusPlus;\": \"\\u2213\",\n        \"mlcp;\": \"\\u2ADB\",\n        \"mldr;\": \"\\u2026\",\n        \"mnplus;\": \"\\u2213\",\n        \"models;\": \"\\u22A7\",\n        \"Mopf;\": \"\\uD835\\uDD44\",\n        \"mopf;\": \"\\uD835\\uDD5E\",\n        \"mp;\": \"\\u2213\",\n        \"mscr;\": \"\\uD835\\uDCC2\",\n        \"Mscr;\": \"\\u2133\",\n        \"mstpos;\": \"\\u223E\",\n        \"Mu;\": \"\\u039C\",\n        \"mu;\": \"\\u03BC\",\n        \"multimap;\": \"\\u22B8\",\n        \"mumap;\": \"\\u22B8\",\n        \"nabla;\": \"\\u2207\",\n        \"Nacute;\": \"\\u0143\",\n        \"nacute;\": \"\\u0144\",\n        \"nang;\": \"\\u2220\\u20D2\",\n        \"nap;\": \"\\u2249\",\n        \"napE;\": \"\\u2A70\\u0338\",\n        \"napid;\": \"\\u224B\\u0338\",\n        \"napos;\": \"\\u0149\",\n        \"napprox;\": \"\\u2249\",\n        \"natural;\": \"\\u266E\",\n        \"naturals;\": \"\\u2115\",\n        \"natur;\": \"\\u266E\",\n        \"nbsp;\": \"\\xA0\",\n        \"nbsp\": \"\\xA0\",\n        \"nbump;\": \"\\u224E\\u0338\",\n        \"nbumpe;\": \"\\u224F\\u0338\",\n        \"ncap;\": \"\\u2A43\",\n        \"Ncaron;\": \"\\u0147\",\n        \"ncaron;\": \"\\u0148\",\n        \"Ncedil;\": \"\\u0145\",\n        \"ncedil;\": \"\\u0146\",\n        \"ncong;\": \"\\u2247\",\n        \"ncongdot;\": \"\\u2A6D\\u0338\",\n        \"ncup;\": \"\\u2A42\",\n        \"Ncy;\": \"\\u041D\",\n        \"ncy;\": \"\\u043D\",\n        \"ndash;\": \"\\u2013\",\n        \"nearhk;\": \"\\u2924\",\n        \"nearr;\": \"\\u2197\",\n        \"neArr;\": \"\\u21D7\",\n        \"nearrow;\": \"\\u2197\",\n        \"ne;\": \"\\u2260\",\n        \"nedot;\": \"\\u2250\\u0338\",\n        \"NegativeMediumSpace;\": \"\\u200B\",\n        \"NegativeThickSpace;\": \"\\u200B\",\n        \"NegativeThinSpace;\": \"\\u200B\",\n        \"NegativeVeryThinSpace;\": \"\\u200B\",\n        \"nequiv;\": \"\\u2262\",\n        \"nesear;\": \"\\u2928\",\n        \"nesim;\": \"\\u2242\\u0338\",\n        \"NestedGreaterGreater;\": \"\\u226B\",\n        \"NestedLessLess;\": \"\\u226A\",\n        \"NewLine;\": \"\\n\",\n        \"nexist;\": \"\\u2204\",\n        \"nexists;\": \"\\u2204\",\n        \"Nfr;\": \"\\uD835\\uDD11\",\n        \"nfr;\": \"\\uD835\\uDD2B\",\n        \"ngE;\": \"\\u2267\\u0338\",\n        \"nge;\": \"\\u2271\",\n        \"ngeq;\": \"\\u2271\",\n        \"ngeqq;\": \"\\u2267\\u0338\",\n        \"ngeqslant;\": \"\\u2A7E\\u0338\",\n        \"nges;\": \"\\u2A7E\\u0338\",\n        \"nGg;\": \"\\u22D9\\u0338\",\n        \"ngsim;\": \"\\u2275\",\n        \"nGt;\": \"\\u226B\\u20D2\",\n        \"ngt;\": \"\\u226F\",\n        \"ngtr;\": \"\\u226F\",\n        \"nGtv;\": \"\\u226B\\u0338\",\n        \"nharr;\": \"\\u21AE\",\n        \"nhArr;\": \"\\u21CE\",\n        \"nhpar;\": \"\\u2AF2\",\n        \"ni;\": \"\\u220B\",\n        \"nis;\": \"\\u22FC\",\n        \"nisd;\": \"\\u22FA\",\n        \"niv;\": \"\\u220B\",\n        \"NJcy;\": \"\\u040A\",\n        \"njcy;\": \"\\u045A\",\n        \"nlarr;\": \"\\u219A\",\n        \"nlArr;\": \"\\u21CD\",\n        \"nldr;\": \"\\u2025\",\n        \"nlE;\": \"\\u2266\\u0338\",\n        \"nle;\": \"\\u2270\",\n        \"nleftarrow;\": \"\\u219A\",\n        \"nLeftarrow;\": \"\\u21CD\",\n        \"nleftrightarrow;\": \"\\u21AE\",\n        \"nLeftrightarrow;\": \"\\u21CE\",\n        \"nleq;\": \"\\u2270\",\n        \"nleqq;\": \"\\u2266\\u0338\",\n        \"nleqslant;\": \"\\u2A7D\\u0338\",\n        \"nles;\": \"\\u2A7D\\u0338\",\n        \"nless;\": \"\\u226E\",\n        \"nLl;\": \"\\u22D8\\u0338\",\n        \"nlsim;\": \"\\u2274\",\n        \"nLt;\": \"\\u226A\\u20D2\",\n        \"nlt;\": \"\\u226E\",\n        \"nltri;\": \"\\u22EA\",\n        \"nltrie;\": \"\\u22EC\",\n        \"nLtv;\": \"\\u226A\\u0338\",\n        \"nmid;\": \"\\u2224\",\n        \"NoBreak;\": \"\\u2060\",\n        \"NonBreakingSpace;\": \"\\xA0\",\n        \"nopf;\": \"\\uD835\\uDD5F\",\n        \"Nopf;\": \"\\u2115\",\n        \"Not;\": \"\\u2AEC\",\n        \"not;\": \"\\xAC\",\n        \"not\": \"\\xAC\",\n        \"NotCongruent;\": \"\\u2262\",\n        \"NotCupCap;\": \"\\u226D\",\n        \"NotDoubleVerticalBar;\": \"\\u2226\",\n        \"NotElement;\": \"\\u2209\",\n        \"NotEqual;\": \"\\u2260\",\n        \"NotEqualTilde;\": \"\\u2242\\u0338\",\n        \"NotExists;\": \"\\u2204\",\n        \"NotGreater;\": \"\\u226F\",\n        \"NotGreaterEqual;\": \"\\u2271\",\n        \"NotGreaterFullEqual;\": \"\\u2267\\u0338\",\n        \"NotGreaterGreater;\": \"\\u226B\\u0338\",\n        \"NotGreaterLess;\": \"\\u2279\",\n        \"NotGreaterSlantEqual;\": \"\\u2A7E\\u0338\",\n        \"NotGreaterTilde;\": \"\\u2275\",\n        \"NotHumpDownHump;\": \"\\u224E\\u0338\",\n        \"NotHumpEqual;\": \"\\u224F\\u0338\",\n        \"notin;\": \"\\u2209\",\n        \"notindot;\": \"\\u22F5\\u0338\",\n        \"notinE;\": \"\\u22F9\\u0338\",\n        \"notinva;\": \"\\u2209\",\n        \"notinvb;\": \"\\u22F7\",\n        \"notinvc;\": \"\\u22F6\",\n        \"NotLeftTriangleBar;\": \"\\u29CF\\u0338\",\n        \"NotLeftTriangle;\": \"\\u22EA\",\n        \"NotLeftTriangleEqual;\": \"\\u22EC\",\n        \"NotLess;\": \"\\u226E\",\n        \"NotLessEqual;\": \"\\u2270\",\n        \"NotLessGreater;\": \"\\u2278\",\n        \"NotLessLess;\": \"\\u226A\\u0338\",\n        \"NotLessSlantEqual;\": \"\\u2A7D\\u0338\",\n        \"NotLessTilde;\": \"\\u2274\",\n        \"NotNestedGreaterGreater;\": \"\\u2AA2\\u0338\",\n        \"NotNestedLessLess;\": \"\\u2AA1\\u0338\",\n        \"notni;\": \"\\u220C\",\n        \"notniva;\": \"\\u220C\",\n        \"notnivb;\": \"\\u22FE\",\n        \"notnivc;\": \"\\u22FD\",\n        \"NotPrecedes;\": \"\\u2280\",\n        \"NotPrecedesEqual;\": \"\\u2AAF\\u0338\",\n        \"NotPrecedesSlantEqual;\": \"\\u22E0\",\n        \"NotReverseElement;\": \"\\u220C\",\n        \"NotRightTriangleBar;\": \"\\u29D0\\u0338\",\n        \"NotRightTriangle;\": \"\\u22EB\",\n        \"NotRightTriangleEqual;\": \"\\u22ED\",\n        \"NotSquareSubset;\": \"\\u228F\\u0338\",\n        \"NotSquareSubsetEqual;\": \"\\u22E2\",\n        \"NotSquareSuperset;\": \"\\u2290\\u0338\",\n        \"NotSquareSupersetEqual;\": \"\\u22E3\",\n        \"NotSubset;\": \"\\u2282\\u20D2\",\n        \"NotSubsetEqual;\": \"\\u2288\",\n        \"NotSucceeds;\": \"\\u2281\",\n        \"NotSucceedsEqual;\": \"\\u2AB0\\u0338\",\n        \"NotSucceedsSlantEqual;\": \"\\u22E1\",\n        \"NotSucceedsTilde;\": \"\\u227F\\u0338\",\n        \"NotSuperset;\": \"\\u2283\\u20D2\",\n        \"NotSupersetEqual;\": \"\\u2289\",\n        \"NotTilde;\": \"\\u2241\",\n        \"NotTildeEqual;\": \"\\u2244\",\n        \"NotTildeFullEqual;\": \"\\u2247\",\n        \"NotTildeTilde;\": \"\\u2249\",\n        \"NotVerticalBar;\": \"\\u2224\",\n        \"nparallel;\": \"\\u2226\",\n        \"npar;\": \"\\u2226\",\n        \"nparsl;\": \"\\u2AFD\\u20E5\",\n        \"npart;\": \"\\u2202\\u0338\",\n        \"npolint;\": \"\\u2A14\",\n        \"npr;\": \"\\u2280\",\n        \"nprcue;\": \"\\u22E0\",\n        \"nprec;\": \"\\u2280\",\n        \"npreceq;\": \"\\u2AAF\\u0338\",\n        \"npre;\": \"\\u2AAF\\u0338\",\n        \"nrarrc;\": \"\\u2933\\u0338\",\n        \"nrarr;\": \"\\u219B\",\n        \"nrArr;\": \"\\u21CF\",\n        \"nrarrw;\": \"\\u219D\\u0338\",\n        \"nrightarrow;\": \"\\u219B\",\n        \"nRightarrow;\": \"\\u21CF\",\n        \"nrtri;\": \"\\u22EB\",\n        \"nrtrie;\": \"\\u22ED\",\n        \"nsc;\": \"\\u2281\",\n        \"nsccue;\": \"\\u22E1\",\n        \"nsce;\": \"\\u2AB0\\u0338\",\n        \"Nscr;\": \"\\uD835\\uDCA9\",\n        \"nscr;\": \"\\uD835\\uDCC3\",\n        \"nshortmid;\": \"\\u2224\",\n        \"nshortparallel;\": \"\\u2226\",\n        \"nsim;\": \"\\u2241\",\n        \"nsime;\": \"\\u2244\",\n        \"nsimeq;\": \"\\u2244\",\n        \"nsmid;\": \"\\u2224\",\n        \"nspar;\": \"\\u2226\",\n        \"nsqsube;\": \"\\u22E2\",\n        \"nsqsupe;\": \"\\u22E3\",\n        \"nsub;\": \"\\u2284\",\n        \"nsubE;\": \"\\u2AC5\\u0338\",\n        \"nsube;\": \"\\u2288\",\n        \"nsubset;\": \"\\u2282\\u20D2\",\n        \"nsubseteq;\": \"\\u2288\",\n        \"nsubseteqq;\": \"\\u2AC5\\u0338\",\n        \"nsucc;\": \"\\u2281\",\n        \"nsucceq;\": \"\\u2AB0\\u0338\",\n        \"nsup;\": \"\\u2285\",\n        \"nsupE;\": \"\\u2AC6\\u0338\",\n        \"nsupe;\": \"\\u2289\",\n        \"nsupset;\": \"\\u2283\\u20D2\",\n        \"nsupseteq;\": \"\\u2289\",\n        \"nsupseteqq;\": \"\\u2AC6\\u0338\",\n        \"ntgl;\": \"\\u2279\",\n        \"Ntilde;\": \"\\xD1\",\n        \"Ntilde\": \"\\xD1\",\n        \"ntilde;\": \"\\xF1\",\n        \"ntilde\": \"\\xF1\",\n        \"ntlg;\": \"\\u2278\",\n        \"ntriangleleft;\": \"\\u22EA\",\n        \"ntrianglelefteq;\": \"\\u22EC\",\n        \"ntriangleright;\": \"\\u22EB\",\n        \"ntrianglerighteq;\": \"\\u22ED\",\n        \"Nu;\": \"\\u039D\",\n        \"nu;\": \"\\u03BD\",\n        \"num;\": \"#\",\n        \"numero;\": \"\\u2116\",\n        \"numsp;\": \"\\u2007\",\n        \"nvap;\": \"\\u224D\\u20D2\",\n        \"nvdash;\": \"\\u22AC\",\n        \"nvDash;\": \"\\u22AD\",\n        \"nVdash;\": \"\\u22AE\",\n        \"nVDash;\": \"\\u22AF\",\n        \"nvge;\": \"\\u2265\\u20D2\",\n        \"nvgt;\": \">\\u20D2\",\n        \"nvHarr;\": \"\\u2904\",\n        \"nvinfin;\": \"\\u29DE\",\n        \"nvlArr;\": \"\\u2902\",\n        \"nvle;\": \"\\u2264\\u20D2\",\n        \"nvlt;\": \"<\\u20D2\",\n        \"nvltrie;\": \"\\u22B4\\u20D2\",\n        \"nvrArr;\": \"\\u2903\",\n        \"nvrtrie;\": \"\\u22B5\\u20D2\",\n        \"nvsim;\": \"\\u223C\\u20D2\",\n        \"nwarhk;\": \"\\u2923\",\n        \"nwarr;\": \"\\u2196\",\n        \"nwArr;\": \"\\u21D6\",\n        \"nwarrow;\": \"\\u2196\",\n        \"nwnear;\": \"\\u2927\",\n        \"Oacute;\": \"\\xD3\",\n        \"Oacute\": \"\\xD3\",\n        \"oacute;\": \"\\xF3\",\n        \"oacute\": \"\\xF3\",\n        \"oast;\": \"\\u229B\",\n        \"Ocirc;\": \"\\xD4\",\n        \"Ocirc\": \"\\xD4\",\n        \"ocirc;\": \"\\xF4\",\n        \"ocirc\": \"\\xF4\",\n        \"ocir;\": \"\\u229A\",\n        \"Ocy;\": \"\\u041E\",\n        \"ocy;\": \"\\u043E\",\n        \"odash;\": \"\\u229D\",\n        \"Odblac;\": \"\\u0150\",\n        \"odblac;\": \"\\u0151\",\n        \"odiv;\": \"\\u2A38\",\n        \"odot;\": \"\\u2299\",\n        \"odsold;\": \"\\u29BC\",\n        \"OElig;\": \"\\u0152\",\n        \"oelig;\": \"\\u0153\",\n        \"ofcir;\": \"\\u29BF\",\n        \"Ofr;\": \"\\uD835\\uDD12\",\n        \"ofr;\": \"\\uD835\\uDD2C\",\n        \"ogon;\": \"\\u02DB\",\n        \"Ograve;\": \"\\xD2\",\n        \"Ograve\": \"\\xD2\",\n        \"ograve;\": \"\\xF2\",\n        \"ograve\": \"\\xF2\",\n        \"ogt;\": \"\\u29C1\",\n        \"ohbar;\": \"\\u29B5\",\n        \"ohm;\": \"\\u03A9\",\n        \"oint;\": \"\\u222E\",\n        \"olarr;\": \"\\u21BA\",\n        \"olcir;\": \"\\u29BE\",\n        \"olcross;\": \"\\u29BB\",\n        \"oline;\": \"\\u203E\",\n        \"olt;\": \"\\u29C0\",\n        \"Omacr;\": \"\\u014C\",\n        \"omacr;\": \"\\u014D\",\n        \"Omega;\": \"\\u03A9\",\n        \"omega;\": \"\\u03C9\",\n        \"Omicron;\": \"\\u039F\",\n        \"omicron;\": \"\\u03BF\",\n        \"omid;\": \"\\u29B6\",\n        \"ominus;\": \"\\u2296\",\n        \"Oopf;\": \"\\uD835\\uDD46\",\n        \"oopf;\": \"\\uD835\\uDD60\",\n        \"opar;\": \"\\u29B7\",\n        \"OpenCurlyDoubleQuote;\": \"\\u201C\",\n        \"OpenCurlyQuote;\": \"\\u2018\",\n        \"operp;\": \"\\u29B9\",\n        \"oplus;\": \"\\u2295\",\n        \"orarr;\": \"\\u21BB\",\n        \"Or;\": \"\\u2A54\",\n        \"or;\": \"\\u2228\",\n        \"ord;\": \"\\u2A5D\",\n        \"order;\": \"\\u2134\",\n        \"orderof;\": \"\\u2134\",\n        \"ordf;\": \"\\xAA\",\n        \"ordf\": \"\\xAA\",\n        \"ordm;\": \"\\xBA\",\n        \"ordm\": \"\\xBA\",\n        \"origof;\": \"\\u22B6\",\n        \"oror;\": \"\\u2A56\",\n        \"orslope;\": \"\\u2A57\",\n        \"orv;\": \"\\u2A5B\",\n        \"oS;\": \"\\u24C8\",\n        \"Oscr;\": \"\\uD835\\uDCAA\",\n        \"oscr;\": \"\\u2134\",\n        \"Oslash;\": \"\\xD8\",\n        \"Oslash\": \"\\xD8\",\n        \"oslash;\": \"\\xF8\",\n        \"oslash\": \"\\xF8\",\n        \"osol;\": \"\\u2298\",\n        \"Otilde;\": \"\\xD5\",\n        \"Otilde\": \"\\xD5\",\n        \"otilde;\": \"\\xF5\",\n        \"otilde\": \"\\xF5\",\n        \"otimesas;\": \"\\u2A36\",\n        \"Otimes;\": \"\\u2A37\",\n        \"otimes;\": \"\\u2297\",\n        \"Ouml;\": \"\\xD6\",\n        \"Ouml\": \"\\xD6\",\n        \"ouml;\": \"\\xF6\",\n        \"ouml\": \"\\xF6\",\n        \"ovbar;\": \"\\u233D\",\n        \"OverBar;\": \"\\u203E\",\n        \"OverBrace;\": \"\\u23DE\",\n        \"OverBracket;\": \"\\u23B4\",\n        \"OverParenthesis;\": \"\\u23DC\",\n        \"para;\": \"\\xB6\",\n        \"para\": \"\\xB6\",\n        \"parallel;\": \"\\u2225\",\n        \"par;\": \"\\u2225\",\n        \"parsim;\": \"\\u2AF3\",\n        \"parsl;\": \"\\u2AFD\",\n        \"part;\": \"\\u2202\",\n        \"PartialD;\": \"\\u2202\",\n        \"Pcy;\": \"\\u041F\",\n        \"pcy;\": \"\\u043F\",\n        \"percnt;\": \"%\",\n        \"period;\": \".\",\n        \"permil;\": \"\\u2030\",\n        \"perp;\": \"\\u22A5\",\n        \"pertenk;\": \"\\u2031\",\n        \"Pfr;\": \"\\uD835\\uDD13\",\n        \"pfr;\": \"\\uD835\\uDD2D\",\n        \"Phi;\": \"\\u03A6\",\n        \"phi;\": \"\\u03C6\",\n        \"phiv;\": \"\\u03D5\",\n        \"phmmat;\": \"\\u2133\",\n        \"phone;\": \"\\u260E\",\n        \"Pi;\": \"\\u03A0\",\n        \"pi;\": \"\\u03C0\",\n        \"pitchfork;\": \"\\u22D4\",\n        \"piv;\": \"\\u03D6\",\n        \"planck;\": \"\\u210F\",\n        \"planckh;\": \"\\u210E\",\n        \"plankv;\": \"\\u210F\",\n        \"plusacir;\": \"\\u2A23\",\n        \"plusb;\": \"\\u229E\",\n        \"pluscir;\": \"\\u2A22\",\n        \"plus;\": \"+\",\n        \"plusdo;\": \"\\u2214\",\n        \"plusdu;\": \"\\u2A25\",\n        \"pluse;\": \"\\u2A72\",\n        \"PlusMinus;\": \"\\xB1\",\n        \"plusmn;\": \"\\xB1\",\n        \"plusmn\": \"\\xB1\",\n        \"plussim;\": \"\\u2A26\",\n        \"plustwo;\": \"\\u2A27\",\n        \"pm;\": \"\\xB1\",\n        \"Poincareplane;\": \"\\u210C\",\n        \"pointint;\": \"\\u2A15\",\n        \"popf;\": \"\\uD835\\uDD61\",\n        \"Popf;\": \"\\u2119\",\n        \"pound;\": \"\\xA3\",\n        \"pound\": \"\\xA3\",\n        \"prap;\": \"\\u2AB7\",\n        \"Pr;\": \"\\u2ABB\",\n        \"pr;\": \"\\u227A\",\n        \"prcue;\": \"\\u227C\",\n        \"precapprox;\": \"\\u2AB7\",\n        \"prec;\": \"\\u227A\",\n        \"preccurlyeq;\": \"\\u227C\",\n        \"Precedes;\": \"\\u227A\",\n        \"PrecedesEqual;\": \"\\u2AAF\",\n        \"PrecedesSlantEqual;\": \"\\u227C\",\n        \"PrecedesTilde;\": \"\\u227E\",\n        \"preceq;\": \"\\u2AAF\",\n        \"precnapprox;\": \"\\u2AB9\",\n        \"precneqq;\": \"\\u2AB5\",\n        \"precnsim;\": \"\\u22E8\",\n        \"pre;\": \"\\u2AAF\",\n        \"prE;\": \"\\u2AB3\",\n        \"precsim;\": \"\\u227E\",\n        \"prime;\": \"\\u2032\",\n        \"Prime;\": \"\\u2033\",\n        \"primes;\": \"\\u2119\",\n        \"prnap;\": \"\\u2AB9\",\n        \"prnE;\": \"\\u2AB5\",\n        \"prnsim;\": \"\\u22E8\",\n        \"prod;\": \"\\u220F\",\n        \"Product;\": \"\\u220F\",\n        \"profalar;\": \"\\u232E\",\n        \"profline;\": \"\\u2312\",\n        \"profsurf;\": \"\\u2313\",\n        \"prop;\": \"\\u221D\",\n        \"Proportional;\": \"\\u221D\",\n        \"Proportion;\": \"\\u2237\",\n        \"propto;\": \"\\u221D\",\n        \"prsim;\": \"\\u227E\",\n        \"prurel;\": \"\\u22B0\",\n        \"Pscr;\": \"\\uD835\\uDCAB\",\n        \"pscr;\": \"\\uD835\\uDCC5\",\n        \"Psi;\": \"\\u03A8\",\n        \"psi;\": \"\\u03C8\",\n        \"puncsp;\": \"\\u2008\",\n        \"Qfr;\": \"\\uD835\\uDD14\",\n        \"qfr;\": \"\\uD835\\uDD2E\",\n        \"qint;\": \"\\u2A0C\",\n        \"qopf;\": \"\\uD835\\uDD62\",\n        \"Qopf;\": \"\\u211A\",\n        \"qprime;\": \"\\u2057\",\n        \"Qscr;\": \"\\uD835\\uDCAC\",\n        \"qscr;\": \"\\uD835\\uDCC6\",\n        \"quaternions;\": \"\\u210D\",\n        \"quatint;\": \"\\u2A16\",\n        \"quest;\": \"?\",\n        \"questeq;\": \"\\u225F\",\n        \"quot;\": \"\\\"\",\n        \"quot\": \"\\\"\",\n        \"QUOT;\": \"\\\"\",\n        \"QUOT\": \"\\\"\",\n        \"rAarr;\": \"\\u21DB\",\n        \"race;\": \"\\u223D\\u0331\",\n        \"Racute;\": \"\\u0154\",\n        \"racute;\": \"\\u0155\",\n        \"radic;\": \"\\u221A\",\n        \"raemptyv;\": \"\\u29B3\",\n        \"rang;\": \"\\u27E9\",\n        \"Rang;\": \"\\u27EB\",\n        \"rangd;\": \"\\u2992\",\n        \"range;\": \"\\u29A5\",\n        \"rangle;\": \"\\u27E9\",\n        \"raquo;\": \"\\xBB\",\n        \"raquo\": \"\\xBB\",\n        \"rarrap;\": \"\\u2975\",\n        \"rarrb;\": \"\\u21E5\",\n        \"rarrbfs;\": \"\\u2920\",\n        \"rarrc;\": \"\\u2933\",\n        \"rarr;\": \"\\u2192\",\n        \"Rarr;\": \"\\u21A0\",\n        \"rArr;\": \"\\u21D2\",\n        \"rarrfs;\": \"\\u291E\",\n        \"rarrhk;\": \"\\u21AA\",\n        \"rarrlp;\": \"\\u21AC\",\n        \"rarrpl;\": \"\\u2945\",\n        \"rarrsim;\": \"\\u2974\",\n        \"Rarrtl;\": \"\\u2916\",\n        \"rarrtl;\": \"\\u21A3\",\n        \"rarrw;\": \"\\u219D\",\n        \"ratail;\": \"\\u291A\",\n        \"rAtail;\": \"\\u291C\",\n        \"ratio;\": \"\\u2236\",\n        \"rationals;\": \"\\u211A\",\n        \"rbarr;\": \"\\u290D\",\n        \"rBarr;\": \"\\u290F\",\n        \"RBarr;\": \"\\u2910\",\n        \"rbbrk;\": \"\\u2773\",\n        \"rbrace;\": \"}\",\n        \"rbrack;\": \"]\",\n        \"rbrke;\": \"\\u298C\",\n        \"rbrksld;\": \"\\u298E\",\n        \"rbrkslu;\": \"\\u2990\",\n        \"Rcaron;\": \"\\u0158\",\n        \"rcaron;\": \"\\u0159\",\n        \"Rcedil;\": \"\\u0156\",\n        \"rcedil;\": \"\\u0157\",\n        \"rceil;\": \"\\u2309\",\n        \"rcub;\": \"}\",\n        \"Rcy;\": \"\\u0420\",\n        \"rcy;\": \"\\u0440\",\n        \"rdca;\": \"\\u2937\",\n        \"rdldhar;\": \"\\u2969\",\n        \"rdquo;\": \"\\u201D\",\n        \"rdquor;\": \"\\u201D\",\n        \"rdsh;\": \"\\u21B3\",\n        \"real;\": \"\\u211C\",\n        \"realine;\": \"\\u211B\",\n        \"realpart;\": \"\\u211C\",\n        \"reals;\": \"\\u211D\",\n        \"Re;\": \"\\u211C\",\n        \"rect;\": \"\\u25AD\",\n        \"reg;\": \"\\xAE\",\n        \"reg\": \"\\xAE\",\n        \"REG;\": \"\\xAE\",\n        \"REG\": \"\\xAE\",\n        \"ReverseElement;\": \"\\u220B\",\n        \"ReverseEquilibrium;\": \"\\u21CB\",\n        \"ReverseUpEquilibrium;\": \"\\u296F\",\n        \"rfisht;\": \"\\u297D\",\n        \"rfloor;\": \"\\u230B\",\n        \"rfr;\": \"\\uD835\\uDD2F\",\n        \"Rfr;\": \"\\u211C\",\n        \"rHar;\": \"\\u2964\",\n        \"rhard;\": \"\\u21C1\",\n        \"rharu;\": \"\\u21C0\",\n        \"rharul;\": \"\\u296C\",\n        \"Rho;\": \"\\u03A1\",\n        \"rho;\": \"\\u03C1\",\n        \"rhov;\": \"\\u03F1\",\n        \"RightAngleBracket;\": \"\\u27E9\",\n        \"RightArrowBar;\": \"\\u21E5\",\n        \"rightarrow;\": \"\\u2192\",\n        \"RightArrow;\": \"\\u2192\",\n        \"Rightarrow;\": \"\\u21D2\",\n        \"RightArrowLeftArrow;\": \"\\u21C4\",\n        \"rightarrowtail;\": \"\\u21A3\",\n        \"RightCeiling;\": \"\\u2309\",\n        \"RightDoubleBracket;\": \"\\u27E7\",\n        \"RightDownTeeVector;\": \"\\u295D\",\n        \"RightDownVectorBar;\": \"\\u2955\",\n        \"RightDownVector;\": \"\\u21C2\",\n        \"RightFloor;\": \"\\u230B\",\n        \"rightharpoondown;\": \"\\u21C1\",\n        \"rightharpoonup;\": \"\\u21C0\",\n        \"rightleftarrows;\": \"\\u21C4\",\n        \"rightleftharpoons;\": \"\\u21CC\",\n        \"rightrightarrows;\": \"\\u21C9\",\n        \"rightsquigarrow;\": \"\\u219D\",\n        \"RightTeeArrow;\": \"\\u21A6\",\n        \"RightTee;\": \"\\u22A2\",\n        \"RightTeeVector;\": \"\\u295B\",\n        \"rightthreetimes;\": \"\\u22CC\",\n        \"RightTriangleBar;\": \"\\u29D0\",\n        \"RightTriangle;\": \"\\u22B3\",\n        \"RightTriangleEqual;\": \"\\u22B5\",\n        \"RightUpDownVector;\": \"\\u294F\",\n        \"RightUpTeeVector;\": \"\\u295C\",\n        \"RightUpVectorBar;\": \"\\u2954\",\n        \"RightUpVector;\": \"\\u21BE\",\n        \"RightVectorBar;\": \"\\u2953\",\n        \"RightVector;\": \"\\u21C0\",\n        \"ring;\": \"\\u02DA\",\n        \"risingdotseq;\": \"\\u2253\",\n        \"rlarr;\": \"\\u21C4\",\n        \"rlhar;\": \"\\u21CC\",\n        \"rlm;\": \"\\u200F\",\n        \"rmoustache;\": \"\\u23B1\",\n        \"rmoust;\": \"\\u23B1\",\n        \"rnmid;\": \"\\u2AEE\",\n        \"roang;\": \"\\u27ED\",\n        \"roarr;\": \"\\u21FE\",\n        \"robrk;\": \"\\u27E7\",\n        \"ropar;\": \"\\u2986\",\n        \"ropf;\": \"\\uD835\\uDD63\",\n        \"Ropf;\": \"\\u211D\",\n        \"roplus;\": \"\\u2A2E\",\n        \"rotimes;\": \"\\u2A35\",\n        \"RoundImplies;\": \"\\u2970\",\n        \"rpar;\": \")\",\n        \"rpargt;\": \"\\u2994\",\n        \"rppolint;\": \"\\u2A12\",\n        \"rrarr;\": \"\\u21C9\",\n        \"Rrightarrow;\": \"\\u21DB\",\n        \"rsaquo;\": \"\\u203A\",\n        \"rscr;\": \"\\uD835\\uDCC7\",\n        \"Rscr;\": \"\\u211B\",\n        \"rsh;\": \"\\u21B1\",\n        \"Rsh;\": \"\\u21B1\",\n        \"rsqb;\": \"]\",\n        \"rsquo;\": \"\\u2019\",\n        \"rsquor;\": \"\\u2019\",\n        \"rthree;\": \"\\u22CC\",\n        \"rtimes;\": \"\\u22CA\",\n        \"rtri;\": \"\\u25B9\",\n        \"rtrie;\": \"\\u22B5\",\n        \"rtrif;\": \"\\u25B8\",\n        \"rtriltri;\": \"\\u29CE\",\n        \"RuleDelayed;\": \"\\u29F4\",\n        \"ruluhar;\": \"\\u2968\",\n        \"rx;\": \"\\u211E\",\n        \"Sacute;\": \"\\u015A\",\n        \"sacute;\": \"\\u015B\",\n        \"sbquo;\": \"\\u201A\",\n        \"scap;\": \"\\u2AB8\",\n        \"Scaron;\": \"\\u0160\",\n        \"scaron;\": \"\\u0161\",\n        \"Sc;\": \"\\u2ABC\",\n        \"sc;\": \"\\u227B\",\n        \"sccue;\": \"\\u227D\",\n        \"sce;\": \"\\u2AB0\",\n        \"scE;\": \"\\u2AB4\",\n        \"Scedil;\": \"\\u015E\",\n        \"scedil;\": \"\\u015F\",\n        \"Scirc;\": \"\\u015C\",\n        \"scirc;\": \"\\u015D\",\n        \"scnap;\": \"\\u2ABA\",\n        \"scnE;\": \"\\u2AB6\",\n        \"scnsim;\": \"\\u22E9\",\n        \"scpolint;\": \"\\u2A13\",\n        \"scsim;\": \"\\u227F\",\n        \"Scy;\": \"\\u0421\",\n        \"scy;\": \"\\u0441\",\n        \"sdotb;\": \"\\u22A1\",\n        \"sdot;\": \"\\u22C5\",\n        \"sdote;\": \"\\u2A66\",\n        \"searhk;\": \"\\u2925\",\n        \"searr;\": \"\\u2198\",\n        \"seArr;\": \"\\u21D8\",\n        \"searrow;\": \"\\u2198\",\n        \"sect;\": \"\\xA7\",\n        \"sect\": \"\\xA7\",\n        \"semi;\": \";\",\n        \"seswar;\": \"\\u2929\",\n        \"setminus;\": \"\\u2216\",\n        \"setmn;\": \"\\u2216\",\n        \"sext;\": \"\\u2736\",\n        \"Sfr;\": \"\\uD835\\uDD16\",\n        \"sfr;\": \"\\uD835\\uDD30\",\n        \"sfrown;\": \"\\u2322\",\n        \"sharp;\": \"\\u266F\",\n        \"SHCHcy;\": \"\\u0429\",\n        \"shchcy;\": \"\\u0449\",\n        \"SHcy;\": \"\\u0428\",\n        \"shcy;\": \"\\u0448\",\n        \"ShortDownArrow;\": \"\\u2193\",\n        \"ShortLeftArrow;\": \"\\u2190\",\n        \"shortmid;\": \"\\u2223\",\n        \"shortparallel;\": \"\\u2225\",\n        \"ShortRightArrow;\": \"\\u2192\",\n        \"ShortUpArrow;\": \"\\u2191\",\n        \"shy;\": \"\\xAD\",\n        \"shy\": \"\\xAD\",\n        \"Sigma;\": \"\\u03A3\",\n        \"sigma;\": \"\\u03C3\",\n        \"sigmaf;\": \"\\u03C2\",\n        \"sigmav;\": \"\\u03C2\",\n        \"sim;\": \"\\u223C\",\n        \"simdot;\": \"\\u2A6A\",\n        \"sime;\": \"\\u2243\",\n        \"simeq;\": \"\\u2243\",\n        \"simg;\": \"\\u2A9E\",\n        \"simgE;\": \"\\u2AA0\",\n        \"siml;\": \"\\u2A9D\",\n        \"simlE;\": \"\\u2A9F\",\n        \"simne;\": \"\\u2246\",\n        \"simplus;\": \"\\u2A24\",\n        \"simrarr;\": \"\\u2972\",\n        \"slarr;\": \"\\u2190\",\n        \"SmallCircle;\": \"\\u2218\",\n        \"smallsetminus;\": \"\\u2216\",\n        \"smashp;\": \"\\u2A33\",\n        \"smeparsl;\": \"\\u29E4\",\n        \"smid;\": \"\\u2223\",\n        \"smile;\": \"\\u2323\",\n        \"smt;\": \"\\u2AAA\",\n        \"smte;\": \"\\u2AAC\",\n        \"smtes;\": \"\\u2AAC\\uFE00\",\n        \"SOFTcy;\": \"\\u042C\",\n        \"softcy;\": \"\\u044C\",\n        \"solbar;\": \"\\u233F\",\n        \"solb;\": \"\\u29C4\",\n        \"sol;\": \"/\",\n        \"Sopf;\": \"\\uD835\\uDD4A\",\n        \"sopf;\": \"\\uD835\\uDD64\",\n        \"spades;\": \"\\u2660\",\n        \"spadesuit;\": \"\\u2660\",\n        \"spar;\": \"\\u2225\",\n        \"sqcap;\": \"\\u2293\",\n        \"sqcaps;\": \"\\u2293\\uFE00\",\n        \"sqcup;\": \"\\u2294\",\n        \"sqcups;\": \"\\u2294\\uFE00\",\n        \"Sqrt;\": \"\\u221A\",\n        \"sqsub;\": \"\\u228F\",\n        \"sqsube;\": \"\\u2291\",\n        \"sqsubset;\": \"\\u228F\",\n        \"sqsubseteq;\": \"\\u2291\",\n        \"sqsup;\": \"\\u2290\",\n        \"sqsupe;\": \"\\u2292\",\n        \"sqsupset;\": \"\\u2290\",\n        \"sqsupseteq;\": \"\\u2292\",\n        \"square;\": \"\\u25A1\",\n        \"Square;\": \"\\u25A1\",\n        \"SquareIntersection;\": \"\\u2293\",\n        \"SquareSubset;\": \"\\u228F\",\n        \"SquareSubsetEqual;\": \"\\u2291\",\n        \"SquareSuperset;\": \"\\u2290\",\n        \"SquareSupersetEqual;\": \"\\u2292\",\n        \"SquareUnion;\": \"\\u2294\",\n        \"squarf;\": \"\\u25AA\",\n        \"squ;\": \"\\u25A1\",\n        \"squf;\": \"\\u25AA\",\n        \"srarr;\": \"\\u2192\",\n        \"Sscr;\": \"\\uD835\\uDCAE\",\n        \"sscr;\": \"\\uD835\\uDCC8\",\n        \"ssetmn;\": \"\\u2216\",\n        \"ssmile;\": \"\\u2323\",\n        \"sstarf;\": \"\\u22C6\",\n        \"Star;\": \"\\u22C6\",\n        \"star;\": \"\\u2606\",\n        \"starf;\": \"\\u2605\",\n        \"straightepsilon;\": \"\\u03F5\",\n        \"straightphi;\": \"\\u03D5\",\n        \"strns;\": \"\\xAF\",\n        \"sub;\": \"\\u2282\",\n        \"Sub;\": \"\\u22D0\",\n        \"subdot;\": \"\\u2ABD\",\n        \"subE;\": \"\\u2AC5\",\n        \"sube;\": \"\\u2286\",\n        \"subedot;\": \"\\u2AC3\",\n        \"submult;\": \"\\u2AC1\",\n        \"subnE;\": \"\\u2ACB\",\n        \"subne;\": \"\\u228A\",\n        \"subplus;\": \"\\u2ABF\",\n        \"subrarr;\": \"\\u2979\",\n        \"subset;\": \"\\u2282\",\n        \"Subset;\": \"\\u22D0\",\n        \"subseteq;\": \"\\u2286\",\n        \"subseteqq;\": \"\\u2AC5\",\n        \"SubsetEqual;\": \"\\u2286\",\n        \"subsetneq;\": \"\\u228A\",\n        \"subsetneqq;\": \"\\u2ACB\",\n        \"subsim;\": \"\\u2AC7\",\n        \"subsub;\": \"\\u2AD5\",\n        \"subsup;\": \"\\u2AD3\",\n        \"succapprox;\": \"\\u2AB8\",\n        \"succ;\": \"\\u227B\",\n        \"succcurlyeq;\": \"\\u227D\",\n        \"Succeeds;\": \"\\u227B\",\n        \"SucceedsEqual;\": \"\\u2AB0\",\n        \"SucceedsSlantEqual;\": \"\\u227D\",\n        \"SucceedsTilde;\": \"\\u227F\",\n        \"succeq;\": \"\\u2AB0\",\n        \"succnapprox;\": \"\\u2ABA\",\n        \"succneqq;\": \"\\u2AB6\",\n        \"succnsim;\": \"\\u22E9\",\n        \"succsim;\": \"\\u227F\",\n        \"SuchThat;\": \"\\u220B\",\n        \"sum;\": \"\\u2211\",\n        \"Sum;\": \"\\u2211\",\n        \"sung;\": \"\\u266A\",\n        \"sup1;\": \"\\xB9\",\n        \"sup1\": \"\\xB9\",\n        \"sup2;\": \"\\xB2\",\n        \"sup2\": \"\\xB2\",\n        \"sup3;\": \"\\xB3\",\n        \"sup3\": \"\\xB3\",\n        \"sup;\": \"\\u2283\",\n        \"Sup;\": \"\\u22D1\",\n        \"supdot;\": \"\\u2ABE\",\n        \"supdsub;\": \"\\u2AD8\",\n        \"supE;\": \"\\u2AC6\",\n        \"supe;\": \"\\u2287\",\n        \"supedot;\": \"\\u2AC4\",\n        \"Superset;\": \"\\u2283\",\n        \"SupersetEqual;\": \"\\u2287\",\n        \"suphsol;\": \"\\u27C9\",\n        \"suphsub;\": \"\\u2AD7\",\n        \"suplarr;\": \"\\u297B\",\n        \"supmult;\": \"\\u2AC2\",\n        \"supnE;\": \"\\u2ACC\",\n        \"supne;\": \"\\u228B\",\n        \"supplus;\": \"\\u2AC0\",\n        \"supset;\": \"\\u2283\",\n        \"Supset;\": \"\\u22D1\",\n        \"supseteq;\": \"\\u2287\",\n        \"supseteqq;\": \"\\u2AC6\",\n        \"supsetneq;\": \"\\u228B\",\n        \"supsetneqq;\": \"\\u2ACC\",\n        \"supsim;\": \"\\u2AC8\",\n        \"supsub;\": \"\\u2AD4\",\n        \"supsup;\": \"\\u2AD6\",\n        \"swarhk;\": \"\\u2926\",\n        \"swarr;\": \"\\u2199\",\n        \"swArr;\": \"\\u21D9\",\n        \"swarrow;\": \"\\u2199\",\n        \"swnwar;\": \"\\u292A\",\n        \"szlig;\": \"\\xDF\",\n        \"szlig\": \"\\xDF\",\n        \"Tab;\": \"\\t\",\n        \"target;\": \"\\u2316\",\n        \"Tau;\": \"\\u03A4\",\n        \"tau;\": \"\\u03C4\",\n        \"tbrk;\": \"\\u23B4\",\n        \"Tcaron;\": \"\\u0164\",\n        \"tcaron;\": \"\\u0165\",\n        \"Tcedil;\": \"\\u0162\",\n        \"tcedil;\": \"\\u0163\",\n        \"Tcy;\": \"\\u0422\",\n        \"tcy;\": \"\\u0442\",\n        \"tdot;\": \"\\u20DB\",\n        \"telrec;\": \"\\u2315\",\n        \"Tfr;\": \"\\uD835\\uDD17\",\n        \"tfr;\": \"\\uD835\\uDD31\",\n        \"there4;\": \"\\u2234\",\n        \"therefore;\": \"\\u2234\",\n        \"Therefore;\": \"\\u2234\",\n        \"Theta;\": \"\\u0398\",\n        \"theta;\": \"\\u03B8\",\n        \"thetasym;\": \"\\u03D1\",\n        \"thetav;\": \"\\u03D1\",\n        \"thickapprox;\": \"\\u2248\",\n        \"thicksim;\": \"\\u223C\",\n        \"ThickSpace;\": \"\\u205F\\u200A\",\n        \"ThinSpace;\": \"\\u2009\",\n        \"thinsp;\": \"\\u2009\",\n        \"thkap;\": \"\\u2248\",\n        \"thksim;\": \"\\u223C\",\n        \"THORN;\": \"\\xDE\",\n        \"THORN\": \"\\xDE\",\n        \"thorn;\": \"\\xFE\",\n        \"thorn\": \"\\xFE\",\n        \"tilde;\": \"\\u02DC\",\n        \"Tilde;\": \"\\u223C\",\n        \"TildeEqual;\": \"\\u2243\",\n        \"TildeFullEqual;\": \"\\u2245\",\n        \"TildeTilde;\": \"\\u2248\",\n        \"timesbar;\": \"\\u2A31\",\n        \"timesb;\": \"\\u22A0\",\n        \"times;\": \"\\xD7\",\n        \"times\": \"\\xD7\",\n        \"timesd;\": \"\\u2A30\",\n        \"tint;\": \"\\u222D\",\n        \"toea;\": \"\\u2928\",\n        \"topbot;\": \"\\u2336\",\n        \"topcir;\": \"\\u2AF1\",\n        \"top;\": \"\\u22A4\",\n        \"Topf;\": \"\\uD835\\uDD4B\",\n        \"topf;\": \"\\uD835\\uDD65\",\n        \"topfork;\": \"\\u2ADA\",\n        \"tosa;\": \"\\u2929\",\n        \"tprime;\": \"\\u2034\",\n        \"trade;\": \"\\u2122\",\n        \"TRADE;\": \"\\u2122\",\n        \"triangle;\": \"\\u25B5\",\n        \"triangledown;\": \"\\u25BF\",\n        \"triangleleft;\": \"\\u25C3\",\n        \"trianglelefteq;\": \"\\u22B4\",\n        \"triangleq;\": \"\\u225C\",\n        \"triangleright;\": \"\\u25B9\",\n        \"trianglerighteq;\": \"\\u22B5\",\n        \"tridot;\": \"\\u25EC\",\n        \"trie;\": \"\\u225C\",\n        \"triminus;\": \"\\u2A3A\",\n        \"TripleDot;\": \"\\u20DB\",\n        \"triplus;\": \"\\u2A39\",\n        \"trisb;\": \"\\u29CD\",\n        \"tritime;\": \"\\u2A3B\",\n        \"trpezium;\": \"\\u23E2\",\n        \"Tscr;\": \"\\uD835\\uDCAF\",\n        \"tscr;\": \"\\uD835\\uDCC9\",\n        \"TScy;\": \"\\u0426\",\n        \"tscy;\": \"\\u0446\",\n        \"TSHcy;\": \"\\u040B\",\n        \"tshcy;\": \"\\u045B\",\n        \"Tstrok;\": \"\\u0166\",\n        \"tstrok;\": \"\\u0167\",\n        \"twixt;\": \"\\u226C\",\n        \"twoheadleftarrow;\": \"\\u219E\",\n        \"twoheadrightarrow;\": \"\\u21A0\",\n        \"Uacute;\": \"\\xDA\",\n        \"Uacute\": \"\\xDA\",\n        \"uacute;\": \"\\xFA\",\n        \"uacute\": \"\\xFA\",\n        \"uarr;\": \"\\u2191\",\n        \"Uarr;\": \"\\u219F\",\n        \"uArr;\": \"\\u21D1\",\n        \"Uarrocir;\": \"\\u2949\",\n        \"Ubrcy;\": \"\\u040E\",\n        \"ubrcy;\": \"\\u045E\",\n        \"Ubreve;\": \"\\u016C\",\n        \"ubreve;\": \"\\u016D\",\n        \"Ucirc;\": \"\\xDB\",\n        \"Ucirc\": \"\\xDB\",\n        \"ucirc;\": \"\\xFB\",\n        \"ucirc\": \"\\xFB\",\n        \"Ucy;\": \"\\u0423\",\n        \"ucy;\": \"\\u0443\",\n        \"udarr;\": \"\\u21C5\",\n        \"Udblac;\": \"\\u0170\",\n        \"udblac;\": \"\\u0171\",\n        \"udhar;\": \"\\u296E\",\n        \"ufisht;\": \"\\u297E\",\n        \"Ufr;\": \"\\uD835\\uDD18\",\n        \"ufr;\": \"\\uD835\\uDD32\",\n        \"Ugrave;\": \"\\xD9\",\n        \"Ugrave\": \"\\xD9\",\n        \"ugrave;\": \"\\xF9\",\n        \"ugrave\": \"\\xF9\",\n        \"uHar;\": \"\\u2963\",\n        \"uharl;\": \"\\u21BF\",\n        \"uharr;\": \"\\u21BE\",\n        \"uhblk;\": \"\\u2580\",\n        \"ulcorn;\": \"\\u231C\",\n        \"ulcorner;\": \"\\u231C\",\n        \"ulcrop;\": \"\\u230F\",\n        \"ultri;\": \"\\u25F8\",\n        \"Umacr;\": \"\\u016A\",\n        \"umacr;\": \"\\u016B\",\n        \"uml;\": \"\\xA8\",\n        \"uml\": \"\\xA8\",\n        \"UnderBar;\": \"_\",\n        \"UnderBrace;\": \"\\u23DF\",\n        \"UnderBracket;\": \"\\u23B5\",\n        \"UnderParenthesis;\": \"\\u23DD\",\n        \"Union;\": \"\\u22C3\",\n        \"UnionPlus;\": \"\\u228E\",\n        \"Uogon;\": \"\\u0172\",\n        \"uogon;\": \"\\u0173\",\n        \"Uopf;\": \"\\uD835\\uDD4C\",\n        \"uopf;\": \"\\uD835\\uDD66\",\n        \"UpArrowBar;\": \"\\u2912\",\n        \"uparrow;\": \"\\u2191\",\n        \"UpArrow;\": \"\\u2191\",\n        \"Uparrow;\": \"\\u21D1\",\n        \"UpArrowDownArrow;\": \"\\u21C5\",\n        \"updownarrow;\": \"\\u2195\",\n        \"UpDownArrow;\": \"\\u2195\",\n        \"Updownarrow;\": \"\\u21D5\",\n        \"UpEquilibrium;\": \"\\u296E\",\n        \"upharpoonleft;\": \"\\u21BF\",\n        \"upharpoonright;\": \"\\u21BE\",\n        \"uplus;\": \"\\u228E\",\n        \"UpperLeftArrow;\": \"\\u2196\",\n        \"UpperRightArrow;\": \"\\u2197\",\n        \"upsi;\": \"\\u03C5\",\n        \"Upsi;\": \"\\u03D2\",\n        \"upsih;\": \"\\u03D2\",\n        \"Upsilon;\": \"\\u03A5\",\n        \"upsilon;\": \"\\u03C5\",\n        \"UpTeeArrow;\": \"\\u21A5\",\n        \"UpTee;\": \"\\u22A5\",\n        \"upuparrows;\": \"\\u21C8\",\n        \"urcorn;\": \"\\u231D\",\n        \"urcorner;\": \"\\u231D\",\n        \"urcrop;\": \"\\u230E\",\n        \"Uring;\": \"\\u016E\",\n        \"uring;\": \"\\u016F\",\n        \"urtri;\": \"\\u25F9\",\n        \"Uscr;\": \"\\uD835\\uDCB0\",\n        \"uscr;\": \"\\uD835\\uDCCA\",\n        \"utdot;\": \"\\u22F0\",\n        \"Utilde;\": \"\\u0168\",\n        \"utilde;\": \"\\u0169\",\n        \"utri;\": \"\\u25B5\",\n        \"utrif;\": \"\\u25B4\",\n        \"uuarr;\": \"\\u21C8\",\n        \"Uuml;\": \"\\xDC\",\n        \"Uuml\": \"\\xDC\",\n        \"uuml;\": \"\\xFC\",\n        \"uuml\": \"\\xFC\",\n        \"uwangle;\": \"\\u29A7\",\n        \"vangrt;\": \"\\u299C\",\n        \"varepsilon;\": \"\\u03F5\",\n        \"varkappa;\": \"\\u03F0\",\n        \"varnothing;\": \"\\u2205\",\n        \"varphi;\": \"\\u03D5\",\n        \"varpi;\": \"\\u03D6\",\n        \"varpropto;\": \"\\u221D\",\n        \"varr;\": \"\\u2195\",\n        \"vArr;\": \"\\u21D5\",\n        \"varrho;\": \"\\u03F1\",\n        \"varsigma;\": \"\\u03C2\",\n        \"varsubsetneq;\": \"\\u228A\\uFE00\",\n        \"varsubsetneqq;\": \"\\u2ACB\\uFE00\",\n        \"varsupsetneq;\": \"\\u228B\\uFE00\",\n        \"varsupsetneqq;\": \"\\u2ACC\\uFE00\",\n        \"vartheta;\": \"\\u03D1\",\n        \"vartriangleleft;\": \"\\u22B2\",\n        \"vartriangleright;\": \"\\u22B3\",\n        \"vBar;\": \"\\u2AE8\",\n        \"Vbar;\": \"\\u2AEB\",\n        \"vBarv;\": \"\\u2AE9\",\n        \"Vcy;\": \"\\u0412\",\n        \"vcy;\": \"\\u0432\",\n        \"vdash;\": \"\\u22A2\",\n        \"vDash;\": \"\\u22A8\",\n        \"Vdash;\": \"\\u22A9\",\n        \"VDash;\": \"\\u22AB\",\n        \"Vdashl;\": \"\\u2AE6\",\n        \"veebar;\": \"\\u22BB\",\n        \"vee;\": \"\\u2228\",\n        \"Vee;\": \"\\u22C1\",\n        \"veeeq;\": \"\\u225A\",\n        \"vellip;\": \"\\u22EE\",\n        \"verbar;\": \"|\",\n        \"Verbar;\": \"\\u2016\",\n        \"vert;\": \"|\",\n        \"Vert;\": \"\\u2016\",\n        \"VerticalBar;\": \"\\u2223\",\n        \"VerticalLine;\": \"|\",\n        \"VerticalSeparator;\": \"\\u2758\",\n        \"VerticalTilde;\": \"\\u2240\",\n        \"VeryThinSpace;\": \"\\u200A\",\n        \"Vfr;\": \"\\uD835\\uDD19\",\n        \"vfr;\": \"\\uD835\\uDD33\",\n        \"vltri;\": \"\\u22B2\",\n        \"vnsub;\": \"\\u2282\\u20D2\",\n        \"vnsup;\": \"\\u2283\\u20D2\",\n        \"Vopf;\": \"\\uD835\\uDD4D\",\n        \"vopf;\": \"\\uD835\\uDD67\",\n        \"vprop;\": \"\\u221D\",\n        \"vrtri;\": \"\\u22B3\",\n        \"Vscr;\": \"\\uD835\\uDCB1\",\n        \"vscr;\": \"\\uD835\\uDCCB\",\n        \"vsubnE;\": \"\\u2ACB\\uFE00\",\n        \"vsubne;\": \"\\u228A\\uFE00\",\n        \"vsupnE;\": \"\\u2ACC\\uFE00\",\n        \"vsupne;\": \"\\u228B\\uFE00\",\n        \"Vvdash;\": \"\\u22AA\",\n        \"vzigzag;\": \"\\u299A\",\n        \"Wcirc;\": \"\\u0174\",\n        \"wcirc;\": \"\\u0175\",\n        \"wedbar;\": \"\\u2A5F\",\n        \"wedge;\": \"\\u2227\",\n        \"Wedge;\": \"\\u22C0\",\n        \"wedgeq;\": \"\\u2259\",\n        \"weierp;\": \"\\u2118\",\n        \"Wfr;\": \"\\uD835\\uDD1A\",\n        \"wfr;\": \"\\uD835\\uDD34\",\n        \"Wopf;\": \"\\uD835\\uDD4E\",\n        \"wopf;\": \"\\uD835\\uDD68\",\n        \"wp;\": \"\\u2118\",\n        \"wr;\": \"\\u2240\",\n        \"wreath;\": \"\\u2240\",\n        \"Wscr;\": \"\\uD835\\uDCB2\",\n        \"wscr;\": \"\\uD835\\uDCCC\",\n        \"xcap;\": \"\\u22C2\",\n        \"xcirc;\": \"\\u25EF\",\n        \"xcup;\": \"\\u22C3\",\n        \"xdtri;\": \"\\u25BD\",\n        \"Xfr;\": \"\\uD835\\uDD1B\",\n        \"xfr;\": \"\\uD835\\uDD35\",\n        \"xharr;\": \"\\u27F7\",\n        \"xhArr;\": \"\\u27FA\",\n        \"Xi;\": \"\\u039E\",\n        \"xi;\": \"\\u03BE\",\n        \"xlarr;\": \"\\u27F5\",\n        \"xlArr;\": \"\\u27F8\",\n        \"xmap;\": \"\\u27FC\",\n        \"xnis;\": \"\\u22FB\",\n        \"xodot;\": \"\\u2A00\",\n        \"Xopf;\": \"\\uD835\\uDD4F\",\n        \"xopf;\": \"\\uD835\\uDD69\",\n        \"xoplus;\": \"\\u2A01\",\n        \"xotime;\": \"\\u2A02\",\n        \"xrarr;\": \"\\u27F6\",\n        \"xrArr;\": \"\\u27F9\",\n        \"Xscr;\": \"\\uD835\\uDCB3\",\n        \"xscr;\": \"\\uD835\\uDCCD\",\n        \"xsqcup;\": \"\\u2A06\",\n        \"xuplus;\": \"\\u2A04\",\n        \"xutri;\": \"\\u25B3\",\n        \"xvee;\": \"\\u22C1\",\n        \"xwedge;\": \"\\u22C0\",\n        \"Yacute;\": \"\\xDD\",\n        \"Yacute\": \"\\xDD\",\n        \"yacute;\": \"\\xFD\",\n        \"yacute\": \"\\xFD\",\n        \"YAcy;\": \"\\u042F\",\n        \"yacy;\": \"\\u044F\",\n        \"Ycirc;\": \"\\u0176\",\n        \"ycirc;\": \"\\u0177\",\n        \"Ycy;\": \"\\u042B\",\n        \"ycy;\": \"\\u044B\",\n        \"yen;\": \"\\xA5\",\n        \"yen\": \"\\xA5\",\n        \"Yfr;\": \"\\uD835\\uDD1C\",\n        \"yfr;\": \"\\uD835\\uDD36\",\n        \"YIcy;\": \"\\u0407\",\n        \"yicy;\": \"\\u0457\",\n        \"Yopf;\": \"\\uD835\\uDD50\",\n        \"yopf;\": \"\\uD835\\uDD6A\",\n        \"Yscr;\": \"\\uD835\\uDCB4\",\n        \"yscr;\": \"\\uD835\\uDCCE\",\n        \"YUcy;\": \"\\u042E\",\n        \"yucy;\": \"\\u044E\",\n        \"yuml;\": \"\\xFF\",\n        \"yuml\": \"\\xFF\",\n        \"Yuml;\": \"\\u0178\",\n        \"Zacute;\": \"\\u0179\",\n        \"zacute;\": \"\\u017A\",\n        \"Zcaron;\": \"\\u017D\",\n        \"zcaron;\": \"\\u017E\",\n        \"Zcy;\": \"\\u0417\",\n        \"zcy;\": \"\\u0437\",\n        \"Zdot;\": \"\\u017B\",\n        \"zdot;\": \"\\u017C\",\n        \"zeetrf;\": \"\\u2128\",\n        \"ZeroWidthSpace;\": \"\\u200B\",\n        \"Zeta;\": \"\\u0396\",\n        \"zeta;\": \"\\u03B6\",\n        \"zfr;\": \"\\uD835\\uDD37\",\n        \"Zfr;\": \"\\u2128\",\n        \"ZHcy;\": \"\\u0416\",\n        \"zhcy;\": \"\\u0436\",\n        \"zigrarr;\": \"\\u21DD\",\n        \"zopf;\": \"\\uD835\\uDD6B\",\n        \"Zopf;\": \"\\u2124\",\n        \"Zscr;\": \"\\uD835\\uDCB5\",\n        \"zscr;\": \"\\uD835\\uDCCF\",\n        \"zwj;\": \"\\u200D\",\n        \"zwnj;\": \"\\u200C\"\n      };\n    }, {}],\n    13: [function (_dereq_, module, exports) {\n      var util = _dereq_('util/');\n      var pSlice = Array.prototype.slice;\n      var hasOwn = Object.prototype.hasOwnProperty;\n      var assert = module.exports = ok;\n      assert.AssertionError = function AssertionError(options) {\n        this.name = 'AssertionError';\n        this.actual = options.actual;\n        this.expected = options.expected;\n        this.operator = options.operator;\n        if (options.message) {\n          this.message = options.message;\n          this.generatedMessage = false;\n        } else {\n          this.message = getMessage(this);\n          this.generatedMessage = true;\n        }\n        var stackStartFunction = options.stackStartFunction || fail;\n        if (Error.captureStackTrace) {\n          Error.captureStackTrace(this, stackStartFunction);\n        } else {\n          var err = new Error();\n          if (err.stack) {\n            var out = err.stack;\n            var fn_name = stackStartFunction.name;\n            var idx = out.indexOf('\\n' + fn_name);\n            if (idx >= 0) {\n              var next_line = out.indexOf('\\n', idx + 1);\n              out = out.substring(next_line + 1);\n            }\n            this.stack = out;\n          }\n        }\n      };\n      util.inherits(assert.AssertionError, Error);\n      function replacer(key, value) {\n        if (util.isUndefined(value)) {\n          return '' + value;\n        }\n        if (util.isNumber(value) && (isNaN(value) || !isFinite(value))) {\n          return value.toString();\n        }\n        if (util.isFunction(value) || util.isRegExp(value)) {\n          return value.toString();\n        }\n        return value;\n      }\n      function truncate(s, n) {\n        if (util.isString(s)) {\n          return s.length < n ? s : s.slice(0, n);\n        } else {\n          return s;\n        }\n      }\n      function getMessage(self) {\n        return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' + self.operator + ' ' + truncate(JSON.stringify(self.expected, replacer), 128);\n      }\n      function fail(actual, expected, message, operator, stackStartFunction) {\n        throw new assert.AssertionError({\n          message: message,\n          actual: actual,\n          expected: expected,\n          operator: operator,\n          stackStartFunction: stackStartFunction\n        });\n      }\n      assert.fail = fail;\n      function ok(value, message) {\n        if (!value) fail(value, true, message, '==', assert.ok);\n      }\n      assert.ok = ok;\n      assert.equal = function equal(actual, expected, message) {\n        if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n      };\n      assert.notEqual = function notEqual(actual, expected, message) {\n        if (actual == expected) {\n          fail(actual, expected, message, '!=', assert.notEqual);\n        }\n      };\n      assert.deepEqual = function deepEqual(actual, expected, message) {\n        if (!_deepEqual(actual, expected)) {\n          fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n        }\n      };\n      function _deepEqual(actual, expected) {\n        if (actual === expected) {\n          return true;\n        } else if (util.isBuffer(actual) && util.isBuffer(expected)) {\n          if (actual.length != expected.length) return false;\n          for (var i = 0; i < actual.length; i++) {\n            if (actual[i] !== expected[i]) return false;\n          }\n          return true;\n        } else if (util.isDate(actual) && util.isDate(expected)) {\n          return actual.getTime() === expected.getTime();\n        } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n          return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase;\n        } else if (!util.isObject(actual) && !util.isObject(expected)) {\n          return actual == expected;\n        } else {\n          return objEquiv(actual, expected);\n        }\n      }\n      function isArguments(object) {\n        return Object.prototype.toString.call(object) == '[object Arguments]';\n      }\n      function objEquiv(a, b) {\n        if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b)) return false;\n        if (a.prototype !== b.prototype) return false;\n        if (isArguments(a)) {\n          if (!isArguments(b)) {\n            return false;\n          }\n          a = pSlice.call(a);\n          b = pSlice.call(b);\n          return _deepEqual(a, b);\n        }\n        try {\n          var ka = objectKeys(a),\n            kb = objectKeys(b),\n            key,\n            i;\n        } catch (e) {\n          //happens when one is a string literal and the other isn't\n          return false;\n        }\n        if (ka.length != kb.length) return false;\n        ka.sort();\n        kb.sort();\n        for (i = ka.length - 1; i >= 0; i--) {\n          if (ka[i] != kb[i]) return false;\n        }\n        for (i = ka.length - 1; i >= 0; i--) {\n          key = ka[i];\n          if (!_deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n      }\n      assert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n        if (_deepEqual(actual, expected)) {\n          fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n        }\n      };\n      assert.strictEqual = function strictEqual(actual, expected, message) {\n        if (actual !== expected) {\n          fail(actual, expected, message, '===', assert.strictEqual);\n        }\n      };\n      assert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n        if (actual === expected) {\n          fail(actual, expected, message, '!==', assert.notStrictEqual);\n        }\n      };\n      function expectedException(actual, expected) {\n        if (!actual || !expected) {\n          return false;\n        }\n        if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n          return expected.test(actual);\n        } else if (actual instanceof expected) {\n          return true;\n        } else if (expected.call({}, actual) === true) {\n          return true;\n        }\n        return false;\n      }\n      function _throws(shouldThrow, block, expected, message) {\n        var actual;\n        if (util.isString(expected)) {\n          message = expected;\n          expected = null;\n        }\n        try {\n          block();\n        } catch (e) {\n          actual = e;\n        }\n        message = (expected && expected.name ? ' (' + expected.name + ').' : '.') + (message ? ' ' + message : '.');\n        if (shouldThrow && !actual) {\n          fail(actual, expected, 'Missing expected exception' + message);\n        }\n        if (!shouldThrow && expectedException(actual, expected)) {\n          fail(actual, expected, 'Got unwanted exception' + message);\n        }\n        if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {\n          throw actual;\n        }\n      }\n      assert.throws = function (block, /*optional*/error, /*optional*/message) {\n        _throws.apply(this, [true].concat(pSlice.call(arguments)));\n      };\n      assert.doesNotThrow = function (block, /*optional*/message) {\n        _throws.apply(this, [false].concat(pSlice.call(arguments)));\n      };\n      assert.ifError = function (err) {\n        if (err) {\n          throw err;\n        }\n      };\n      var objectKeys = Object.keys || function (obj) {\n        var keys = [];\n        for (var key in obj) {\n          if (hasOwn.call(obj, key)) keys.push(key);\n        }\n        return keys;\n      };\n    }, {\n      \"util/\": 15\n    }],\n    14: [function (_dereq_, module, exports) {\n      module.exports = function isBuffer(arg) {\n        return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n      };\n    }, {}],\n    15: [function (_dereq_, module, exports) {\n      (function (process, global) {\n        var formatRegExp = /%[sdj%]/g;\n        exports.format = function (f) {\n          if (!isString(f)) {\n            var objects = [];\n            for (var i = 0; i < arguments.length; i++) {\n              objects.push(inspect(arguments[i]));\n            }\n            return objects.join(' ');\n          }\n          var i = 1;\n          var args = arguments;\n          var len = args.length;\n          var str = String(f).replace(formatRegExp, function (x) {\n            if (x === '%%') return '%';\n            if (i >= len) return x;\n            switch (x) {\n              case '%s':\n                return String(args[i++]);\n              case '%d':\n                return Number(args[i++]);\n              case '%j':\n                try {\n                  return JSON.stringify(args[i++]);\n                } catch (_) {\n                  return '[Circular]';\n                }\n              default:\n                return x;\n            }\n          });\n          for (var x = args[i]; i < len; x = args[++i]) {\n            if (isNull(x) || !isObject(x)) {\n              str += ' ' + x;\n            } else {\n              str += ' ' + inspect(x);\n            }\n          }\n          return str;\n        };\n        exports.deprecate = function (fn, msg) {\n          if (isUndefined(global.process)) {\n            return function () {\n              return exports.deprecate(fn, msg).apply(this, arguments);\n            };\n          }\n          if (process.noDeprecation === true) {\n            return fn;\n          }\n          var warned = false;\n          function deprecated() {\n            if (!warned) {\n              if (process.throwDeprecation) {\n                throw new Error(msg);\n              } else if (process.traceDeprecation) {\n                console.trace(msg);\n              } else {\n                console.error(msg);\n              }\n              warned = true;\n            }\n            return fn.apply(this, arguments);\n          }\n          return deprecated;\n        };\n        var debugs = {};\n        var debugEnviron;\n        exports.debuglog = function (set) {\n          if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n          set = set.toUpperCase();\n          if (!debugs[set]) {\n            if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n              var pid = process.pid;\n              debugs[set] = function () {\n                var msg = exports.format.apply(exports, arguments);\n                console.error('%s %d: %s', set, pid, msg);\n              };\n            } else {\n              debugs[set] = function () {};\n            }\n          }\n          return debugs[set];\n        };\n        function inspect(obj, opts) {\n          var ctx = {\n            seen: [],\n            stylize: stylizeNoColor\n          };\n          if (arguments.length >= 3) ctx.depth = arguments[2];\n          if (arguments.length >= 4) ctx.colors = arguments[3];\n          if (isBoolean(opts)) {\n            ctx.showHidden = opts;\n          } else if (opts) {\n            exports._extend(ctx, opts);\n          }\n          if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n          if (isUndefined(ctx.depth)) ctx.depth = 2;\n          if (isUndefined(ctx.colors)) ctx.colors = false;\n          if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n          if (ctx.colors) ctx.stylize = stylizeWithColor;\n          return formatValue(ctx, obj, ctx.depth);\n        }\n        exports.inspect = inspect;\n        inspect.colors = {\n          'bold': [1, 22],\n          'italic': [3, 23],\n          'underline': [4, 24],\n          'inverse': [7, 27],\n          'white': [37, 39],\n          'grey': [90, 39],\n          'black': [30, 39],\n          'blue': [34, 39],\n          'cyan': [36, 39],\n          'green': [32, 39],\n          'magenta': [35, 39],\n          'red': [31, 39],\n          'yellow': [33, 39]\n        };\n        inspect.styles = {\n          'special': 'cyan',\n          'number': 'yellow',\n          'boolean': 'yellow',\n          'undefined': 'grey',\n          'null': 'bold',\n          'string': 'green',\n          'date': 'magenta',\n          'regexp': 'red'\n        };\n        function stylizeWithColor(str, styleType) {\n          var style = inspect.styles[styleType];\n          if (style) {\n            return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n          } else {\n            return str;\n          }\n        }\n        function stylizeNoColor(str, styleType) {\n          return str;\n        }\n        function arrayToHash(array) {\n          var hash = {};\n          array.forEach(function (val, idx) {\n            hash[val] = true;\n          });\n          return hash;\n        }\n        function formatValue(ctx, value, recurseTimes) {\n          if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports.inspect && !(value.constructor && value.constructor.prototype === value)) {\n            var ret = value.inspect(recurseTimes, ctx);\n            if (!isString(ret)) {\n              ret = formatValue(ctx, ret, recurseTimes);\n            }\n            return ret;\n          }\n          var primitive = formatPrimitive(ctx, value);\n          if (primitive) {\n            return primitive;\n          }\n          var keys = Object.keys(value);\n          var visibleKeys = arrayToHash(keys);\n          if (ctx.showHidden) {\n            keys = Object.getOwnPropertyNames(value);\n          }\n          if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n            return formatError(value);\n          }\n          if (keys.length === 0) {\n            if (isFunction(value)) {\n              var name = value.name ? ': ' + value.name : '';\n              return ctx.stylize('[Function' + name + ']', 'special');\n            }\n            if (isRegExp(value)) {\n              return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n            }\n            if (isDate(value)) {\n              return ctx.stylize(Date.prototype.toString.call(value), 'date');\n            }\n            if (isError(value)) {\n              return formatError(value);\n            }\n          }\n          var base = '',\n            array = false,\n            braces = ['{', '}'];\n          if (isArray(value)) {\n            array = true;\n            braces = ['[', ']'];\n          }\n          if (isFunction(value)) {\n            var n = value.name ? ': ' + value.name : '';\n            base = ' [Function' + n + ']';\n          }\n          if (isRegExp(value)) {\n            base = ' ' + RegExp.prototype.toString.call(value);\n          }\n          if (isDate(value)) {\n            base = ' ' + Date.prototype.toUTCString.call(value);\n          }\n          if (isError(value)) {\n            base = ' ' + formatError(value);\n          }\n          if (keys.length === 0 && (!array || value.length == 0)) {\n            return braces[0] + base + braces[1];\n          }\n          if (recurseTimes < 0) {\n            if (isRegExp(value)) {\n              return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n            } else {\n              return ctx.stylize('[Object]', 'special');\n            }\n          }\n          ctx.seen.push(value);\n          var output;\n          if (array) {\n            output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n          } else {\n            output = keys.map(function (key) {\n              return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n            });\n          }\n          ctx.seen.pop();\n          return reduceToSingleString(output, base, braces);\n        }\n        function formatPrimitive(ctx, value) {\n          if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n          if (isString(value)) {\n            var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n            return ctx.stylize(simple, 'string');\n          }\n          if (isNumber(value)) return ctx.stylize('' + value, 'number');\n          if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');\n          if (isNull(value)) return ctx.stylize('null', 'null');\n        }\n        function formatError(value) {\n          return '[' + Error.prototype.toString.call(value) + ']';\n        }\n        function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n          var output = [];\n          for (var i = 0, l = value.length; i < l; ++i) {\n            if (hasOwnProperty(value, String(i))) {\n              output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n            } else {\n              output.push('');\n            }\n          }\n          keys.forEach(function (key) {\n            if (!key.match(/^\\d+$/)) {\n              output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n            }\n          });\n          return output;\n        }\n        function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n          var name, str, desc;\n          desc = Object.getOwnPropertyDescriptor(value, key) || {\n            value: value[key]\n          };\n          if (desc.get) {\n            if (desc.set) {\n              str = ctx.stylize('[Getter/Setter]', 'special');\n            } else {\n              str = ctx.stylize('[Getter]', 'special');\n            }\n          } else {\n            if (desc.set) {\n              str = ctx.stylize('[Setter]', 'special');\n            }\n          }\n          if (!hasOwnProperty(visibleKeys, key)) {\n            name = '[' + key + ']';\n          }\n          if (!str) {\n            if (ctx.seen.indexOf(desc.value) < 0) {\n              if (isNull(recurseTimes)) {\n                str = formatValue(ctx, desc.value, null);\n              } else {\n                str = formatValue(ctx, desc.value, recurseTimes - 1);\n              }\n              if (str.indexOf('\\n') > -1) {\n                if (array) {\n                  str = str.split('\\n').map(function (line) {\n                    return '  ' + line;\n                  }).join('\\n').substr(2);\n                } else {\n                  str = '\\n' + str.split('\\n').map(function (line) {\n                    return '   ' + line;\n                  }).join('\\n');\n                }\n              }\n            } else {\n              str = ctx.stylize('[Circular]', 'special');\n            }\n          }\n          if (isUndefined(name)) {\n            if (array && key.match(/^\\d+$/)) {\n              return str;\n            }\n            name = JSON.stringify('' + key);\n            if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n              name = name.substr(1, name.length - 2);\n              name = ctx.stylize(name, 'name');\n            } else {\n              name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n              name = ctx.stylize(name, 'string');\n            }\n          }\n          return name + ': ' + str;\n        }\n        function reduceToSingleString(output, base, braces) {\n          var numLinesEst = 0;\n          var length = output.reduce(function (prev, cur) {\n            numLinesEst++;\n            if (cur.indexOf('\\n') >= 0) numLinesEst++;\n            return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n          }, 0);\n          if (length > 60) {\n            return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n          }\n          return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n        }\n        function isArray(ar) {\n          return Array.isArray(ar);\n        }\n        exports.isArray = isArray;\n        function isBoolean(arg) {\n          return typeof arg === 'boolean';\n        }\n        exports.isBoolean = isBoolean;\n        function isNull(arg) {\n          return arg === null;\n        }\n        exports.isNull = isNull;\n        function isNullOrUndefined(arg) {\n          return arg == null;\n        }\n        exports.isNullOrUndefined = isNullOrUndefined;\n        function isNumber(arg) {\n          return typeof arg === 'number';\n        }\n        exports.isNumber = isNumber;\n        function isString(arg) {\n          return typeof arg === 'string';\n        }\n        exports.isString = isString;\n        function isSymbol(arg) {\n          return typeof arg === 'symbol';\n        }\n        exports.isSymbol = isSymbol;\n        function isUndefined(arg) {\n          return arg === void 0;\n        }\n        exports.isUndefined = isUndefined;\n        function isRegExp(re) {\n          return isObject(re) && objectToString(re) === '[object RegExp]';\n        }\n        exports.isRegExp = isRegExp;\n        function isObject(arg) {\n          return typeof arg === 'object' && arg !== null;\n        }\n        exports.isObject = isObject;\n        function isDate(d) {\n          return isObject(d) && objectToString(d) === '[object Date]';\n        }\n        exports.isDate = isDate;\n        function isError(e) {\n          return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n        }\n        exports.isError = isError;\n        function isFunction(arg) {\n          return typeof arg === 'function';\n        }\n        exports.isFunction = isFunction;\n        function isPrimitive(arg) {\n          return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' ||\n          // ES6 symbol\n          typeof arg === 'undefined';\n        }\n        exports.isPrimitive = isPrimitive;\n        exports.isBuffer = _dereq_('./support/isBuffer');\n        function objectToString(o) {\n          return Object.prototype.toString.call(o);\n        }\n        function pad(n) {\n          return n < 10 ? '0' + n.toString(10) : n.toString(10);\n        }\n        var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        function timestamp() {\n          var d = new Date();\n          var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n          return [d.getDate(), months[d.getMonth()], time].join(' ');\n        }\n        exports.log = function () {\n          console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n        };\n        exports.inherits = _dereq_('inherits');\n        exports._extend = function (origin, add) {\n          if (!add || !isObject(add)) return origin;\n          var keys = Object.keys(add);\n          var i = keys.length;\n          while (i--) {\n            origin[keys[i]] = add[keys[i]];\n          }\n          return origin;\n        };\n        function hasOwnProperty(obj, prop) {\n          return Object.prototype.hasOwnProperty.call(obj, prop);\n        }\n      }).call(this, _dereq_(\"/usr/local/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"./support/isBuffer\": 14,\n      \"/usr/local/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js\": 18,\n      \"inherits\": 17\n    }],\n    16: [function (_dereq_, module, exports) {\n      function EventEmitter() {\n        this._events = this._events || {};\n        this._maxListeners = this._maxListeners || undefined;\n      }\n      module.exports = EventEmitter;\n      EventEmitter.EventEmitter = EventEmitter;\n      EventEmitter.prototype._events = undefined;\n      EventEmitter.prototype._maxListeners = undefined;\n      EventEmitter.defaultMaxListeners = 10;\n      EventEmitter.prototype.setMaxListeners = function (n) {\n        if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');\n        this._maxListeners = n;\n        return this;\n      };\n      EventEmitter.prototype.emit = function (type) {\n        var er, handler, len, args, i, listeners;\n        if (!this._events) this._events = {};\n        if (type === 'error') {\n          if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {\n            er = arguments[1];\n            if (er instanceof Error) {\n              throw er; // Unhandled 'error' event\n            } else {\n              throw TypeError('Uncaught, unspecified \"error\" event.');\n            }\n            return false;\n          }\n        }\n        handler = this._events[type];\n        if (isUndefined(handler)) return false;\n        if (isFunction(handler)) {\n          switch (arguments.length) {\n            case 1:\n              handler.call(this);\n              break;\n            case 2:\n              handler.call(this, arguments[1]);\n              break;\n            case 3:\n              handler.call(this, arguments[1], arguments[2]);\n              break;\n            default:\n              len = arguments.length;\n              args = new Array(len - 1);\n              for (i = 1; i < len; i++) args[i - 1] = arguments[i];\n              handler.apply(this, args);\n          }\n        } else if (isObject(handler)) {\n          len = arguments.length;\n          args = new Array(len - 1);\n          for (i = 1; i < len; i++) args[i - 1] = arguments[i];\n          listeners = handler.slice();\n          len = listeners.length;\n          for (i = 0; i < len; i++) listeners[i].apply(this, args);\n        }\n        return true;\n      };\n      EventEmitter.prototype.addListener = function (type, listener) {\n        var m;\n        if (!isFunction(listener)) throw TypeError('listener must be a function');\n        if (!this._events) this._events = {};\n        if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);\n        if (!this._events[type]) this._events[type] = listener;else if (isObject(this._events[type])) this._events[type].push(listener);else this._events[type] = [this._events[type], listener];\n        if (isObject(this._events[type]) && !this._events[type].warned) {\n          var m;\n          if (!isUndefined(this._maxListeners)) {\n            m = this._maxListeners;\n          } else {\n            m = EventEmitter.defaultMaxListeners;\n          }\n          if (m && m > 0 && this._events[type].length > m) {\n            this._events[type].warned = true;\n            console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);\n            console.trace();\n          }\n        }\n        return this;\n      };\n      EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n      EventEmitter.prototype.once = function (type, listener) {\n        if (!isFunction(listener)) throw TypeError('listener must be a function');\n        var fired = false;\n        function g() {\n          this.removeListener(type, g);\n          if (!fired) {\n            fired = true;\n            listener.apply(this, arguments);\n          }\n        }\n        g.listener = listener;\n        this.on(type, g);\n        return this;\n      };\n      EventEmitter.prototype.removeListener = function (type, listener) {\n        var list, position, length, i;\n        if (!isFunction(listener)) throw TypeError('listener must be a function');\n        if (!this._events || !this._events[type]) return this;\n        list = this._events[type];\n        length = list.length;\n        position = -1;\n        if (list === listener || isFunction(list.listener) && list.listener === listener) {\n          delete this._events[type];\n          if (this._events.removeListener) this.emit('removeListener', type, listener);\n        } else if (isObject(list)) {\n          for (i = length; i-- > 0;) {\n            if (list[i] === listener || list[i].listener && list[i].listener === listener) {\n              position = i;\n              break;\n            }\n          }\n          if (position < 0) return this;\n          if (list.length === 1) {\n            list.length = 0;\n            delete this._events[type];\n          } else {\n            list.splice(position, 1);\n          }\n          if (this._events.removeListener) this.emit('removeListener', type, listener);\n        }\n        return this;\n      };\n      EventEmitter.prototype.removeAllListeners = function (type) {\n        var key, listeners;\n        if (!this._events) return this;\n        if (!this._events.removeListener) {\n          if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];\n          return this;\n        }\n        if (arguments.length === 0) {\n          for (key in this._events) {\n            if (key === 'removeListener') continue;\n            this.removeAllListeners(key);\n          }\n          this.removeAllListeners('removeListener');\n          this._events = {};\n          return this;\n        }\n        listeners = this._events[type];\n        if (isFunction(listeners)) {\n          this.removeListener(type, listeners);\n        } else {\n          while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);\n        }\n        delete this._events[type];\n        return this;\n      };\n      EventEmitter.prototype.listeners = function (type) {\n        var ret;\n        if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();\n        return ret;\n      };\n      EventEmitter.listenerCount = function (emitter, type) {\n        var ret;\n        if (!emitter._events || !emitter._events[type]) ret = 0;else if (isFunction(emitter._events[type])) ret = 1;else ret = emitter._events[type].length;\n        return ret;\n      };\n      function isFunction(arg) {\n        return typeof arg === 'function';\n      }\n      function isNumber(arg) {\n        return typeof arg === 'number';\n      }\n      function isObject(arg) {\n        return typeof arg === 'object' && arg !== null;\n      }\n      function isUndefined(arg) {\n        return arg === void 0;\n      }\n    }, {}],\n    17: [function (_dereq_, module, exports) {\n      if (typeof Object.create === 'function') {\n        module.exports = function inherits(ctor, superCtor) {\n          ctor.super_ = superCtor;\n          ctor.prototype = Object.create(superCtor.prototype, {\n            constructor: {\n              value: ctor,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n        };\n      } else {\n        module.exports = function inherits(ctor, superCtor) {\n          ctor.super_ = superCtor;\n          var TempCtor = function TempCtor() {};\n          TempCtor.prototype = superCtor.prototype;\n          ctor.prototype = new TempCtor();\n          ctor.prototype.constructor = ctor;\n        };\n      }\n    }, {}],\n    18: [function (_dereq_, module, exports) {\n      var process = module.exports = {};\n      process.nextTick = function () {\n        var canSetImmediate = typeof window !== 'undefined' && window.setImmediate;\n        var canPost = typeof window !== 'undefined' && window.postMessage && window.addEventListener;\n        if (canSetImmediate) {\n          return function (f) {\n            return window.setImmediate(f);\n          };\n        }\n        if (canPost) {\n          var queue = [];\n          window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n              ev.stopPropagation();\n              if (queue.length > 0) {\n                var fn = queue.shift();\n                fn();\n              }\n            }\n          }, true);\n          return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n          };\n        }\n        return function nextTick(fn) {\n          setTimeout(fn, 0);\n        };\n      }();\n      process.title = 'browser';\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n      function noop() {}\n      process.on = noop;\n      process.once = noop;\n      process.off = noop;\n      process.emit = noop;\n      process.binding = function (name) {\n        throw new Error('process.binding is not supported');\n      };\n      process.cwd = function () {\n        return '/';\n      };\n      process.chdir = function (dir) {\n        throw new Error('process.chdir is not supported');\n      };\n    }, {}],\n    19: [function (_dereq_, module, exports) {\n      module.exports = _dereq_(14);\n    }, {}],\n    20: [function (_dereq_, module, exports) {\n      module.exports = _dereq_(15);\n    }, {\n      \"./support/isBuffer\": 19,\n      \"/usr/local/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js\": 18,\n      \"inherits\": 17\n    }]\n  }, {}, [9])(9);\n});\nace.define(\"ace/mode/html_worker\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var lang = require(\"../lib/lang\");\n  var Mirror = require(\"../worker/mirror\").Mirror;\n  var SAXParser = require(\"./html/saxparser\").SAXParser;\n  var errorTypes = {\n    \"expected-doctype-but-got-start-tag\": \"info\",\n    \"expected-doctype-but-got-chars\": \"info\",\n    \"non-html-root\": \"info\"\n  };\n  var Worker = exports.Worker = function (sender) {\n    Mirror.call(this, sender);\n    this.setTimeout(400);\n    this.context = null;\n  };\n  oop.inherits(Worker, Mirror);\n  (function () {\n    this.setOptions = function (options) {\n      this.context = options.context;\n    };\n    this.onUpdate = function () {\n      var value = this.doc.getValue();\n      if (!value) return;\n      var parser = new SAXParser();\n      var errors = [];\n      var noop = function noop() {};\n      parser.contentHandler = {\n        startDocument: noop,\n        endDocument: noop,\n        startElement: noop,\n        endElement: noop,\n        characters: noop\n      };\n      parser.errorHandler = {\n        error: function error(message, location, code) {\n          errors.push({\n            row: location.line,\n            column: location.column,\n            text: message,\n            type: errorTypes[code] || \"error\"\n          });\n        }\n      };\n      parser.parse(value, this.context);\n      this.sender.emit(\"error\", errors);\n    };\n  }).call(Worker.prototype);\n});","map":null,"metadata":{},"sourceType":"script"}