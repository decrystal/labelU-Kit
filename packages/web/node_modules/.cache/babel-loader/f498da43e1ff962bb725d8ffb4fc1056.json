{"ast":null,"code":"import _slicedToArray from\"/Users/decrytal-ade/project/work/shlab/labelU-Kit/packages/web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/Users/decrytal-ade/project/work/shlab/labelU-Kit/packages/web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// import { COLORS_ARRAY } from '@/constant/style';\nimport{addInputList,changeInputList,deleteInputList}from'../../../../utils/tool/editTool';import{CloseCircleFilled}from'@ant-design/icons';import{Button,Input as SenseInput}from'antd';import React,{useRef,useState}from'react';// import MonacoEditor from 'react-monaco-editor';\n// import styles from '../../index.module.scss';\nimport'./index.less';import{useTranslation}from'react-i18next';// const { COLORS_ARRAY } = cStyle;\nimport{jsx as _jsx}from\"@emotion/react/jsx-runtime\";import{jsxs as _jsxs}from\"@emotion/react/jsx-runtime\";var EDIT_SUBSELECTED=false;export var ColorTag=function ColorTag(_ref){var color=_ref.color,style=_ref.style;return _jsx(\"span\",{style:_objectSpread({display:'inline-block',height:14,width:14,backgroundColor:color,verticalAlign:'middle'},style)});};var JSONTab=function JSONTab(props){var attributeListDom=useRef(null);var _useState=useState(),_useState2=_slicedToArray(_useState,2),isHover=_useState2[0],setIsHover=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _props$value=props.value,value=_props$value===void 0?[{key:'类别1',value:'类别1'}]:_props$value,readonly=props.readonly,onChange=props.onChange,onSubmitAction=props.onSubmitAction,isAttributeList=props.isAttributeList;// useEffect(() => {\n//   setJsonCode(JSON.stringify(value, null, 2));\n//   const inputListLastDom: any = attributeListDom?.current;\n//   if (inputListLastDom) {\n//     inputListLastDom?.scrollIntoView({\n//       behavior: 'smooth',\n//       block: 'end'\n//     });\n//   }\n// }, [value]);\nvar addInputInfo=function addInputInfo(){onChange===null||onChange===void 0?void 0:onChange(addInputList(value,EDIT_SUBSELECTED));onSubmitAction===null||onSubmitAction===void 0?void 0:onSubmitAction();};// const changeTagType = (v: any) => {};\n// 更改标签工具里面的对应值\nvar changeInputInfo=function changeInputInfo(e,target,index){onChange===null||onChange===void 0?void 0:onChange(changeInputList(e,target,value,index));};// 删除对应输入\nvar deleteInputInfo=function deleteInputInfo(i){onChange===null||onChange===void 0?void 0:onChange(deleteInputList(value,i));// 删除行提交\nonSubmitAction===null||onSubmitAction===void 0?void 0:onSubmitAction();};return _jsxs(\"div\",{children:[value&&value.length>0&&(value===null||value===void 0?void 0:value.map(function(info,i){return _jsxs(\"div\",{className:\"labelu-input-wrap\",onMouseOver:function onMouseOver(e){e.stopPropagation();setIsHover(info.key+i);},onMouseLeave:function onMouseLeave(e){e.stopPropagation();setIsHover('');},children:[_jsxs(\"div\",{className:\"select\",children:[_jsx(\"span\",{className:\"inputSeria\",children:i+1}),_jsx(SenseInput,{className:\"labelu-input\",value:info.key,placeholder:t('Type'),onChange:function onChange(e){return changeInputInfo(e,'key',i);},disabled:readonly// addonBefore={isAttributeList && <ColorTag color={COLORS_ARRAY[i % 8]} />}\n}),_jsx(SenseInput,{className:'labelu-input',value:info.value,placeholder:t('Value'),onChange:function onChange(e){return changeInputInfo(e,'value',i);},disabled:readonly})]}),i>0&&!readonly&&isHover===(info===null||info===void 0?void 0:info.key)+i&&_jsx(CloseCircleFilled,{className:\"deleteIcon\",onClick:function onClick(){return deleteInputInfo(i);}})]},\"inputList_\".concat(i));})),!readonly&&_jsx(Button,{type:\"primary\",className:\"addButton\",onClick:function onClick(){return addInputInfo();},ref:attributeListDom,ghost:true,children:\"\\u65B0\\u5EFA\"})]});};export var MapStateJSONTab=JSONTab;","map":null,"metadata":{},"sourceType":"module"}