{"ast":null,"code":"export var getTableData=function getTableData(){var pageNum=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var pageSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;var totalData=arguments.length>2?arguments[2]:undefined;var total=totalData.length;var tableData={data:[],pageNum:pageNum,pageSize:pageSize,total:total};if(pageSize>=total){//pageSize大于等于总数据长度，说明只有1页数据或没有数据\ntableData.data=totalData;tableData.pageNum=1;//直接取第一页\n}else{//pageSize小于总数据长度，数据多余1页\nvar num=pageSize*(pageNum-1);//计算当前页（不含）之前的所有数据总条数\nif(num<total){//如果当前页之前所有数据总条数小于（不能等于）总的数据集长度，则说明当前页码没有超出最大页码\nvar startIndex=num;//当前页第一条数据在总数据集中的索引\nvar endIndex=num+pageSize-1;//当前页最后一条数据索引\ntableData.data=totalData.filter(function(_,index){return index>=startIndex&&index<=endIndex;});//当前页数据条数小于每页最大条数时，也按最大条数范围筛取数据\n}else{//当前页码超出最大页码，则计算实际最后一页的page，自动返回最后一页数据\nvar size=Math.ceil(total/pageSize);//取商\nvar rest=total%pageSize;//取余数\nif(rest>0){//余数大于0，说明实际最后一页数据不足pageSize，应该取size+1为最后一条的页码\ntableData.pageNum=size+1;//当前页码重置，取size+1\ntableData.data=totalData.filter(function(_,index){return index>=pageSize*size&&index<=total;});}else if(rest===0){//余数等于0，最后一页数据条数正好是pageSize\ntableData.pageNum=size;//当前页码重置，取size\ntableData.data=totalData.filter(function(_,index){return index>=pageSize*(size-1)&&index<=total;});}//注：余数不可能小于0\n}}return tableData;};","map":null,"metadata":{},"sourceType":"module"}